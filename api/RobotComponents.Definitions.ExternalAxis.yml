### YamlMime:ManagedReference
items:
- uid: RobotComponents.Definitions.ExternalAxis
  commentId: T:RobotComponents.Definitions.ExternalAxis
  id: ExternalAxis
  parent: RobotComponents.Definitions
  children:
  - RobotComponents.Definitions.ExternalAxis.#ctor
  - RobotComponents.Definitions.ExternalAxis.AttachmentPlane
  - RobotComponents.Definitions.ExternalAxis.AxisLimits
  - RobotComponents.Definitions.ExternalAxis.AxisLogic
  - RobotComponents.Definitions.ExternalAxis.AxisNumber
  - RobotComponents.Definitions.ExternalAxis.AxisPlane
  - RobotComponents.Definitions.ExternalAxis.AxisType
  - RobotComponents.Definitions.ExternalAxis.BaseMesh
  - RobotComponents.Definitions.ExternalAxis.CalculatePosition(RobotComponents.Actions.ExternalJointPosition,System.Boolean@)
  - RobotComponents.Definitions.ExternalAxis.CalculatePositionSave(RobotComponents.Actions.ExternalJointPosition)
  - RobotComponents.Definitions.ExternalAxis.CalculateTransformationMatrix(RobotComponents.Actions.ExternalJointPosition,System.Boolean@)
  - RobotComponents.Definitions.ExternalAxis.CalculateTransformationMatrixSave(RobotComponents.Actions.ExternalJointPosition)
  - RobotComponents.Definitions.ExternalAxis.DuplicateExternalAxis
  - RobotComponents.Definitions.ExternalAxis.DuplicateExternalAxisWithoutMesh
  - RobotComponents.Definitions.ExternalAxis.DuplicateMechanicalUnit
  - RobotComponents.Definitions.ExternalAxis.DuplicateMechanicalUnitWithoutMesh
  - RobotComponents.Definitions.ExternalAxis.GetBoundingBox(System.Boolean)
  - RobotComponents.Definitions.ExternalAxis.IsValid
  - RobotComponents.Definitions.ExternalAxis.LinkMesh
  - RobotComponents.Definitions.ExternalAxis.MovesRobot
  - RobotComponents.Definitions.ExternalAxis.Name
  - RobotComponents.Definitions.ExternalAxis.NumberOfAxes
  - RobotComponents.Definitions.ExternalAxis.PosedMeshes
  - RobotComponents.Definitions.ExternalAxis.PoseMeshes(RobotComponents.Actions.ExternalJointPosition)
  - RobotComponents.Definitions.ExternalAxis.PoseMeshes(RobotComponents.Actions.JointTarget)
  - RobotComponents.Definitions.ExternalAxis.ReInitialize
  - RobotComponents.Definitions.ExternalAxis.ToString
  - RobotComponents.Definitions.ExternalAxis.Transform(Rhino.Geometry.Transform)
  langs:
  - csharp
  - vb
  name: ExternalAxis
  nameWithType: ExternalAxis
  fullName: RobotComponents.Definitions.ExternalAxis
  type: Class
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nRepresents an abstract class for External Axes. \n"
  syntax:
    content: 'public abstract class ExternalAxis : IMechanicalUnit'
    content.vb: >-
      Public MustInherit Class ExternalAxis
          Implements IMechanicalUnit
  inheritance:
  - System.Object
  derivedClasses:
  - RobotComponents.Definitions.ExternalLinearAxis
  - RobotComponents.Definitions.ExternalRotationalAxis
  implements:
  - RobotComponents.Definitions.IMechanicalUnit
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: RobotComponents.Definitions.ExternalAxis.#ctor
  commentId: M:RobotComponents.Definitions.ExternalAxis.#ctor
  id: '#ctor'
  parent: RobotComponents.Definitions.ExternalAxis
  langs:
  - csharp
  - vb
  name: ExternalAxis()
  nameWithType: ExternalAxis.ExternalAxis()
  fullName: RobotComponents.Definitions.ExternalAxis.ExternalAxis()
  type: Constructor
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nInitializes an empty instance of the External Axis class. \n"
  syntax:
    content: public ExternalAxis()
    content.vb: Public Sub New
  overload: RobotComponents.Definitions.ExternalAxis.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RobotComponents.Definitions.ExternalAxis.DuplicateExternalAxis
  commentId: M:RobotComponents.Definitions.ExternalAxis.DuplicateExternalAxis
  id: DuplicateExternalAxis
  parent: RobotComponents.Definitions.ExternalAxis
  langs:
  - csharp
  - vb
  name: DuplicateExternalAxis()
  nameWithType: ExternalAxis.DuplicateExternalAxis()
  fullName: RobotComponents.Definitions.ExternalAxis.DuplicateExternalAxis()
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nReturns an exact duplicate of this External Axis.\n"
  syntax:
    content: public abstract ExternalAxis DuplicateExternalAxis()
    return:
      type: RobotComponents.Definitions.ExternalAxis
      description: 'A deep copy of the External Axis. '
    content.vb: Public MustOverride Function DuplicateExternalAxis As ExternalAxis
  overload: RobotComponents.Definitions.ExternalAxis.DuplicateExternalAxis*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: RobotComponents.Definitions.ExternalAxis.DuplicateExternalAxisWithoutMesh
  commentId: M:RobotComponents.Definitions.ExternalAxis.DuplicateExternalAxisWithoutMesh
  id: DuplicateExternalAxisWithoutMesh
  parent: RobotComponents.Definitions.ExternalAxis
  langs:
  - csharp
  - vb
  name: DuplicateExternalAxisWithoutMesh()
  nameWithType: ExternalAxis.DuplicateExternalAxisWithoutMesh()
  fullName: RobotComponents.Definitions.ExternalAxis.DuplicateExternalAxisWithoutMesh()
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nReturns an exact duplicate of this External Axis without meshes.\n"
  syntax:
    content: public abstract ExternalAxis DuplicateExternalAxisWithoutMesh()
    return:
      type: RobotComponents.Definitions.ExternalAxis
      description: 'A deep copy of the External Axis without meshes. '
    content.vb: Public MustOverride Function DuplicateExternalAxisWithoutMesh As ExternalAxis
  overload: RobotComponents.Definitions.ExternalAxis.DuplicateExternalAxisWithoutMesh*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: RobotComponents.Definitions.ExternalAxis.DuplicateMechanicalUnit
  commentId: M:RobotComponents.Definitions.ExternalAxis.DuplicateMechanicalUnit
  id: DuplicateMechanicalUnit
  parent: RobotComponents.Definitions.ExternalAxis
  langs:
  - csharp
  - vb
  name: DuplicateMechanicalUnit()
  nameWithType: ExternalAxis.DuplicateMechanicalUnit()
  fullName: RobotComponents.Definitions.ExternalAxis.DuplicateMechanicalUnit()
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nReturns an exact duplicate of this Mechanical Unit.\n"
  syntax:
    content: public abstract IMechanicalUnit DuplicateMechanicalUnit()
    return:
      type: RobotComponents.Definitions.IMechanicalUnit
      description: 'A deep copy of the Mechanical Unit. '
    content.vb: Public MustOverride Function DuplicateMechanicalUnit As IMechanicalUnit
  overload: RobotComponents.Definitions.ExternalAxis.DuplicateMechanicalUnit*
  implements:
  - RobotComponents.Definitions.IMechanicalUnit.DuplicateMechanicalUnit
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: RobotComponents.Definitions.ExternalAxis.DuplicateMechanicalUnitWithoutMesh
  commentId: M:RobotComponents.Definitions.ExternalAxis.DuplicateMechanicalUnitWithoutMesh
  id: DuplicateMechanicalUnitWithoutMesh
  parent: RobotComponents.Definitions.ExternalAxis
  langs:
  - csharp
  - vb
  name: DuplicateMechanicalUnitWithoutMesh()
  nameWithType: ExternalAxis.DuplicateMechanicalUnitWithoutMesh()
  fullName: RobotComponents.Definitions.ExternalAxis.DuplicateMechanicalUnitWithoutMesh()
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nReturns an exact duplicate of this Mechanical Unit without meshes.\n"
  syntax:
    content: public abstract IMechanicalUnit DuplicateMechanicalUnitWithoutMesh()
    return:
      type: RobotComponents.Definitions.IMechanicalUnit
      description: 'A deep copy of the Mechanical Unit without meshes. '
    content.vb: Public MustOverride Function DuplicateMechanicalUnitWithoutMesh As IMechanicalUnit
  overload: RobotComponents.Definitions.ExternalAxis.DuplicateMechanicalUnitWithoutMesh*
  implements:
  - RobotComponents.Definitions.IMechanicalUnit.DuplicateMechanicalUnitWithoutMesh
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: RobotComponents.Definitions.ExternalAxis.ToString
  commentId: M:RobotComponents.Definitions.ExternalAxis.ToString
  id: ToString
  parent: RobotComponents.Definitions.ExternalAxis
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ExternalAxis.ToString()
  fullName: RobotComponents.Definitions.ExternalAxis.ToString()
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nReturns a string that represents the current object.\n"
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: 'A string that represents the current object. '
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: RobotComponents.Definitions.ExternalAxis.ToString*
  implements:
  - RobotComponents.Definitions.IMechanicalUnit.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: RobotComponents.Definitions.ExternalAxis.CalculatePosition(RobotComponents.Actions.ExternalJointPosition,System.Boolean@)
  commentId: M:RobotComponents.Definitions.ExternalAxis.CalculatePosition(RobotComponents.Actions.ExternalJointPosition,System.Boolean@)
  id: CalculatePosition(RobotComponents.Actions.ExternalJointPosition,System.Boolean@)
  parent: RobotComponents.Definitions.ExternalAxis
  langs:
  - csharp
  - vb
  name: CalculatePosition(ExternalJointPosition, out Boolean)
  nameWithType: ExternalAxis.CalculatePosition(ExternalJointPosition, out Boolean)
  fullName: RobotComponents.Definitions.ExternalAxis.CalculatePosition(RobotComponents.Actions.ExternalJointPosition, out System.Boolean)
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nCalculates the position of the attachment plane for a given External Joint Position.\nThis calculation does not take into account the axis limits. \n"
  syntax:
    content: public abstract Plane CalculatePosition(ExternalJointPosition externalJointPosition, out bool inLimits)
    parameters:
    - id: externalJointPosition
      type: RobotComponents.Actions.ExternalJointPosition
      description: 'The External Joint Position. '
    - id: inLimits
      type: System.Boolean
      description: 'Specifies whether the External Joint Position is inside its limits. '
    return:
      type: Rhino.Geometry.Plane
      description: 'The posed attachement plane. '
    content.vb: Public MustOverride Function CalculatePosition(externalJointPosition As ExternalJointPosition, ByRef inLimits As Boolean) As Plane
  overload: RobotComponents.Definitions.ExternalAxis.CalculatePosition*
  nameWithType.vb: ExternalAxis.CalculatePosition(ExternalJointPosition, ByRef Boolean)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: RobotComponents.Definitions.ExternalAxis.CalculatePosition(RobotComponents.Actions.ExternalJointPosition, ByRef System.Boolean)
  name.vb: CalculatePosition(ExternalJointPosition, ByRef Boolean)
- uid: RobotComponents.Definitions.ExternalAxis.CalculateTransformationMatrix(RobotComponents.Actions.ExternalJointPosition,System.Boolean@)
  commentId: M:RobotComponents.Definitions.ExternalAxis.CalculateTransformationMatrix(RobotComponents.Actions.ExternalJointPosition,System.Boolean@)
  id: CalculateTransformationMatrix(RobotComponents.Actions.ExternalJointPosition,System.Boolean@)
  parent: RobotComponents.Definitions.ExternalAxis
  langs:
  - csharp
  - vb
  name: CalculateTransformationMatrix(ExternalJointPosition, out Boolean)
  nameWithType: ExternalAxis.CalculateTransformationMatrix(ExternalJointPosition, out Boolean)
  fullName: RobotComponents.Definitions.ExternalAxis.CalculateTransformationMatrix(RobotComponents.Actions.ExternalJointPosition, out System.Boolean)
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nCalculates the the transformation matrix for a given External Joint Position.\nThis calculation does not take into account the axis limits. \n"
  syntax:
    content: public abstract Transform CalculateTransformationMatrix(ExternalJointPosition externalJointPosition, out bool inLimits)
    parameters:
    - id: externalJointPosition
      type: RobotComponents.Actions.ExternalJointPosition
      description: 'The External Joint Position. '
    - id: inLimits
      type: System.Boolean
      description: 'Specifies whether the External Joint Position is inside its limits. '
    return:
      type: Rhino.Geometry.Transform
      description: 'The transformation matrix. '
    content.vb: Public MustOverride Function CalculateTransformationMatrix(externalJointPosition As ExternalJointPosition, ByRef inLimits As Boolean) As Transform
  overload: RobotComponents.Definitions.ExternalAxis.CalculateTransformationMatrix*
  nameWithType.vb: ExternalAxis.CalculateTransformationMatrix(ExternalJointPosition, ByRef Boolean)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: RobotComponents.Definitions.ExternalAxis.CalculateTransformationMatrix(RobotComponents.Actions.ExternalJointPosition, ByRef System.Boolean)
  name.vb: CalculateTransformationMatrix(ExternalJointPosition, ByRef Boolean)
- uid: RobotComponents.Definitions.ExternalAxis.CalculatePositionSave(RobotComponents.Actions.ExternalJointPosition)
  commentId: M:RobotComponents.Definitions.ExternalAxis.CalculatePositionSave(RobotComponents.Actions.ExternalJointPosition)
  id: CalculatePositionSave(RobotComponents.Actions.ExternalJointPosition)
  parent: RobotComponents.Definitions.ExternalAxis
  langs:
  - csharp
  - vb
  name: CalculatePositionSave(ExternalJointPosition)
  nameWithType: ExternalAxis.CalculatePositionSave(ExternalJointPosition)
  fullName: RobotComponents.Definitions.ExternalAxis.CalculatePositionSave(RobotComponents.Actions.ExternalJointPosition)
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nCalculates the position of the attachment plane for a given External Joint Position.\nThis calculations takes into account the external axis limits. \nIf the defined External Joint Posiiton is outside its limits the closest valid external axis value will be used.  \n"
  syntax:
    content: public abstract Plane CalculatePositionSave(ExternalJointPosition externalJointPosition)
    parameters:
    - id: externalJointPosition
      type: RobotComponents.Actions.ExternalJointPosition
      description: 'The External Joint Position. '
    return:
      type: Rhino.Geometry.Plane
      description: 'The posed attachement plane. '
    content.vb: Public MustOverride Function CalculatePositionSave(externalJointPosition As ExternalJointPosition) As Plane
  overload: RobotComponents.Definitions.ExternalAxis.CalculatePositionSave*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: RobotComponents.Definitions.ExternalAxis.CalculateTransformationMatrixSave(RobotComponents.Actions.ExternalJointPosition)
  commentId: M:RobotComponents.Definitions.ExternalAxis.CalculateTransformationMatrixSave(RobotComponents.Actions.ExternalJointPosition)
  id: CalculateTransformationMatrixSave(RobotComponents.Actions.ExternalJointPosition)
  parent: RobotComponents.Definitions.ExternalAxis
  langs:
  - csharp
  - vb
  name: CalculateTransformationMatrixSave(ExternalJointPosition)
  nameWithType: ExternalAxis.CalculateTransformationMatrixSave(ExternalJointPosition)
  fullName: RobotComponents.Definitions.ExternalAxis.CalculateTransformationMatrixSave(RobotComponents.Actions.ExternalJointPosition)
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nCalculates the the transformation matrix for a given External Joint Position.\nThis calculations takes into account the external axis limits. \nIf the defined External Joint Posiiton is outside its limits the closest valid external axis value will be used. \n"
  syntax:
    content: public abstract Transform CalculateTransformationMatrixSave(ExternalJointPosition externalJointPosition)
    parameters:
    - id: externalJointPosition
      type: RobotComponents.Actions.ExternalJointPosition
      description: 'The External Joint Position. '
    return:
      type: Rhino.Geometry.Transform
      description: 'The transformation matrix. '
    content.vb: Public MustOverride Function CalculateTransformationMatrixSave(externalJointPosition As ExternalJointPosition) As Transform
  overload: RobotComponents.Definitions.ExternalAxis.CalculateTransformationMatrixSave*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: RobotComponents.Definitions.ExternalAxis.ReInitialize
  commentId: M:RobotComponents.Definitions.ExternalAxis.ReInitialize
  id: ReInitialize
  parent: RobotComponents.Definitions.ExternalAxis
  langs:
  - csharp
  - vb
  name: ReInitialize()
  nameWithType: ExternalAxis.ReInitialize()
  fullName: RobotComponents.Definitions.ExternalAxis.ReInitialize()
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nReinitializes the fields and properties to construct valid External Axis instance. \n"
  syntax:
    content: public abstract void ReInitialize()
    content.vb: Public MustOverride Sub ReInitialize
  overload: RobotComponents.Definitions.ExternalAxis.ReInitialize*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: RobotComponents.Definitions.ExternalAxis.PoseMeshes(RobotComponents.Actions.JointTarget)
  commentId: M:RobotComponents.Definitions.ExternalAxis.PoseMeshes(RobotComponents.Actions.JointTarget)
  id: PoseMeshes(RobotComponents.Actions.JointTarget)
  parent: RobotComponents.Definitions.ExternalAxis
  langs:
  - csharp
  - vb
  name: PoseMeshes(JointTarget)
  nameWithType: ExternalAxis.PoseMeshes(JointTarget)
  fullName: RobotComponents.Definitions.ExternalAxis.PoseMeshes(RobotComponents.Actions.JointTarget)
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nCalculates and returns the position of the meshes for a given Joint Target.\n"
  syntax:
    content: public abstract List<Mesh> PoseMeshes(JointTarget jointTarget)
    parameters:
    - id: jointTarget
      type: RobotComponents.Actions.JointTarget
      description: 'The Joint Target. '
    return:
      type: System.Collections.Generic.List{Rhino.Geometry.Mesh}
      description: 'The posed meshes. '
    content.vb: Public MustOverride Function PoseMeshes(jointTarget As JointTarget) As List(Of Mesh)
  overload: RobotComponents.Definitions.ExternalAxis.PoseMeshes*
  implements:
  - RobotComponents.Definitions.IMechanicalUnit.PoseMeshes(RobotComponents.Actions.JointTarget)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: RobotComponents.Definitions.ExternalAxis.PoseMeshes(RobotComponents.Actions.ExternalJointPosition)
  commentId: M:RobotComponents.Definitions.ExternalAxis.PoseMeshes(RobotComponents.Actions.ExternalJointPosition)
  id: PoseMeshes(RobotComponents.Actions.ExternalJointPosition)
  parent: RobotComponents.Definitions.ExternalAxis
  langs:
  - csharp
  - vb
  name: PoseMeshes(ExternalJointPosition)
  nameWithType: ExternalAxis.PoseMeshes(ExternalJointPosition)
  fullName: RobotComponents.Definitions.ExternalAxis.PoseMeshes(RobotComponents.Actions.ExternalJointPosition)
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nCalculates the position of the external axis meshes for a given External Joint Position.\n"
  syntax:
    content: public abstract List<Mesh> PoseMeshes(ExternalJointPosition externalJointPosition)
    parameters:
    - id: externalJointPosition
      type: RobotComponents.Actions.ExternalJointPosition
      description: 'The External Joint Position. '
    return:
      type: System.Collections.Generic.List{Rhino.Geometry.Mesh}
      description: 'The posed meshes. '
    content.vb: Public MustOverride Function PoseMeshes(externalJointPosition As ExternalJointPosition) As List(Of Mesh)
  overload: RobotComponents.Definitions.ExternalAxis.PoseMeshes*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: RobotComponents.Definitions.ExternalAxis.Transform(Rhino.Geometry.Transform)
  commentId: M:RobotComponents.Definitions.ExternalAxis.Transform(Rhino.Geometry.Transform)
  id: Transform(Rhino.Geometry.Transform)
  parent: RobotComponents.Definitions.ExternalAxis
  langs:
  - csharp
  - vb
  name: Transform(Transform)
  nameWithType: ExternalAxis.Transform(Transform)
  fullName: RobotComponents.Definitions.ExternalAxis.Transform(Rhino.Geometry.Transform)
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nTransforms the external axis spatial properties (planes and meshes). \n"
  syntax:
    content: public abstract void Transform(Transform xform)
    parameters:
    - id: xform
      type: Rhino.Geometry.Transform
      description: 'The spatial deform. '
    content.vb: Public MustOverride Sub Transform(xform As Transform)
  overload: RobotComponents.Definitions.ExternalAxis.Transform*
  implements:
  - RobotComponents.Definitions.IMechanicalUnit.Transform(Rhino.Geometry.Transform)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: RobotComponents.Definitions.ExternalAxis.GetBoundingBox(System.Boolean)
  commentId: M:RobotComponents.Definitions.ExternalAxis.GetBoundingBox(System.Boolean)
  id: GetBoundingBox(System.Boolean)
  parent: RobotComponents.Definitions.ExternalAxis
  langs:
  - csharp
  - vb
  name: GetBoundingBox(Boolean)
  nameWithType: ExternalAxis.GetBoundingBox(Boolean)
  fullName: RobotComponents.Definitions.ExternalAxis.GetBoundingBox(System.Boolean)
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nReturns the Bounding Box of the object.\n"
  syntax:
    content: public abstract BoundingBox GetBoundingBox(bool accurate)
    parameters:
    - id: accurate
      type: System.Boolean
      description: 'If true, a physically accurate bounding box will be computed. If not, a bounding box estimate will be computed. '
    return:
      type: Rhino.Geometry.BoundingBox
      description: 'The Bounding Box. '
    content.vb: Public MustOverride Function GetBoundingBox(accurate As Boolean) As BoundingBox
  overload: RobotComponents.Definitions.ExternalAxis.GetBoundingBox*
  implements:
  - RobotComponents.Definitions.IMechanicalUnit.GetBoundingBox(System.Boolean)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: RobotComponents.Definitions.ExternalAxis.IsValid
  commentId: P:RobotComponents.Definitions.ExternalAxis.IsValid
  id: IsValid
  parent: RobotComponents.Definitions.ExternalAxis
  langs:
  - csharp
  - vb
  name: IsValid
  nameWithType: ExternalAxis.IsValid
  fullName: RobotComponents.Definitions.ExternalAxis.IsValid
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nGets a value indicating whether or not the object is valid.\n"
  syntax:
    content: public abstract bool IsValid { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public MustOverride ReadOnly Property IsValid As Boolean
  overload: RobotComponents.Definitions.ExternalAxis.IsValid*
  implements:
  - RobotComponents.Definitions.IMechanicalUnit.IsValid
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: RobotComponents.Definitions.ExternalAxis.Name
  commentId: P:RobotComponents.Definitions.ExternalAxis.Name
  id: Name
  parent: RobotComponents.Definitions.ExternalAxis
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ExternalAxis.Name
  fullName: RobotComponents.Definitions.ExternalAxis.Name
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nGets or sets the external axis name. \n"
  syntax:
    content: public abstract string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public MustOverride Property Name As String
  overload: RobotComponents.Definitions.ExternalAxis.Name*
  implements:
  - RobotComponents.Definitions.IMechanicalUnit.Name
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: RobotComponents.Definitions.ExternalAxis.AxisLimits
  commentId: P:RobotComponents.Definitions.ExternalAxis.AxisLimits
  id: AxisLimits
  parent: RobotComponents.Definitions.ExternalAxis
  langs:
  - csharp
  - vb
  name: AxisLimits
  nameWithType: ExternalAxis.AxisLimits
  fullName: RobotComponents.Definitions.ExternalAxis.AxisLimits
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nGets or sets the axis limits.\n"
  syntax:
    content: public abstract Interval AxisLimits { get; set; }
    parameters: []
    return:
      type: Rhino.Geometry.Interval
    content.vb: Public MustOverride Property AxisLimits As Interval
  overload: RobotComponents.Definitions.ExternalAxis.AxisLimits*
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: RobotComponents.Definitions.ExternalAxis.AxisType
  commentId: P:RobotComponents.Definitions.ExternalAxis.AxisType
  id: AxisType
  parent: RobotComponents.Definitions.ExternalAxis
  langs:
  - csharp
  - vb
  name: AxisType
  nameWithType: ExternalAxis.AxisType
  fullName: RobotComponents.Definitions.ExternalAxis.AxisType
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nGets the Axis Type.\n"
  syntax:
    content: public abstract AxisType AxisType { get; }
    parameters: []
    return:
      type: RobotComponents.Enumerations.AxisType
    content.vb: Public MustOverride ReadOnly Property AxisType As AxisType
  overload: RobotComponents.Definitions.ExternalAxis.AxisType*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: RobotComponents.Definitions.ExternalAxis.AttachmentPlane
  commentId: P:RobotComponents.Definitions.ExternalAxis.AttachmentPlane
  id: AttachmentPlane
  parent: RobotComponents.Definitions.ExternalAxis
  langs:
  - csharp
  - vb
  name: AttachmentPlane
  nameWithType: ExternalAxis.AttachmentPlane
  fullName: RobotComponents.Definitions.ExternalAxis.AttachmentPlane
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nGets or sets the attachment plane to attach a robot or work object.\n"
  syntax:
    content: public abstract Plane AttachmentPlane { get; set; }
    parameters: []
    return:
      type: Rhino.Geometry.Plane
    content.vb: Public MustOverride Property AttachmentPlane As Plane
  overload: RobotComponents.Definitions.ExternalAxis.AttachmentPlane*
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: RobotComponents.Definitions.ExternalAxis.AxisPlane
  commentId: P:RobotComponents.Definitions.ExternalAxis.AxisPlane
  id: AxisPlane
  parent: RobotComponents.Definitions.ExternalAxis
  langs:
  - csharp
  - vb
  name: AxisPlane
  nameWithType: ExternalAxis.AxisPlane
  fullName: RobotComponents.Definitions.ExternalAxis.AxisPlane
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nGets or sets the axis plane.\nIn case of a rotational axis the z-axis of the plane defines the rotation center. \nIn case of linear axis the z-axis of the plane defines the movement direction.\n"
  syntax:
    content: public abstract Plane AxisPlane { get; set; }
    parameters: []
    return:
      type: Rhino.Geometry.Plane
    content.vb: Public MustOverride Property AxisPlane As Plane
  overload: RobotComponents.Definitions.ExternalAxis.AxisPlane*
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: RobotComponents.Definitions.ExternalAxis.AxisNumber
  commentId: P:RobotComponents.Definitions.ExternalAxis.AxisNumber
  id: AxisNumber
  parent: RobotComponents.Definitions.ExternalAxis
  langs:
  - csharp
  - vb
  name: AxisNumber
  nameWithType: ExternalAxis.AxisNumber
  fullName: RobotComponents.Definitions.ExternalAxis.AxisNumber
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nGets or sets the axis logic as a number (-1, 0, 1, 2, 3, 4, 5).\n"
  syntax:
    content: public abstract int AxisNumber { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public MustOverride Property AxisNumber As Integer
  overload: RobotComponents.Definitions.ExternalAxis.AxisNumber*
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: RobotComponents.Definitions.ExternalAxis.AxisLogic
  commentId: P:RobotComponents.Definitions.ExternalAxis.AxisLogic
  id: AxisLogic
  parent: RobotComponents.Definitions.ExternalAxis
  langs:
  - csharp
  - vb
  name: AxisLogic
  nameWithType: ExternalAxis.AxisLogic
  fullName: RobotComponents.Definitions.ExternalAxis.AxisLogic
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nGets the axis logic as a char (-, A, B, C, E, E, F).\n"
  syntax:
    content: public abstract char AxisLogic { get; set; }
    parameters: []
    return:
      type: System.Char
    content.vb: Public MustOverride Property AxisLogic As Char
  overload: RobotComponents.Definitions.ExternalAxis.AxisLogic*
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: RobotComponents.Definitions.ExternalAxis.BaseMesh
  commentId: P:RobotComponents.Definitions.ExternalAxis.BaseMesh
  id: BaseMesh
  parent: RobotComponents.Definitions.ExternalAxis
  langs:
  - csharp
  - vb
  name: BaseMesh
  nameWithType: ExternalAxis.BaseMesh
  fullName: RobotComponents.Definitions.ExternalAxis.BaseMesh
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nGets or sets the fixed base mesh of the external axis. \n"
  syntax:
    content: public abstract Mesh BaseMesh { get; set; }
    parameters: []
    return:
      type: Rhino.Geometry.Mesh
    content.vb: Public MustOverride Property BaseMesh As Mesh
  overload: RobotComponents.Definitions.ExternalAxis.BaseMesh*
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: RobotComponents.Definitions.ExternalAxis.LinkMesh
  commentId: P:RobotComponents.Definitions.ExternalAxis.LinkMesh
  id: LinkMesh
  parent: RobotComponents.Definitions.ExternalAxis
  langs:
  - csharp
  - vb
  name: LinkMesh
  nameWithType: ExternalAxis.LinkMesh
  fullName: RobotComponents.Definitions.ExternalAxis.LinkMesh
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nGets or sets the movable link mesh of the external axis posed for external axis value set to 0. \n"
  syntax:
    content: public abstract Mesh LinkMesh { get; set; }
    parameters: []
    return:
      type: Rhino.Geometry.Mesh
    content.vb: Public MustOverride Property LinkMesh As Mesh
  overload: RobotComponents.Definitions.ExternalAxis.LinkMesh*
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: RobotComponents.Definitions.ExternalAxis.PosedMeshes
  commentId: P:RobotComponents.Definitions.ExternalAxis.PosedMeshes
  id: PosedMeshes
  parent: RobotComponents.Definitions.ExternalAxis
  langs:
  - csharp
  - vb
  name: PosedMeshes
  nameWithType: ExternalAxis.PosedMeshes
  fullName: RobotComponents.Definitions.ExternalAxis.PosedMeshes
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nGets latest calculated posed axis meshes.\n"
  syntax:
    content: public abstract List<Mesh> PosedMeshes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Rhino.Geometry.Mesh}
    content.vb: Public MustOverride ReadOnly Property PosedMeshes As List(Of Mesh)
  overload: RobotComponents.Definitions.ExternalAxis.PosedMeshes*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: RobotComponents.Definitions.ExternalAxis.MovesRobot
  commentId: P:RobotComponents.Definitions.ExternalAxis.MovesRobot
  id: MovesRobot
  parent: RobotComponents.Definitions.ExternalAxis
  langs:
  - csharp
  - vb
  name: MovesRobot
  nameWithType: ExternalAxis.MovesRobot
  fullName: RobotComponents.Definitions.ExternalAxis.MovesRobot
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nGets a value indicating whether or not this External Axis moves the Robot.\n"
  syntax:
    content: public abstract bool MovesRobot { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public MustOverride Property MovesRobot As Boolean
  overload: RobotComponents.Definitions.ExternalAxis.MovesRobot*
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: RobotComponents.Definitions.ExternalAxis.NumberOfAxes
  commentId: P:RobotComponents.Definitions.ExternalAxis.NumberOfAxes
  id: NumberOfAxes
  parent: RobotComponents.Definitions.ExternalAxis
  langs:
  - csharp
  - vb
  name: NumberOfAxes
  nameWithType: ExternalAxis.NumberOfAxes
  fullName: RobotComponents.Definitions.ExternalAxis.NumberOfAxes
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nGets the number of axes for the mechanical unit.\n"
  syntax:
    content: public abstract int NumberOfAxes { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public MustOverride ReadOnly Property NumberOfAxes As Integer
  overload: RobotComponents.Definitions.ExternalAxis.NumberOfAxes*
  implements:
  - RobotComponents.Definitions.IMechanicalUnit.NumberOfAxes
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
references:
- uid: RobotComponents.Definitions
  commentId: N:RobotComponents.Definitions
  isExternal: true
  name: RobotComponents.Definitions
  nameWithType: RobotComponents.Definitions
  fullName: RobotComponents.Definitions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: RobotComponents.Definitions.IMechanicalUnit
  commentId: T:RobotComponents.Definitions.IMechanicalUnit
  parent: RobotComponents.Definitions
  isExternal: true
  name: IMechanicalUnit
  nameWithType: IMechanicalUnit
  fullName: RobotComponents.Definitions.IMechanicalUnit
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: RobotComponents.Definitions.ExternalAxis.#ctor*
  commentId: Overload:RobotComponents.Definitions.ExternalAxis.#ctor
  isExternal: true
  name: ExternalAxis
  nameWithType: ExternalAxis.ExternalAxis
  fullName: RobotComponents.Definitions.ExternalAxis.ExternalAxis
- uid: RobotComponents.Definitions.ExternalAxis.DuplicateExternalAxis*
  commentId: Overload:RobotComponents.Definitions.ExternalAxis.DuplicateExternalAxis
  isExternal: true
  name: DuplicateExternalAxis
  nameWithType: ExternalAxis.DuplicateExternalAxis
  fullName: RobotComponents.Definitions.ExternalAxis.DuplicateExternalAxis
- uid: RobotComponents.Definitions.ExternalAxis
  commentId: T:RobotComponents.Definitions.ExternalAxis
  parent: RobotComponents.Definitions
  isExternal: true
  name: ExternalAxis
  nameWithType: ExternalAxis
  fullName: RobotComponents.Definitions.ExternalAxis
- uid: RobotComponents.Definitions.ExternalAxis.DuplicateExternalAxisWithoutMesh*
  commentId: Overload:RobotComponents.Definitions.ExternalAxis.DuplicateExternalAxisWithoutMesh
  isExternal: true
  name: DuplicateExternalAxisWithoutMesh
  nameWithType: ExternalAxis.DuplicateExternalAxisWithoutMesh
  fullName: RobotComponents.Definitions.ExternalAxis.DuplicateExternalAxisWithoutMesh
- uid: RobotComponents.Definitions.ExternalAxis.DuplicateMechanicalUnit*
  commentId: Overload:RobotComponents.Definitions.ExternalAxis.DuplicateMechanicalUnit
  isExternal: true
  name: DuplicateMechanicalUnit
  nameWithType: ExternalAxis.DuplicateMechanicalUnit
  fullName: RobotComponents.Definitions.ExternalAxis.DuplicateMechanicalUnit
- uid: RobotComponents.Definitions.IMechanicalUnit.DuplicateMechanicalUnit
  commentId: M:RobotComponents.Definitions.IMechanicalUnit.DuplicateMechanicalUnit
  parent: RobotComponents.Definitions.IMechanicalUnit
  isExternal: true
  name: DuplicateMechanicalUnit()
  nameWithType: IMechanicalUnit.DuplicateMechanicalUnit()
  fullName: RobotComponents.Definitions.IMechanicalUnit.DuplicateMechanicalUnit()
  spec.csharp:
  - uid: RobotComponents.Definitions.IMechanicalUnit.DuplicateMechanicalUnit
    name: DuplicateMechanicalUnit
    nameWithType: IMechanicalUnit.DuplicateMechanicalUnit
    fullName: RobotComponents.Definitions.IMechanicalUnit.DuplicateMechanicalUnit
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RobotComponents.Definitions.IMechanicalUnit.DuplicateMechanicalUnit
    name: DuplicateMechanicalUnit
    nameWithType: IMechanicalUnit.DuplicateMechanicalUnit
    fullName: RobotComponents.Definitions.IMechanicalUnit.DuplicateMechanicalUnit
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: RobotComponents.Definitions.ExternalAxis.DuplicateMechanicalUnitWithoutMesh*
  commentId: Overload:RobotComponents.Definitions.ExternalAxis.DuplicateMechanicalUnitWithoutMesh
  isExternal: true
  name: DuplicateMechanicalUnitWithoutMesh
  nameWithType: ExternalAxis.DuplicateMechanicalUnitWithoutMesh
  fullName: RobotComponents.Definitions.ExternalAxis.DuplicateMechanicalUnitWithoutMesh
- uid: RobotComponents.Definitions.IMechanicalUnit.DuplicateMechanicalUnitWithoutMesh
  commentId: M:RobotComponents.Definitions.IMechanicalUnit.DuplicateMechanicalUnitWithoutMesh
  parent: RobotComponents.Definitions.IMechanicalUnit
  isExternal: true
  name: DuplicateMechanicalUnitWithoutMesh()
  nameWithType: IMechanicalUnit.DuplicateMechanicalUnitWithoutMesh()
  fullName: RobotComponents.Definitions.IMechanicalUnit.DuplicateMechanicalUnitWithoutMesh()
  spec.csharp:
  - uid: RobotComponents.Definitions.IMechanicalUnit.DuplicateMechanicalUnitWithoutMesh
    name: DuplicateMechanicalUnitWithoutMesh
    nameWithType: IMechanicalUnit.DuplicateMechanicalUnitWithoutMesh
    fullName: RobotComponents.Definitions.IMechanicalUnit.DuplicateMechanicalUnitWithoutMesh
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RobotComponents.Definitions.IMechanicalUnit.DuplicateMechanicalUnitWithoutMesh
    name: DuplicateMechanicalUnitWithoutMesh
    nameWithType: IMechanicalUnit.DuplicateMechanicalUnitWithoutMesh
    fullName: RobotComponents.Definitions.IMechanicalUnit.DuplicateMechanicalUnitWithoutMesh
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: RobotComponents.Definitions.ExternalAxis.ToString*
  commentId: Overload:RobotComponents.Definitions.ExternalAxis.ToString
  isExternal: true
  name: ToString
  nameWithType: ExternalAxis.ToString
  fullName: RobotComponents.Definitions.ExternalAxis.ToString
- uid: RobotComponents.Definitions.IMechanicalUnit.ToString
  commentId: M:RobotComponents.Definitions.IMechanicalUnit.ToString
  parent: RobotComponents.Definitions.IMechanicalUnit
  isExternal: true
  name: ToString()
  nameWithType: IMechanicalUnit.ToString()
  fullName: RobotComponents.Definitions.IMechanicalUnit.ToString()
  spec.csharp:
  - uid: RobotComponents.Definitions.IMechanicalUnit.ToString
    name: ToString
    nameWithType: IMechanicalUnit.ToString
    fullName: RobotComponents.Definitions.IMechanicalUnit.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RobotComponents.Definitions.IMechanicalUnit.ToString
    name: ToString
    nameWithType: IMechanicalUnit.ToString
    fullName: RobotComponents.Definitions.IMechanicalUnit.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: RobotComponents.Definitions.ExternalAxis.CalculatePosition*
  commentId: Overload:RobotComponents.Definitions.ExternalAxis.CalculatePosition
  isExternal: true
  name: CalculatePosition
  nameWithType: ExternalAxis.CalculatePosition
  fullName: RobotComponents.Definitions.ExternalAxis.CalculatePosition
- uid: RobotComponents.Actions.ExternalJointPosition
  commentId: T:RobotComponents.Actions.ExternalJointPosition
  parent: RobotComponents.Actions
  isExternal: true
  name: ExternalJointPosition
  nameWithType: ExternalJointPosition
  fullName: RobotComponents.Actions.ExternalJointPosition
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Rhino.Geometry.Plane
  isExternal: true
  name: Plane
  nameWithType: Plane
  fullName: Rhino.Geometry.Plane
- uid: RobotComponents.Actions
  commentId: N:RobotComponents.Actions
  isExternal: true
  name: RobotComponents.Actions
  nameWithType: RobotComponents.Actions
  fullName: RobotComponents.Actions
- uid: RobotComponents.Definitions.ExternalAxis.CalculateTransformationMatrix*
  commentId: Overload:RobotComponents.Definitions.ExternalAxis.CalculateTransformationMatrix
  isExternal: true
  name: CalculateTransformationMatrix
  nameWithType: ExternalAxis.CalculateTransformationMatrix
  fullName: RobotComponents.Definitions.ExternalAxis.CalculateTransformationMatrix
- uid: Rhino.Geometry.Transform
  isExternal: true
  name: Transform
  nameWithType: Transform
  fullName: Rhino.Geometry.Transform
- uid: RobotComponents.Definitions.ExternalAxis.CalculatePositionSave*
  commentId: Overload:RobotComponents.Definitions.ExternalAxis.CalculatePositionSave
  isExternal: true
  name: CalculatePositionSave
  nameWithType: ExternalAxis.CalculatePositionSave
  fullName: RobotComponents.Definitions.ExternalAxis.CalculatePositionSave
- uid: RobotComponents.Definitions.ExternalAxis.CalculateTransformationMatrixSave*
  commentId: Overload:RobotComponents.Definitions.ExternalAxis.CalculateTransformationMatrixSave
  isExternal: true
  name: CalculateTransformationMatrixSave
  nameWithType: ExternalAxis.CalculateTransformationMatrixSave
  fullName: RobotComponents.Definitions.ExternalAxis.CalculateTransformationMatrixSave
- uid: RobotComponents.Definitions.ExternalAxis.ReInitialize*
  commentId: Overload:RobotComponents.Definitions.ExternalAxis.ReInitialize
  isExternal: true
  name: ReInitialize
  nameWithType: ExternalAxis.ReInitialize
  fullName: RobotComponents.Definitions.ExternalAxis.ReInitialize
- uid: RobotComponents.Definitions.ExternalAxis.PoseMeshes*
  commentId: Overload:RobotComponents.Definitions.ExternalAxis.PoseMeshes
  isExternal: true
  name: PoseMeshes
  nameWithType: ExternalAxis.PoseMeshes
  fullName: RobotComponents.Definitions.ExternalAxis.PoseMeshes
- uid: RobotComponents.Definitions.IMechanicalUnit.PoseMeshes(RobotComponents.Actions.JointTarget)
  commentId: M:RobotComponents.Definitions.IMechanicalUnit.PoseMeshes(RobotComponents.Actions.JointTarget)
  parent: RobotComponents.Definitions.IMechanicalUnit
  isExternal: true
  name: PoseMeshes(JointTarget)
  nameWithType: IMechanicalUnit.PoseMeshes(JointTarget)
  fullName: RobotComponents.Definitions.IMechanicalUnit.PoseMeshes(RobotComponents.Actions.JointTarget)
  spec.csharp:
  - uid: RobotComponents.Definitions.IMechanicalUnit.PoseMeshes(RobotComponents.Actions.JointTarget)
    name: PoseMeshes
    nameWithType: IMechanicalUnit.PoseMeshes
    fullName: RobotComponents.Definitions.IMechanicalUnit.PoseMeshes
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: RobotComponents.Actions.JointTarget
    name: JointTarget
    nameWithType: JointTarget
    fullName: RobotComponents.Actions.JointTarget
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RobotComponents.Definitions.IMechanicalUnit.PoseMeshes(RobotComponents.Actions.JointTarget)
    name: PoseMeshes
    nameWithType: IMechanicalUnit.PoseMeshes
    fullName: RobotComponents.Definitions.IMechanicalUnit.PoseMeshes
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: RobotComponents.Actions.JointTarget
    name: JointTarget
    nameWithType: JointTarget
    fullName: RobotComponents.Actions.JointTarget
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RobotComponents.Actions.JointTarget
  commentId: T:RobotComponents.Actions.JointTarget
  parent: RobotComponents.Actions
  isExternal: true
  name: JointTarget
  nameWithType: JointTarget
  fullName: RobotComponents.Actions.JointTarget
- uid: System.Collections.Generic.List{Rhino.Geometry.Mesh}
  commentId: T:System.Collections.Generic.List{Rhino.Geometry.Mesh}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Mesh>
  nameWithType: List<Mesh>
  fullName: System.Collections.Generic.List<Rhino.Geometry.Mesh>
  nameWithType.vb: List(Of Mesh)
  fullName.vb: System.Collections.Generic.List(Of Rhino.Geometry.Mesh)
  name.vb: List(Of Mesh)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Rhino.Geometry.Mesh
    name: Mesh
    nameWithType: Mesh
    fullName: Rhino.Geometry.Mesh
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Rhino.Geometry.Mesh
    name: Mesh
    nameWithType: Mesh
    fullName: Rhino.Geometry.Mesh
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: RobotComponents.Definitions.ExternalAxis.Transform*
  commentId: Overload:RobotComponents.Definitions.ExternalAxis.Transform
  isExternal: true
  name: Transform
  nameWithType: ExternalAxis.Transform
  fullName: RobotComponents.Definitions.ExternalAxis.Transform
- uid: RobotComponents.Definitions.IMechanicalUnit.Transform(Rhino.Geometry.Transform)
  commentId: M:RobotComponents.Definitions.IMechanicalUnit.Transform(Rhino.Geometry.Transform)
  parent: RobotComponents.Definitions.IMechanicalUnit
  isExternal: true
  name: Transform(Transform)
  nameWithType: IMechanicalUnit.Transform(Transform)
  fullName: RobotComponents.Definitions.IMechanicalUnit.Transform(Rhino.Geometry.Transform)
  spec.csharp:
  - uid: RobotComponents.Definitions.IMechanicalUnit.Transform(Rhino.Geometry.Transform)
    name: Transform
    nameWithType: IMechanicalUnit.Transform
    fullName: RobotComponents.Definitions.IMechanicalUnit.Transform
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Transform
    name: Transform
    nameWithType: Transform
    fullName: Rhino.Geometry.Transform
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RobotComponents.Definitions.IMechanicalUnit.Transform(Rhino.Geometry.Transform)
    name: Transform
    nameWithType: IMechanicalUnit.Transform
    fullName: RobotComponents.Definitions.IMechanicalUnit.Transform
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Transform
    name: Transform
    nameWithType: Transform
    fullName: Rhino.Geometry.Transform
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RobotComponents.Definitions.ExternalAxis.GetBoundingBox*
  commentId: Overload:RobotComponents.Definitions.ExternalAxis.GetBoundingBox
  isExternal: true
  name: GetBoundingBox
  nameWithType: ExternalAxis.GetBoundingBox
  fullName: RobotComponents.Definitions.ExternalAxis.GetBoundingBox
- uid: RobotComponents.Definitions.IMechanicalUnit.GetBoundingBox(System.Boolean)
  commentId: M:RobotComponents.Definitions.IMechanicalUnit.GetBoundingBox(System.Boolean)
  parent: RobotComponents.Definitions.IMechanicalUnit
  isExternal: true
  name: GetBoundingBox(Boolean)
  nameWithType: IMechanicalUnit.GetBoundingBox(Boolean)
  fullName: RobotComponents.Definitions.IMechanicalUnit.GetBoundingBox(System.Boolean)
  spec.csharp:
  - uid: RobotComponents.Definitions.IMechanicalUnit.GetBoundingBox(System.Boolean)
    name: GetBoundingBox
    nameWithType: IMechanicalUnit.GetBoundingBox
    fullName: RobotComponents.Definitions.IMechanicalUnit.GetBoundingBox
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RobotComponents.Definitions.IMechanicalUnit.GetBoundingBox(System.Boolean)
    name: GetBoundingBox
    nameWithType: IMechanicalUnit.GetBoundingBox
    fullName: RobotComponents.Definitions.IMechanicalUnit.GetBoundingBox
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.BoundingBox
  isExternal: true
  name: BoundingBox
  nameWithType: BoundingBox
  fullName: Rhino.Geometry.BoundingBox
- uid: RobotComponents.Definitions.ExternalAxis.IsValid*
  commentId: Overload:RobotComponents.Definitions.ExternalAxis.IsValid
  isExternal: true
  name: IsValid
  nameWithType: ExternalAxis.IsValid
  fullName: RobotComponents.Definitions.ExternalAxis.IsValid
- uid: RobotComponents.Definitions.IMechanicalUnit.IsValid
  commentId: P:RobotComponents.Definitions.IMechanicalUnit.IsValid
  parent: RobotComponents.Definitions.IMechanicalUnit
  isExternal: true
  name: IsValid
  nameWithType: IMechanicalUnit.IsValid
  fullName: RobotComponents.Definitions.IMechanicalUnit.IsValid
- uid: RobotComponents.Definitions.ExternalAxis.Name*
  commentId: Overload:RobotComponents.Definitions.ExternalAxis.Name
  isExternal: true
  name: Name
  nameWithType: ExternalAxis.Name
  fullName: RobotComponents.Definitions.ExternalAxis.Name
- uid: RobotComponents.Definitions.IMechanicalUnit.Name
  commentId: P:RobotComponents.Definitions.IMechanicalUnit.Name
  parent: RobotComponents.Definitions.IMechanicalUnit
  isExternal: true
  name: Name
  nameWithType: IMechanicalUnit.Name
  fullName: RobotComponents.Definitions.IMechanicalUnit.Name
- uid: RobotComponents.Definitions.ExternalAxis.AxisLimits*
  commentId: Overload:RobotComponents.Definitions.ExternalAxis.AxisLimits
  isExternal: true
  name: AxisLimits
  nameWithType: ExternalAxis.AxisLimits
  fullName: RobotComponents.Definitions.ExternalAxis.AxisLimits
- uid: Rhino.Geometry.Interval
  isExternal: true
  name: Interval
  nameWithType: Interval
  fullName: Rhino.Geometry.Interval
- uid: RobotComponents.Definitions.ExternalAxis.AxisType*
  commentId: Overload:RobotComponents.Definitions.ExternalAxis.AxisType
  isExternal: true
  name: AxisType
  nameWithType: ExternalAxis.AxisType
  fullName: RobotComponents.Definitions.ExternalAxis.AxisType
- uid: RobotComponents.Enumerations.AxisType
  commentId: T:RobotComponents.Enumerations.AxisType
  parent: RobotComponents.Enumerations
  isExternal: true
  name: AxisType
  nameWithType: AxisType
  fullName: RobotComponents.Enumerations.AxisType
- uid: RobotComponents.Enumerations
  commentId: N:RobotComponents.Enumerations
  isExternal: true
  name: RobotComponents.Enumerations
  nameWithType: RobotComponents.Enumerations
  fullName: RobotComponents.Enumerations
- uid: RobotComponents.Definitions.ExternalAxis.AttachmentPlane*
  commentId: Overload:RobotComponents.Definitions.ExternalAxis.AttachmentPlane
  isExternal: true
  name: AttachmentPlane
  nameWithType: ExternalAxis.AttachmentPlane
  fullName: RobotComponents.Definitions.ExternalAxis.AttachmentPlane
- uid: RobotComponents.Definitions.ExternalAxis.AxisPlane*
  commentId: Overload:RobotComponents.Definitions.ExternalAxis.AxisPlane
  isExternal: true
  name: AxisPlane
  nameWithType: ExternalAxis.AxisPlane
  fullName: RobotComponents.Definitions.ExternalAxis.AxisPlane
- uid: RobotComponents.Definitions.ExternalAxis.AxisNumber*
  commentId: Overload:RobotComponents.Definitions.ExternalAxis.AxisNumber
  isExternal: true
  name: AxisNumber
  nameWithType: ExternalAxis.AxisNumber
  fullName: RobotComponents.Definitions.ExternalAxis.AxisNumber
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: RobotComponents.Definitions.ExternalAxis.AxisLogic*
  commentId: Overload:RobotComponents.Definitions.ExternalAxis.AxisLogic
  isExternal: true
  name: AxisLogic
  nameWithType: ExternalAxis.AxisLogic
  fullName: RobotComponents.Definitions.ExternalAxis.AxisLogic
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: RobotComponents.Definitions.ExternalAxis.BaseMesh*
  commentId: Overload:RobotComponents.Definitions.ExternalAxis.BaseMesh
  isExternal: true
  name: BaseMesh
  nameWithType: ExternalAxis.BaseMesh
  fullName: RobotComponents.Definitions.ExternalAxis.BaseMesh
- uid: Rhino.Geometry.Mesh
  isExternal: true
  name: Mesh
  nameWithType: Mesh
  fullName: Rhino.Geometry.Mesh
- uid: RobotComponents.Definitions.ExternalAxis.LinkMesh*
  commentId: Overload:RobotComponents.Definitions.ExternalAxis.LinkMesh
  isExternal: true
  name: LinkMesh
  nameWithType: ExternalAxis.LinkMesh
  fullName: RobotComponents.Definitions.ExternalAxis.LinkMesh
- uid: RobotComponents.Definitions.ExternalAxis.PosedMeshes*
  commentId: Overload:RobotComponents.Definitions.ExternalAxis.PosedMeshes
  isExternal: true
  name: PosedMeshes
  nameWithType: ExternalAxis.PosedMeshes
  fullName: RobotComponents.Definitions.ExternalAxis.PosedMeshes
- uid: RobotComponents.Definitions.ExternalAxis.MovesRobot*
  commentId: Overload:RobotComponents.Definitions.ExternalAxis.MovesRobot
  isExternal: true
  name: MovesRobot
  nameWithType: ExternalAxis.MovesRobot
  fullName: RobotComponents.Definitions.ExternalAxis.MovesRobot
- uid: RobotComponents.Definitions.ExternalAxis.NumberOfAxes*
  commentId: Overload:RobotComponents.Definitions.ExternalAxis.NumberOfAxes
  isExternal: true
  name: NumberOfAxes
  nameWithType: ExternalAxis.NumberOfAxes
  fullName: RobotComponents.Definitions.ExternalAxis.NumberOfAxes
- uid: RobotComponents.Definitions.IMechanicalUnit.NumberOfAxes
  commentId: P:RobotComponents.Definitions.IMechanicalUnit.NumberOfAxes
  parent: RobotComponents.Definitions.IMechanicalUnit
  isExternal: true
  name: NumberOfAxes
  nameWithType: IMechanicalUnit.NumberOfAxes
  fullName: RobotComponents.Definitions.IMechanicalUnit.NumberOfAxes
