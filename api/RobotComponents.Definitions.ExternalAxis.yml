### YamlMime:ManagedReference
items:
- uid: RobotComponents.Definitions.ExternalAxis
  commentId: T:RobotComponents.Definitions.ExternalAxis
  id: ExternalAxis
  parent: RobotComponents.Definitions
  children:
  - RobotComponents.Definitions.ExternalAxis.#ctor
  - RobotComponents.Definitions.ExternalAxis.AttachmentPlane
  - RobotComponents.Definitions.ExternalAxis.AxisLimits
  - RobotComponents.Definitions.ExternalAxis.AxisNumber
  - RobotComponents.Definitions.ExternalAxis.AxisPlane
  - RobotComponents.Definitions.ExternalAxis.AxisType
  - RobotComponents.Definitions.ExternalAxis.BaseMesh
  - RobotComponents.Definitions.ExternalAxis.CalculatePosition(System.Double,System.Boolean@)
  - RobotComponents.Definitions.ExternalAxis.CalculatePositionSave(System.Double)
  - RobotComponents.Definitions.ExternalAxis.CalculateTransformationMatrix(System.Double,System.Boolean@)
  - RobotComponents.Definitions.ExternalAxis.CalculateTransformationMatrixSave(System.Double)
  - RobotComponents.Definitions.ExternalAxis.DuplicateExternalAxis
  - RobotComponents.Definitions.ExternalAxis.DuplicateExternalAxisWithoutMesh
  - RobotComponents.Definitions.ExternalAxis.IsValid
  - RobotComponents.Definitions.ExternalAxis.LinkMesh
  - RobotComponents.Definitions.ExternalAxis.Name
  - RobotComponents.Definitions.ExternalAxis.PosedMeshes
  - RobotComponents.Definitions.ExternalAxis.PoseMeshes(System.Double)
  - RobotComponents.Definitions.ExternalAxis.ReInitialize
  - RobotComponents.Definitions.ExternalAxis.ToString
  - RobotComponents.Definitions.ExternalAxis.Transform(Rhino.Geometry.Transform)
  langs:
  - csharp
  - vb
  name: ExternalAxis
  nameWithType: ExternalAxis
  fullName: RobotComponents.Definitions.ExternalAxis
  type: Class
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nExternal axis class, main Class for external axis.\nAn external axis (linear and rotational) can be attached to a robot or a workobject\n"
  syntax:
    content: public abstract class ExternalAxis
    content.vb: Public MustInherit Class ExternalAxis
  inheritance:
  - System.Object
  derivedClasses:
  - RobotComponents.Definitions.ExternalLinearAxis
  - RobotComponents.Definitions.ExternalRotationalAxis
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: RobotComponents.Definitions.ExternalAxis.DuplicateExternalAxis
  commentId: M:RobotComponents.Definitions.ExternalAxis.DuplicateExternalAxis
  id: DuplicateExternalAxis
  parent: RobotComponents.Definitions.ExternalAxis
  langs:
  - csharp
  - vb
  name: DuplicateExternalAxis()
  nameWithType: ExternalAxis.DuplicateExternalAxis()
  fullName: RobotComponents.Definitions.ExternalAxis.DuplicateExternalAxis()
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nA method to duplicate the object as an ExternalAxis type\n"
  syntax:
    content: public abstract ExternalAxis DuplicateExternalAxis()
    return:
      type: RobotComponents.Definitions.ExternalAxis
      description: 'Returns a deep copy of the ExternalAxis object. '
    content.vb: Public MustOverride Function DuplicateExternalAxis As ExternalAxis
  overload: RobotComponents.Definitions.ExternalAxis.DuplicateExternalAxis*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: RobotComponents.Definitions.ExternalAxis.DuplicateExternalAxisWithoutMesh
  commentId: M:RobotComponents.Definitions.ExternalAxis.DuplicateExternalAxisWithoutMesh
  id: DuplicateExternalAxisWithoutMesh
  parent: RobotComponents.Definitions.ExternalAxis
  langs:
  - csharp
  - vb
  name: DuplicateExternalAxisWithoutMesh()
  nameWithType: ExternalAxis.DuplicateExternalAxisWithoutMesh()
  fullName: RobotComponents.Definitions.ExternalAxis.DuplicateExternalAxisWithoutMesh()
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nA method to duplicate the object as an ExternalAxis type with an empty mesh.\n"
  syntax:
    content: public abstract ExternalAxis DuplicateExternalAxisWithoutMesh()
    return:
      type: RobotComponents.Definitions.ExternalAxis
      description: 'Returns a deep copy of the ExternalAxis object with empty meshes. '
    content.vb: Public MustOverride Function DuplicateExternalAxisWithoutMesh As ExternalAxis
  overload: RobotComponents.Definitions.ExternalAxis.DuplicateExternalAxisWithoutMesh*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: RobotComponents.Definitions.ExternalAxis.ToString
  commentId: M:RobotComponents.Definitions.ExternalAxis.ToString
  id: ToString
  parent: RobotComponents.Definitions.ExternalAxis
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ExternalAxis.ToString()
  fullName: RobotComponents.Definitions.ExternalAxis.ToString()
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nReturns a string that represents the current object.\n"
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: 'A string that represents the current object. '
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: RobotComponents.Definitions.ExternalAxis.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: RobotComponents.Definitions.ExternalAxis.CalculatePosition(System.Double,System.Boolean@)
  commentId: M:RobotComponents.Definitions.ExternalAxis.CalculatePosition(System.Double,System.Boolean@)
  id: CalculatePosition(System.Double,System.Boolean@)
  parent: RobotComponents.Definitions.ExternalAxis
  langs:
  - csharp
  - vb
  name: CalculatePosition(Double, out Boolean)
  nameWithType: ExternalAxis.CalculatePosition(Double, out Boolean)
  fullName: RobotComponents.Definitions.ExternalAxis.CalculatePosition(System.Double, out System.Boolean)
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nCalculates the position of the attachment plane for a defined external axis value.\nThis method does not take into account the axis limits. \n"
  syntax:
    content: public abstract Plane CalculatePosition(double axisValue, out bool inLimits)
    parameters:
    - id: axisValue
      type: System.Double
      description: 'The external axis value to calculate the position of the attachment plane for. '
    - id: inLimits
      type: System.Boolean
      description: 'A boolean that indicates if the defined exernal axis value is inside its limits. '
    return:
      type: Rhino.Geometry.Plane
      description: 'The posed attachement plane. '
    content.vb: Public MustOverride Function CalculatePosition(axisValue As Double, ByRef inLimits As Boolean) As Plane
  overload: RobotComponents.Definitions.ExternalAxis.CalculatePosition*
  nameWithType.vb: ExternalAxis.CalculatePosition(Double, ByRef Boolean)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: RobotComponents.Definitions.ExternalAxis.CalculatePosition(System.Double, ByRef System.Boolean)
  name.vb: CalculatePosition(Double, ByRef Boolean)
- uid: RobotComponents.Definitions.ExternalAxis.CalculateTransformationMatrix(System.Double,System.Boolean@)
  commentId: M:RobotComponents.Definitions.ExternalAxis.CalculateTransformationMatrix(System.Double,System.Boolean@)
  id: CalculateTransformationMatrix(System.Double,System.Boolean@)
  parent: RobotComponents.Definitions.ExternalAxis
  langs:
  - csharp
  - vb
  name: CalculateTransformationMatrix(Double, out Boolean)
  nameWithType: ExternalAxis.CalculateTransformationMatrix(Double, out Boolean)
  fullName: RobotComponents.Definitions.ExternalAxis.CalculateTransformationMatrix(System.Double, out System.Boolean)
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nCalculates the the transformation matrix for a defined external axis value. \nThis method does not take into account the axis limits. \n"
  syntax:
    content: public abstract Transform CalculateTransformationMatrix(double axisValue, out bool inLimits)
    parameters:
    - id: axisValue
      type: System.Double
      description: 'The external axis value to calculate the position of the attachment plane for. '
    - id: inLimits
      type: System.Boolean
      description: 'A boolean that indicates if the defined exernal axis value is inside its limits. '
    return:
      type: Rhino.Geometry.Transform
      description: 'The transformation matrix '
    content.vb: Public MustOverride Function CalculateTransformationMatrix(axisValue As Double, ByRef inLimits As Boolean) As Transform
  overload: RobotComponents.Definitions.ExternalAxis.CalculateTransformationMatrix*
  nameWithType.vb: ExternalAxis.CalculateTransformationMatrix(Double, ByRef Boolean)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: RobotComponents.Definitions.ExternalAxis.CalculateTransformationMatrix(System.Double, ByRef System.Boolean)
  name.vb: CalculateTransformationMatrix(Double, ByRef Boolean)
- uid: RobotComponents.Definitions.ExternalAxis.CalculatePositionSave(System.Double)
  commentId: M:RobotComponents.Definitions.ExternalAxis.CalculatePositionSave(System.Double)
  id: CalculatePositionSave(System.Double)
  parent: RobotComponents.Definitions.ExternalAxis
  langs:
  - csharp
  - vb
  name: CalculatePositionSave(Double)
  nameWithType: ExternalAxis.CalculatePositionSave(Double)
  fullName: RobotComponents.Definitions.ExternalAxis.CalculatePositionSave(System.Double)
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nCalculates the position of the attachment plane for a defined external axis value.\nThis method takes into account the external axis limits. If the defined external\naxis value is outside its limits the closest external axis limit will be used. \n"
  syntax:
    content: public abstract Plane CalculatePositionSave(double axisValue)
    parameters:
    - id: axisValue
      type: System.Double
      description: 'The external axis value to calculate the position of the attachment plane for. '
    return:
      type: Rhino.Geometry.Plane
      description: 'The posed attachement plane. '
    content.vb: Public MustOverride Function CalculatePositionSave(axisValue As Double) As Plane
  overload: RobotComponents.Definitions.ExternalAxis.CalculatePositionSave*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: RobotComponents.Definitions.ExternalAxis.CalculateTransformationMatrixSave(System.Double)
  commentId: M:RobotComponents.Definitions.ExternalAxis.CalculateTransformationMatrixSave(System.Double)
  id: CalculateTransformationMatrixSave(System.Double)
  parent: RobotComponents.Definitions.ExternalAxis
  langs:
  - csharp
  - vb
  name: CalculateTransformationMatrixSave(Double)
  nameWithType: ExternalAxis.CalculateTransformationMatrixSave(Double)
  fullName: RobotComponents.Definitions.ExternalAxis.CalculateTransformationMatrixSave(System.Double)
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nCalculates the the transformation matrix for a defined external axis value. \nThis method takes into account the external axis limits. If the defined external\naxis value is outside its limits the closest external axis limit will be used. \n"
  syntax:
    content: public abstract Transform CalculateTransformationMatrixSave(double axisValue)
    parameters:
    - id: axisValue
      type: System.Double
      description: 'The external axis value to calculate the transformation matrix for. '
    return:
      type: Rhino.Geometry.Transform
      description: 'Returns the transformation matrix. '
    content.vb: Public MustOverride Function CalculateTransformationMatrixSave(axisValue As Double) As Transform
  overload: RobotComponents.Definitions.ExternalAxis.CalculateTransformationMatrixSave*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: RobotComponents.Definitions.ExternalAxis.ReInitialize
  commentId: M:RobotComponents.Definitions.ExternalAxis.ReInitialize
  id: ReInitialize
  parent: RobotComponents.Definitions.ExternalAxis
  langs:
  - csharp
  - vb
  name: ReInitialize()
  nameWithType: ExternalAxis.ReInitialize()
  fullName: RobotComponents.Definitions.ExternalAxis.ReInitialize()
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nA method that can be called to reinitialize all the data that is needed to construct a valid external axis. \n"
  syntax:
    content: public abstract void ReInitialize()
    content.vb: Public MustOverride Sub ReInitialize
  overload: RobotComponents.Definitions.ExternalAxis.ReInitialize*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: RobotComponents.Definitions.ExternalAxis.PoseMeshes(System.Double)
  commentId: M:RobotComponents.Definitions.ExternalAxis.PoseMeshes(System.Double)
  id: PoseMeshes(System.Double)
  parent: RobotComponents.Definitions.ExternalAxis
  langs:
  - csharp
  - vb
  name: PoseMeshes(Double)
  nameWithType: ExternalAxis.PoseMeshes(Double)
  fullName: RobotComponents.Definitions.ExternalAxis.PoseMeshes(System.Double)
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nCalculates the position of the external axis mesh for a defined external axis value.\n"
  syntax:
    content: public abstract void PoseMeshes(double axisValue)
    parameters:
    - id: axisValue
      type: System.Double
      description: 'The external axis value to calculate the position of the meshes for. '
    content.vb: Public MustOverride Sub PoseMeshes(axisValue As Double)
  overload: RobotComponents.Definitions.ExternalAxis.PoseMeshes*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: RobotComponents.Definitions.ExternalAxis.Transform(Rhino.Geometry.Transform)
  commentId: M:RobotComponents.Definitions.ExternalAxis.Transform(Rhino.Geometry.Transform)
  id: Transform(Rhino.Geometry.Transform)
  parent: RobotComponents.Definitions.ExternalAxis
  langs:
  - csharp
  - vb
  name: Transform(Transform)
  nameWithType: ExternalAxis.Transform(Transform)
  fullName: RobotComponents.Definitions.ExternalAxis.Transform(Rhino.Geometry.Transform)
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nTransforms the linear axis spatial properties (planes and meshes). \n"
  syntax:
    content: public abstract void Transform(Transform xform)
    parameters:
    - id: xform
      type: Rhino.Geometry.Transform
      description: 'Spatial deform. '
    content.vb: Public MustOverride Sub Transform(xform As Transform)
  overload: RobotComponents.Definitions.ExternalAxis.Transform*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: RobotComponents.Definitions.ExternalAxis.#ctor
  commentId: M:RobotComponents.Definitions.ExternalAxis.#ctor
  id: '#ctor'
  parent: RobotComponents.Definitions.ExternalAxis
  langs:
  - csharp
  - vb
  name: ExternalAxis()
  nameWithType: ExternalAxis.ExternalAxis()
  fullName: RobotComponents.Definitions.ExternalAxis.ExternalAxis()
  type: Constructor
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  syntax:
    content: protected ExternalAxis()
    content.vb: Protected Sub New
  overload: RobotComponents.Definitions.ExternalAxis.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: RobotComponents.Definitions.ExternalAxis.IsValid
  commentId: P:RobotComponents.Definitions.ExternalAxis.IsValid
  id: IsValid
  parent: RobotComponents.Definitions.ExternalAxis
  langs:
  - csharp
  - vb
  name: IsValid
  nameWithType: ExternalAxis.IsValid
  fullName: RobotComponents.Definitions.ExternalAxis.IsValid
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nBoolearn that indicates if the External Axis instance is valid.\n"
  syntax:
    content: public abstract bool IsValid { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public MustOverride ReadOnly Property IsValid As Boolean
  overload: RobotComponents.Definitions.ExternalAxis.IsValid*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: RobotComponents.Definitions.ExternalAxis.Name
  commentId: P:RobotComponents.Definitions.ExternalAxis.Name
  id: Name
  parent: RobotComponents.Definitions.ExternalAxis
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ExternalAxis.Name
  fullName: RobotComponents.Definitions.ExternalAxis.Name
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nThe name of the external axis\n"
  syntax:
    content: public abstract string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public MustOverride Property Name As String
  overload: RobotComponents.Definitions.ExternalAxis.Name*
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: RobotComponents.Definitions.ExternalAxis.AxisLimits
  commentId: P:RobotComponents.Definitions.ExternalAxis.AxisLimits
  id: AxisLimits
  parent: RobotComponents.Definitions.ExternalAxis
  langs:
  - csharp
  - vb
  name: AxisLimits
  nameWithType: ExternalAxis.AxisLimits
  fullName: RobotComponents.Definitions.ExternalAxis.AxisLimits
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nDefines the axis limits as an interval\n"
  syntax:
    content: public abstract Interval AxisLimits { get; set; }
    parameters: []
    return:
      type: Rhino.Geometry.Interval
    content.vb: Public MustOverride Property AxisLimits As Interval
  overload: RobotComponents.Definitions.ExternalAxis.AxisLimits*
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: RobotComponents.Definitions.ExternalAxis.AxisType
  commentId: P:RobotComponents.Definitions.ExternalAxis.AxisType
  id: AxisType
  parent: RobotComponents.Definitions.ExternalAxis
  langs:
  - csharp
  - vb
  name: AxisType
  nameWithType: ExternalAxis.AxisType
  fullName: RobotComponents.Definitions.ExternalAxis.AxisType
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nDefines the axis type (linear or rotational)\n"
  syntax:
    content: public abstract AxisType AxisType { get; }
    parameters: []
    return:
      type: RobotComponents.Enumerations.AxisType
    content.vb: Public MustOverride ReadOnly Property AxisType As AxisType
  overload: RobotComponents.Definitions.ExternalAxis.AxisType*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: RobotComponents.Definitions.ExternalAxis.AttachmentPlane
  commentId: P:RobotComponents.Definitions.ExternalAxis.AttachmentPlane
  id: AttachmentPlane
  parent: RobotComponents.Definitions.ExternalAxis
  langs:
  - csharp
  - vb
  name: AttachmentPlane
  nameWithType: ExternalAxis.AttachmentPlane
  fullName: RobotComponents.Definitions.ExternalAxis.AttachmentPlane
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nDefines the plane where the robot or the work object is attached. \n"
  syntax:
    content: public abstract Plane AttachmentPlane { get; set; }
    parameters: []
    return:
      type: Rhino.Geometry.Plane
    content.vb: Public MustOverride Property AttachmentPlane As Plane
  overload: RobotComponents.Definitions.ExternalAxis.AttachmentPlane*
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: RobotComponents.Definitions.ExternalAxis.AxisPlane
  commentId: P:RobotComponents.Definitions.ExternalAxis.AxisPlane
  id: AxisPlane
  parent: RobotComponents.Definitions.ExternalAxis
  langs:
  - csharp
  - vb
  name: AxisPlane
  nameWithType: ExternalAxis.AxisPlane
  fullName: RobotComponents.Definitions.ExternalAxis.AxisPlane
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nDefines the axis plane. In case of a rotational axis the z-axis of the plane\ndefines the rotation center. In case of linear axis the z-axis of the plane defines \nthe movement direction.\n"
  syntax:
    content: public abstract Plane AxisPlane { get; set; }
    parameters: []
    return:
      type: Rhino.Geometry.Plane
    content.vb: Public MustOverride Property AxisPlane As Plane
  overload: RobotComponents.Definitions.ExternalAxis.AxisPlane*
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: RobotComponents.Definitions.ExternalAxis.AxisNumber
  commentId: P:RobotComponents.Definitions.ExternalAxis.AxisNumber
  id: AxisNumber
  parent: RobotComponents.Definitions.ExternalAxis
  langs:
  - csharp
  - vb
  name: AxisNumber
  nameWithType: ExternalAxis.AxisNumber
  fullName: RobotComponents.Definitions.ExternalAxis.AxisNumber
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nThe axis logic as number (0, 1, 2, 3, 4 or 5)\n"
  syntax:
    content: public abstract int AxisNumber { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public MustOverride Property AxisNumber As Integer
  overload: RobotComponents.Definitions.ExternalAxis.AxisNumber*
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: RobotComponents.Definitions.ExternalAxis.BaseMesh
  commentId: P:RobotComponents.Definitions.ExternalAxis.BaseMesh
  id: BaseMesh
  parent: RobotComponents.Definitions.ExternalAxis
  langs:
  - csharp
  - vb
  name: BaseMesh
  nameWithType: ExternalAxis.BaseMesh
  fullName: RobotComponents.Definitions.ExternalAxis.BaseMesh
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nThe fixed base mesh of the external axis. \n"
  syntax:
    content: public abstract Mesh BaseMesh { get; set; }
    parameters: []
    return:
      type: Rhino.Geometry.Mesh
    content.vb: Public MustOverride Property BaseMesh As Mesh
  overload: RobotComponents.Definitions.ExternalAxis.BaseMesh*
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: RobotComponents.Definitions.ExternalAxis.LinkMesh
  commentId: P:RobotComponents.Definitions.ExternalAxis.LinkMesh
  id: LinkMesh
  parent: RobotComponents.Definitions.ExternalAxis
  langs:
  - csharp
  - vb
  name: LinkMesh
  nameWithType: ExternalAxis.LinkMesh
  fullName: RobotComponents.Definitions.ExternalAxis.LinkMesh
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nThe movable link mesh of the external axis posed for external axis value 0. \n"
  syntax:
    content: public abstract Mesh LinkMesh { get; set; }
    parameters: []
    return:
      type: Rhino.Geometry.Mesh
    content.vb: Public MustOverride Property LinkMesh As Mesh
  overload: RobotComponents.Definitions.ExternalAxis.LinkMesh*
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: RobotComponents.Definitions.ExternalAxis.PosedMeshes
  commentId: P:RobotComponents.Definitions.ExternalAxis.PosedMeshes
  id: PosedMeshes
  parent: RobotComponents.Definitions.ExternalAxis
  langs:
  - csharp
  - vb
  name: PosedMeshes
  nameWithType: ExternalAxis.PosedMeshes
  fullName: RobotComponents.Definitions.ExternalAxis.PosedMeshes
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nThe external axis mesh posed in a certain external axis value.\n"
  syntax:
    content: public abstract List<Mesh> PosedMeshes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Rhino.Geometry.Mesh}
    content.vb: Public MustOverride ReadOnly Property PosedMeshes As List(Of Mesh)
  overload: RobotComponents.Definitions.ExternalAxis.PosedMeshes*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
references:
- uid: RobotComponents.Definitions
  commentId: N:RobotComponents.Definitions
  isExternal: true
  name: RobotComponents.Definitions
  nameWithType: RobotComponents.Definitions
  fullName: RobotComponents.Definitions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: RobotComponents.Definitions.ExternalAxis.DuplicateExternalAxis*
  commentId: Overload:RobotComponents.Definitions.ExternalAxis.DuplicateExternalAxis
  isExternal: true
  name: DuplicateExternalAxis
  nameWithType: ExternalAxis.DuplicateExternalAxis
  fullName: RobotComponents.Definitions.ExternalAxis.DuplicateExternalAxis
- uid: RobotComponents.Definitions.ExternalAxis
  commentId: T:RobotComponents.Definitions.ExternalAxis
  parent: RobotComponents.Definitions
  isExternal: true
  name: ExternalAxis
  nameWithType: ExternalAxis
  fullName: RobotComponents.Definitions.ExternalAxis
- uid: RobotComponents.Definitions.ExternalAxis.DuplicateExternalAxisWithoutMesh*
  commentId: Overload:RobotComponents.Definitions.ExternalAxis.DuplicateExternalAxisWithoutMesh
  isExternal: true
  name: DuplicateExternalAxisWithoutMesh
  nameWithType: ExternalAxis.DuplicateExternalAxisWithoutMesh
  fullName: RobotComponents.Definitions.ExternalAxis.DuplicateExternalAxisWithoutMesh
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: RobotComponents.Definitions.ExternalAxis.ToString*
  commentId: Overload:RobotComponents.Definitions.ExternalAxis.ToString
  isExternal: true
  name: ToString
  nameWithType: ExternalAxis.ToString
  fullName: RobotComponents.Definitions.ExternalAxis.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: RobotComponents.Definitions.ExternalAxis.CalculatePosition*
  commentId: Overload:RobotComponents.Definitions.ExternalAxis.CalculatePosition
  isExternal: true
  name: CalculatePosition
  nameWithType: ExternalAxis.CalculatePosition
  fullName: RobotComponents.Definitions.ExternalAxis.CalculatePosition
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Rhino.Geometry.Plane
  isExternal: true
  name: Plane
  nameWithType: Plane
  fullName: Rhino.Geometry.Plane
- uid: RobotComponents.Definitions.ExternalAxis.CalculateTransformationMatrix*
  commentId: Overload:RobotComponents.Definitions.ExternalAxis.CalculateTransformationMatrix
  isExternal: true
  name: CalculateTransformationMatrix
  nameWithType: ExternalAxis.CalculateTransformationMatrix
  fullName: RobotComponents.Definitions.ExternalAxis.CalculateTransformationMatrix
- uid: Rhino.Geometry.Transform
  isExternal: true
  name: Transform
  nameWithType: Transform
  fullName: Rhino.Geometry.Transform
- uid: RobotComponents.Definitions.ExternalAxis.CalculatePositionSave*
  commentId: Overload:RobotComponents.Definitions.ExternalAxis.CalculatePositionSave
  isExternal: true
  name: CalculatePositionSave
  nameWithType: ExternalAxis.CalculatePositionSave
  fullName: RobotComponents.Definitions.ExternalAxis.CalculatePositionSave
- uid: RobotComponents.Definitions.ExternalAxis.CalculateTransformationMatrixSave*
  commentId: Overload:RobotComponents.Definitions.ExternalAxis.CalculateTransformationMatrixSave
  isExternal: true
  name: CalculateTransformationMatrixSave
  nameWithType: ExternalAxis.CalculateTransformationMatrixSave
  fullName: RobotComponents.Definitions.ExternalAxis.CalculateTransformationMatrixSave
- uid: RobotComponents.Definitions.ExternalAxis.ReInitialize*
  commentId: Overload:RobotComponents.Definitions.ExternalAxis.ReInitialize
  isExternal: true
  name: ReInitialize
  nameWithType: ExternalAxis.ReInitialize
  fullName: RobotComponents.Definitions.ExternalAxis.ReInitialize
- uid: RobotComponents.Definitions.ExternalAxis.PoseMeshes*
  commentId: Overload:RobotComponents.Definitions.ExternalAxis.PoseMeshes
  isExternal: true
  name: PoseMeshes
  nameWithType: ExternalAxis.PoseMeshes
  fullName: RobotComponents.Definitions.ExternalAxis.PoseMeshes
- uid: RobotComponents.Definitions.ExternalAxis.Transform*
  commentId: Overload:RobotComponents.Definitions.ExternalAxis.Transform
  isExternal: true
  name: Transform
  nameWithType: ExternalAxis.Transform
  fullName: RobotComponents.Definitions.ExternalAxis.Transform
- uid: RobotComponents.Definitions.ExternalAxis.#ctor*
  commentId: Overload:RobotComponents.Definitions.ExternalAxis.#ctor
  isExternal: true
  name: ExternalAxis
  nameWithType: ExternalAxis.ExternalAxis
  fullName: RobotComponents.Definitions.ExternalAxis.ExternalAxis
- uid: RobotComponents.Definitions.ExternalAxis.IsValid*
  commentId: Overload:RobotComponents.Definitions.ExternalAxis.IsValid
  isExternal: true
  name: IsValid
  nameWithType: ExternalAxis.IsValid
  fullName: RobotComponents.Definitions.ExternalAxis.IsValid
- uid: RobotComponents.Definitions.ExternalAxis.Name*
  commentId: Overload:RobotComponents.Definitions.ExternalAxis.Name
  isExternal: true
  name: Name
  nameWithType: ExternalAxis.Name
  fullName: RobotComponents.Definitions.ExternalAxis.Name
- uid: RobotComponents.Definitions.ExternalAxis.AxisLimits*
  commentId: Overload:RobotComponents.Definitions.ExternalAxis.AxisLimits
  isExternal: true
  name: AxisLimits
  nameWithType: ExternalAxis.AxisLimits
  fullName: RobotComponents.Definitions.ExternalAxis.AxisLimits
- uid: Rhino.Geometry.Interval
  isExternal: true
  name: Interval
  nameWithType: Interval
  fullName: Rhino.Geometry.Interval
- uid: RobotComponents.Definitions.ExternalAxis.AxisType*
  commentId: Overload:RobotComponents.Definitions.ExternalAxis.AxisType
  isExternal: true
  name: AxisType
  nameWithType: ExternalAxis.AxisType
  fullName: RobotComponents.Definitions.ExternalAxis.AxisType
- uid: RobotComponents.Enumerations.AxisType
  commentId: T:RobotComponents.Enumerations.AxisType
  parent: RobotComponents.Enumerations
  isExternal: true
  name: AxisType
  nameWithType: AxisType
  fullName: RobotComponents.Enumerations.AxisType
- uid: RobotComponents.Enumerations
  commentId: N:RobotComponents.Enumerations
  isExternal: true
  name: RobotComponents.Enumerations
  nameWithType: RobotComponents.Enumerations
  fullName: RobotComponents.Enumerations
- uid: RobotComponents.Definitions.ExternalAxis.AttachmentPlane*
  commentId: Overload:RobotComponents.Definitions.ExternalAxis.AttachmentPlane
  isExternal: true
  name: AttachmentPlane
  nameWithType: ExternalAxis.AttachmentPlane
  fullName: RobotComponents.Definitions.ExternalAxis.AttachmentPlane
- uid: RobotComponents.Definitions.ExternalAxis.AxisPlane*
  commentId: Overload:RobotComponents.Definitions.ExternalAxis.AxisPlane
  isExternal: true
  name: AxisPlane
  nameWithType: ExternalAxis.AxisPlane
  fullName: RobotComponents.Definitions.ExternalAxis.AxisPlane
- uid: RobotComponents.Definitions.ExternalAxis.AxisNumber*
  commentId: Overload:RobotComponents.Definitions.ExternalAxis.AxisNumber
  isExternal: true
  name: AxisNumber
  nameWithType: ExternalAxis.AxisNumber
  fullName: RobotComponents.Definitions.ExternalAxis.AxisNumber
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: RobotComponents.Definitions.ExternalAxis.BaseMesh*
  commentId: Overload:RobotComponents.Definitions.ExternalAxis.BaseMesh
  isExternal: true
  name: BaseMesh
  nameWithType: ExternalAxis.BaseMesh
  fullName: RobotComponents.Definitions.ExternalAxis.BaseMesh
- uid: Rhino.Geometry.Mesh
  isExternal: true
  name: Mesh
  nameWithType: Mesh
  fullName: Rhino.Geometry.Mesh
- uid: RobotComponents.Definitions.ExternalAxis.LinkMesh*
  commentId: Overload:RobotComponents.Definitions.ExternalAxis.LinkMesh
  isExternal: true
  name: LinkMesh
  nameWithType: ExternalAxis.LinkMesh
  fullName: RobotComponents.Definitions.ExternalAxis.LinkMesh
- uid: RobotComponents.Definitions.ExternalAxis.PosedMeshes*
  commentId: Overload:RobotComponents.Definitions.ExternalAxis.PosedMeshes
  isExternal: true
  name: PosedMeshes
  nameWithType: ExternalAxis.PosedMeshes
  fullName: RobotComponents.Definitions.ExternalAxis.PosedMeshes
- uid: System.Collections.Generic.List{Rhino.Geometry.Mesh}
  commentId: T:System.Collections.Generic.List{Rhino.Geometry.Mesh}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Mesh>
  nameWithType: List<Mesh>
  fullName: System.Collections.Generic.List<Rhino.Geometry.Mesh>
  nameWithType.vb: List(Of Mesh)
  fullName.vb: System.Collections.Generic.List(Of Rhino.Geometry.Mesh)
  name.vb: List(Of Mesh)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Rhino.Geometry.Mesh
    name: Mesh
    nameWithType: Mesh
    fullName: Rhino.Geometry.Mesh
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Rhino.Geometry.Mesh
    name: Mesh
    nameWithType: Mesh
    fullName: Rhino.Geometry.Mesh
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
