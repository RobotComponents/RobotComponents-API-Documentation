### YamlMime:ManagedReference
items:
- uid: RobotComponents.Definitions.RobotTool
  commentId: T:RobotComponents.Definitions.RobotTool
  id: RobotTool
  parent: RobotComponents.Definitions
  children:
  - RobotComponents.Definitions.RobotTool.#ctor
  - RobotComponents.Definitions.RobotTool.#ctor(RobotComponents.Definitions.RobotTool,System.Boolean)
  - RobotComponents.Definitions.RobotTool.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - RobotComponents.Definitions.RobotTool.#ctor(System.String,Rhino.Geometry.Mesh,Rhino.Geometry.Plane,Rhino.Geometry.Plane)
  - RobotComponents.Definitions.RobotTool.#ctor(System.String,Rhino.Geometry.Mesh,Rhino.Geometry.Plane,Rhino.Geometry.Plane,System.Boolean,System.Double,Rhino.Geometry.Plane,Rhino.Geometry.Vector3d)
  - RobotComponents.Definitions.RobotTool.#ctor(System.String,Rhino.Geometry.Mesh,Rhino.Geometry.Plane,Rhino.Geometry.Plane,System.Boolean,System.Double,Rhino.Geometry.Point3d,Rhino.Geometry.Quaternion,Rhino.Geometry.Vector3d)
  - RobotComponents.Definitions.RobotTool.#ctor(System.String,Rhino.Geometry.Mesh,Rhino.Geometry.Point3d,Rhino.Geometry.Quaternion)
  - RobotComponents.Definitions.RobotTool.#ctor(System.String,Rhino.Geometry.Mesh,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  - RobotComponents.Definitions.RobotTool.#ctor(System.String,Rhino.Geometry.Mesh,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  - RobotComponents.Definitions.RobotTool.#ctor(System.String,System.Collections.Generic.List{Rhino.Geometry.Mesh},Rhino.Geometry.Plane,Rhino.Geometry.Plane)
  - RobotComponents.Definitions.RobotTool.#ctor(System.String,System.Collections.Generic.List{Rhino.Geometry.Mesh},Rhino.Geometry.Plane,Rhino.Geometry.Plane,System.Boolean,System.Double,Rhino.Geometry.Plane,Rhino.Geometry.Vector3d)
  - RobotComponents.Definitions.RobotTool.#ctor(System.String,System.Collections.Generic.List{Rhino.Geometry.Mesh},Rhino.Geometry.Plane,Rhino.Geometry.Plane,System.Boolean,System.Double,Rhino.Geometry.Point3d,Rhino.Geometry.Quaternion,Rhino.Geometry.Vector3d)
  - RobotComponents.Definitions.RobotTool.#ctor(System.String,System.Collections.Generic.List{Rhino.Geometry.Mesh},Rhino.Geometry.Plane,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  - RobotComponents.Definitions.RobotTool.#ctor(System.String,System.Collections.Generic.List{Rhino.Geometry.Mesh},System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  - RobotComponents.Definitions.RobotTool.#ctor(System.String,System.Collections.Generic.List{Rhino.Geometry.Mesh},System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  - RobotComponents.Definitions.RobotTool.AttachmentPlane
  - RobotComponents.Definitions.RobotTool.CalculateCenterOfGravityOrientation
  - RobotComponents.Definitions.RobotTool.CalculateCenterOfGravityPosition
  - RobotComponents.Definitions.RobotTool.CalculateToolOrientation
  - RobotComponents.Definitions.RobotTool.CalculateToolPosition
  - RobotComponents.Definitions.RobotTool.CenterOfGravity
  - RobotComponents.Definitions.RobotTool.CenterOfGravityOrientation
  - RobotComponents.Definitions.RobotTool.CenterOfGravityPosition
  - RobotComponents.Definitions.RobotTool.Duplicate
  - RobotComponents.Definitions.RobotTool.DuplicateWithoutMesh
  - RobotComponents.Definitions.RobotTool.GetBoundingBox(System.Boolean)
  - RobotComponents.Definitions.RobotTool.GetEmptyRobotTool
  - RobotComponents.Definitions.RobotTool.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - RobotComponents.Definitions.RobotTool.Inertia
  - RobotComponents.Definitions.RobotTool.IsValid
  - RobotComponents.Definitions.RobotTool.Mass
  - RobotComponents.Definitions.RobotTool.Mesh
  - RobotComponents.Definitions.RobotTool.Name
  - RobotComponents.Definitions.RobotTool.Orientation
  - RobotComponents.Definitions.RobotTool.Position
  - RobotComponents.Definitions.RobotTool.ReferenceType
  - RobotComponents.Definitions.RobotTool.ReInitialize
  - RobotComponents.Definitions.RobotTool.RobotHold
  - RobotComponents.Definitions.RobotTool.ToolPlane
  - RobotComponents.Definitions.RobotTool.ToRAPIDDeclaration
  - RobotComponents.Definitions.RobotTool.ToString
  - RobotComponents.Definitions.RobotTool.Transform(Rhino.Geometry.Transform)
  langs:
  - csharp
  - vb
  name: RobotTool
  nameWithType: RobotTool
  fullName: RobotComponents.Definitions.RobotTool
  type: Class
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nRepresents a Robot Tool.\n"
  syntax:
    content: 'public class RobotTool : ISerializable'
    content.vb: >-
      Public Class RobotTool
          Implements ISerializable
  inheritance:
  - System.Object
  implements:
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: RobotComponents.Definitions.RobotTool.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:RobotComponents.Definitions.RobotTool.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: RobotComponents.Definitions.RobotTool
  langs:
  - csharp
  - vb
  name: RobotTool(SerializationInfo, StreamingContext)
  nameWithType: RobotTool.RobotTool(SerializationInfo, StreamingContext)
  fullName: RobotComponents.Definitions.RobotTool.RobotTool(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  type: Constructor
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nProtected constructor needed for deserialization of the object.  \n"
  syntax:
    content: protected RobotTool(SerializationInfo info, StreamingContext context)
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: 'The SerializationInfo to extract the data from. '
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: 'The context of this deserialization. '
    content.vb: Protected Sub New(info As SerializationInfo, context As StreamingContext)
  overload: RobotComponents.Definitions.RobotTool.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: RobotComponents.Definitions.RobotTool.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:RobotComponents.Definitions.RobotTool.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: RobotComponents.Definitions.RobotTool
  langs:
  - csharp
  - vb
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: RobotTool.GetObjectData(SerializationInfo, StreamingContext)
  fullName: RobotComponents.Definitions.RobotTool.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nPopulates a SerializationInfo with the data needed to serialize the object.\n"
  syntax:
    content: public void GetObjectData(SerializationInfo info, StreamingContext context)
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: 'The SerializationInfo to populate with data. '
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: 'The destination for this serialization. '
    content.vb: Public Sub GetObjectData(info As SerializationInfo, context As StreamingContext)
  overload: RobotComponents.Definitions.RobotTool.GetObjectData*
  implements:
  - System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RobotComponents.Definitions.RobotTool.#ctor
  commentId: M:RobotComponents.Definitions.RobotTool.#ctor
  id: '#ctor'
  parent: RobotComponents.Definitions.RobotTool
  langs:
  - csharp
  - vb
  name: RobotTool()
  nameWithType: RobotTool.RobotTool()
  fullName: RobotComponents.Definitions.RobotTool.RobotTool()
  type: Constructor
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nInitializes a new instance of the Robot Tool class with the default tool tool0.\n"
  syntax:
    content: public RobotTool()
    content.vb: Public Sub New
  overload: RobotComponents.Definitions.RobotTool.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RobotComponents.Definitions.RobotTool.#ctor(System.String,Rhino.Geometry.Mesh,Rhino.Geometry.Plane,Rhino.Geometry.Plane)
  commentId: M:RobotComponents.Definitions.RobotTool.#ctor(System.String,Rhino.Geometry.Mesh,Rhino.Geometry.Plane,Rhino.Geometry.Plane)
  id: '#ctor(System.String,Rhino.Geometry.Mesh,Rhino.Geometry.Plane,Rhino.Geometry.Plane)'
  parent: RobotComponents.Definitions.RobotTool
  langs:
  - csharp
  - vb
  name: RobotTool(String, Mesh, Plane, Plane)
  nameWithType: RobotTool.RobotTool(String, Mesh, Plane, Plane)
  fullName: RobotComponents.Definitions.RobotTool.RobotTool(System.String, Rhino.Geometry.Mesh, Rhino.Geometry.Plane, Rhino.Geometry.Plane)
  type: Constructor
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nInitializes a new instance of the Robot Tool class from planes.\nSets the load data as defined for the default tool tool0.\n"
  syntax:
    content: public RobotTool(string name, Mesh mesh, Plane attachmentPlane, Plane toolPlane)
    parameters:
    - id: name
      type: System.String
      description: 'The tool name, must be unique. '
    - id: mesh
      type: Rhino.Geometry.Mesh
      description: 'The tool mesh. '
    - id: attachmentPlane
      type: Rhino.Geometry.Plane
      description: 'The attachement plane. '
    - id: toolPlane
      type: Rhino.Geometry.Plane
      description: 'The tool center point and tool orientation as a plane. '
    content.vb: Public Sub New(name As String, mesh As Mesh, attachmentPlane As Plane, toolPlane As Plane)
  overload: RobotComponents.Definitions.RobotTool.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RobotComponents.Definitions.RobotTool.#ctor(System.String,System.Collections.Generic.List{Rhino.Geometry.Mesh},Rhino.Geometry.Plane,Rhino.Geometry.Plane)
  commentId: M:RobotComponents.Definitions.RobotTool.#ctor(System.String,System.Collections.Generic.List{Rhino.Geometry.Mesh},Rhino.Geometry.Plane,Rhino.Geometry.Plane)
  id: '#ctor(System.String,System.Collections.Generic.List{Rhino.Geometry.Mesh},Rhino.Geometry.Plane,Rhino.Geometry.Plane)'
  parent: RobotComponents.Definitions.RobotTool
  langs:
  - csharp
  - vb
  name: RobotTool(String, List<Mesh>, Plane, Plane)
  nameWithType: RobotTool.RobotTool(String, List<Mesh>, Plane, Plane)
  fullName: RobotComponents.Definitions.RobotTool.RobotTool(System.String, System.Collections.Generic.List<Rhino.Geometry.Mesh>, Rhino.Geometry.Plane, Rhino.Geometry.Plane)
  type: Constructor
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nInitializes a new instance of the Robot Tool class from planes.\nSets the load data as defined for the default tool tool0.\n"
  syntax:
    content: public RobotTool(string name, List<Mesh> meshes, Plane attachmentPlane, Plane toolPlane)
    parameters:
    - id: name
      type: System.String
      description: 'The tool name, must be unique. '
    - id: meshes
      type: System.Collections.Generic.List{Rhino.Geometry.Mesh}
      description: 'The tool mesh as The list with robot meshes. '
    - id: attachmentPlane
      type: Rhino.Geometry.Plane
      description: 'The attachement plane. '
    - id: toolPlane
      type: Rhino.Geometry.Plane
      description: 'The tool center point and tool orientation as a plane. '
    content.vb: Public Sub New(name As String, meshes As List(Of Mesh), attachmentPlane As Plane, toolPlane As Plane)
  overload: RobotComponents.Definitions.RobotTool.#ctor*
  nameWithType.vb: RobotTool.RobotTool(String, List(Of Mesh), Plane, Plane)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: RobotComponents.Definitions.RobotTool.RobotTool(System.String, System.Collections.Generic.List(Of Rhino.Geometry.Mesh), Rhino.Geometry.Plane, Rhino.Geometry.Plane)
  name.vb: RobotTool(String, List(Of Mesh), Plane, Plane)
- uid: RobotComponents.Definitions.RobotTool.#ctor(System.String,Rhino.Geometry.Mesh,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  commentId: M:RobotComponents.Definitions.RobotTool.#ctor(System.String,Rhino.Geometry.Mesh,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  id: '#ctor(System.String,Rhino.Geometry.Mesh,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)'
  parent: RobotComponents.Definitions.RobotTool
  langs:
  - csharp
  - vb
  name: RobotTool(String, Mesh, Double, Double, Double, Double, Double, Double)
  nameWithType: RobotTool.RobotTool(String, Mesh, Double, Double, Double, Double, Double, Double)
  fullName: RobotComponents.Definitions.RobotTool.RobotTool(System.String, Rhino.Geometry.Mesh, System.Double, System.Double, System.Double, System.Double, System.Double, System.Double)
  type: Constructor
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nInitializes a new instance of the Robot Tool class from Euler data.\nSets the attachtment plane equal to the world xy-plane. \nSets the load data as defined for the default tool tool0.\n"
  syntax:
    content: public RobotTool(string name, Mesh mesh, double toolTransX, double toolTransY, double toolTransZ, double toolRotX, double toolRotY, double toolRotZ)
    parameters:
    - id: name
      type: System.String
      description: 'The tool name, must be unique. '
    - id: mesh
      type: Rhino.Geometry.Mesh
      description: 'The tool mesh. '
    - id: toolTransX
      type: System.Double
      description: 'The tool center point translation in x-direction. '
    - id: toolTransY
      type: System.Double
      description: 'The tool center point translation in y-direction. '
    - id: toolTransZ
      type: System.Double
      description: 'The tool center point translation in z-direction. '
    - id: toolRotX
      type: System.Double
      description: 'The orientation around the x-axis in radians. '
    - id: toolRotY
      type: System.Double
      description: 'The orientation around the y-axis in radians. '
    - id: toolRotZ
      type: System.Double
      description: 'The orientation around the y-axis in radians. '
    content.vb: Public Sub New(name As String, mesh As Mesh, toolTransX As Double, toolTransY As Double, toolTransZ As Double, toolRotX As Double, toolRotY As Double, toolRotZ As Double)
  overload: RobotComponents.Definitions.RobotTool.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RobotComponents.Definitions.RobotTool.#ctor(System.String,System.Collections.Generic.List{Rhino.Geometry.Mesh},System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  commentId: M:RobotComponents.Definitions.RobotTool.#ctor(System.String,System.Collections.Generic.List{Rhino.Geometry.Mesh},System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  id: '#ctor(System.String,System.Collections.Generic.List{Rhino.Geometry.Mesh},System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)'
  parent: RobotComponents.Definitions.RobotTool
  langs:
  - csharp
  - vb
  name: RobotTool(String, List<Mesh>, Double, Double, Double, Double, Double, Double)
  nameWithType: RobotTool.RobotTool(String, List<Mesh>, Double, Double, Double, Double, Double, Double)
  fullName: RobotComponents.Definitions.RobotTool.RobotTool(System.String, System.Collections.Generic.List<Rhino.Geometry.Mesh>, System.Double, System.Double, System.Double, System.Double, System.Double, System.Double)
  type: Constructor
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nInitializes a new instance of the Robot Tool class from Euler data.\nSets the attachtment plane equal to the world xy-plane. \nSets the load data as defined for the default tool tool0.\n"
  syntax:
    content: public RobotTool(string name, List<Mesh> meshes, double toolTransX, double toolTransY, double toolTransZ, double toolRotX, double toolRotY, double toolRotZ)
    parameters:
    - id: name
      type: System.String
      description: 'The tool name, must be unique. '
    - id: meshes
      type: System.Collections.Generic.List{Rhino.Geometry.Mesh}
      description: 'The tool mesh. '
    - id: toolTransX
      type: System.Double
      description: 'The tool center point translation in x-direction. '
    - id: toolTransY
      type: System.Double
      description: 'The tool center point translation in y-direction. '
    - id: toolTransZ
      type: System.Double
      description: 'The tool center point translation in z-direction. '
    - id: toolRotX
      type: System.Double
      description: 'The orientation around the x-axis in radians. '
    - id: toolRotY
      type: System.Double
      description: 'The orientation around the y-axis in radians. '
    - id: toolRotZ
      type: System.Double
      description: 'The orientation around the y-axis in radians. '
    content.vb: Public Sub New(name As String, meshes As List(Of Mesh), toolTransX As Double, toolTransY As Double, toolTransZ As Double, toolRotX As Double, toolRotY As Double, toolRotZ As Double)
  overload: RobotComponents.Definitions.RobotTool.#ctor*
  nameWithType.vb: RobotTool.RobotTool(String, List(Of Mesh), Double, Double, Double, Double, Double, Double)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: RobotComponents.Definitions.RobotTool.RobotTool(System.String, System.Collections.Generic.List(Of Rhino.Geometry.Mesh), System.Double, System.Double, System.Double, System.Double, System.Double, System.Double)
  name.vb: RobotTool(String, List(Of Mesh), Double, Double, Double, Double, Double, Double)
- uid: RobotComponents.Definitions.RobotTool.#ctor(System.String,Rhino.Geometry.Mesh,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  commentId: M:RobotComponents.Definitions.RobotTool.#ctor(System.String,Rhino.Geometry.Mesh,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  id: '#ctor(System.String,Rhino.Geometry.Mesh,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)'
  parent: RobotComponents.Definitions.RobotTool
  langs:
  - csharp
  - vb
  name: RobotTool(String, Mesh, Double, Double, Double, Double, Double, Double, Double)
  nameWithType: RobotTool.RobotTool(String, Mesh, Double, Double, Double, Double, Double, Double, Double)
  fullName: RobotComponents.Definitions.RobotTool.RobotTool(System.String, Rhino.Geometry.Mesh, System.Double, System.Double, System.Double, System.Double, System.Double, System.Double, System.Double)
  type: Constructor
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nInitializes a new instance of the Robot Tool class from the x, y and z coordinate and the four quarternion values of the TCP point. \nSets the attachtment plane equal to the world xy-plane. \nSets the load data as defined for the default tool tool0.\n"
  syntax:
    content: public RobotTool(string name, Mesh mesh, double x, double y, double z, double q1, double q2, double q3, double q4)
    parameters:
    - id: name
      type: System.String
      description: 'The tool name, must be unique. '
    - id: mesh
      type: Rhino.Geometry.Mesh
      description: 'The tool mesh. '
    - id: x
      type: System.Double
      description: 'The x coordinate of the TCP point. '
    - id: y
      type: System.Double
      description: 'The y coordinate of the TCP point. '
    - id: z
      type: System.Double
      description: The z coordinate of the TCP point.
    - id: q1
      type: System.Double
      description: 'The real part of the quaternion. '
    - id: q2
      type: System.Double
      description: 'The first imaginary coefficient of the quaternion. '
    - id: q3
      type: System.Double
      description: 'The second imaginary coefficient of the quaternion. '
    - id: q4
      type: System.Double
      description: 'The third imaginary coefficient of the quaternion. '
    content.vb: Public Sub New(name As String, mesh As Mesh, x As Double, y As Double, z As Double, q1 As Double, q2 As Double, q3 As Double, q4 As Double)
  overload: RobotComponents.Definitions.RobotTool.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RobotComponents.Definitions.RobotTool.#ctor(System.String,System.Collections.Generic.List{Rhino.Geometry.Mesh},System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  commentId: M:RobotComponents.Definitions.RobotTool.#ctor(System.String,System.Collections.Generic.List{Rhino.Geometry.Mesh},System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  id: '#ctor(System.String,System.Collections.Generic.List{Rhino.Geometry.Mesh},System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)'
  parent: RobotComponents.Definitions.RobotTool
  langs:
  - csharp
  - vb
  name: RobotTool(String, List<Mesh>, Double, Double, Double, Double, Double, Double, Double)
  nameWithType: RobotTool.RobotTool(String, List<Mesh>, Double, Double, Double, Double, Double, Double, Double)
  fullName: RobotComponents.Definitions.RobotTool.RobotTool(System.String, System.Collections.Generic.List<Rhino.Geometry.Mesh>, System.Double, System.Double, System.Double, System.Double, System.Double, System.Double, System.Double)
  type: Constructor
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nInitializes a new instance of the Robot Tool class from the x, y and z coordinate and the four quarternion values of the TCP point. \nSets the attachtment plane equal to the world xy-plane. \nSets the load data as defined for the default tool tool0.\n"
  syntax:
    content: public RobotTool(string name, List<Mesh> meshes, double x, double y, double z, double q1, double q2, double q3, double q4)
    parameters:
    - id: name
      type: System.String
      description: 'The tool name, must be unique. '
    - id: meshes
      type: System.Collections.Generic.List{Rhino.Geometry.Mesh}
      description: 'The tool mesh. '
    - id: x
      type: System.Double
      description: 'The x coordinate of the TCP point. '
    - id: y
      type: System.Double
      description: 'The y coordinate of the TCP point. '
    - id: z
      type: System.Double
      description: The z coordinate of the TCP point.
    - id: q1
      type: System.Double
      description: 'The real part of the quaternion. '
    - id: q2
      type: System.Double
      description: 'The first imaginary coefficient of the quaternion. '
    - id: q3
      type: System.Double
      description: 'The second imaginary coefficient of the quaternion. '
    - id: q4
      type: System.Double
      description: 'The third imaginary coefficient of the quaternion. '
    content.vb: Public Sub New(name As String, meshes As List(Of Mesh), x As Double, y As Double, z As Double, q1 As Double, q2 As Double, q3 As Double, q4 As Double)
  overload: RobotComponents.Definitions.RobotTool.#ctor*
  nameWithType.vb: RobotTool.RobotTool(String, List(Of Mesh), Double, Double, Double, Double, Double, Double, Double)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: RobotComponents.Definitions.RobotTool.RobotTool(System.String, System.Collections.Generic.List(Of Rhino.Geometry.Mesh), System.Double, System.Double, System.Double, System.Double, System.Double, System.Double, System.Double)
  name.vb: RobotTool(String, List(Of Mesh), Double, Double, Double, Double, Double, Double, Double)
- uid: RobotComponents.Definitions.RobotTool.#ctor(System.String,System.Collections.Generic.List{Rhino.Geometry.Mesh},Rhino.Geometry.Plane,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  commentId: M:RobotComponents.Definitions.RobotTool.#ctor(System.String,System.Collections.Generic.List{Rhino.Geometry.Mesh},Rhino.Geometry.Plane,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  id: '#ctor(System.String,System.Collections.Generic.List{Rhino.Geometry.Mesh},Rhino.Geometry.Plane,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)'
  parent: RobotComponents.Definitions.RobotTool
  langs:
  - csharp
  - vb
  name: RobotTool(String, List<Mesh>, Plane, Double, Double, Double, Double, Double, Double, Double)
  nameWithType: RobotTool.RobotTool(String, List<Mesh>, Plane, Double, Double, Double, Double, Double, Double, Double)
  fullName: RobotComponents.Definitions.RobotTool.RobotTool(System.String, System.Collections.Generic.List<Rhino.Geometry.Mesh>, Rhino.Geometry.Plane, System.Double, System.Double, System.Double, System.Double, System.Double, System.Double, System.Double)
  type: Constructor
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nInitializes a new instance of the Robot Tool class from the x, y and z coordinate and the four quarternion values of the TCP point. \nSets the load data as defined for the default tool tool0.\n"
  syntax:
    content: public RobotTool(string name, List<Mesh> meshes, Plane attachmentPlane, double x, double y, double z, double q1, double q2, double q3, double q4)
    parameters:
    - id: name
      type: System.String
      description: 'The tool name, must be unique. '
    - id: meshes
      type: System.Collections.Generic.List{Rhino.Geometry.Mesh}
      description: 'The tool mesh. '
    - id: attachmentPlane
      type: Rhino.Geometry.Plane
      description: 'The attachement plane. '
    - id: x
      type: System.Double
      description: 'The x coordinate of the TCP point. '
    - id: y
      type: System.Double
      description: 'The y coordinate of the TCP point. '
    - id: z
      type: System.Double
      description: The z coordinate of the TCP point.
    - id: q1
      type: System.Double
      description: 'The real part of the quaternion. '
    - id: q2
      type: System.Double
      description: 'The first imaginary coefficient of the quaternion. '
    - id: q3
      type: System.Double
      description: 'The second imaginary coefficient of the quaternion. '
    - id: q4
      type: System.Double
      description: 'The third imaginary coefficient of the quaternion. '
    content.vb: Public Sub New(name As String, meshes As List(Of Mesh), attachmentPlane As Plane, x As Double, y As Double, z As Double, q1 As Double, q2 As Double, q3 As Double, q4 As Double)
  overload: RobotComponents.Definitions.RobotTool.#ctor*
  nameWithType.vb: RobotTool.RobotTool(String, List(Of Mesh), Plane, Double, Double, Double, Double, Double, Double, Double)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: RobotComponents.Definitions.RobotTool.RobotTool(System.String, System.Collections.Generic.List(Of Rhino.Geometry.Mesh), Rhino.Geometry.Plane, System.Double, System.Double, System.Double, System.Double, System.Double, System.Double, System.Double)
  name.vb: RobotTool(String, List(Of Mesh), Plane, Double, Double, Double, Double, Double, Double, Double)
- uid: RobotComponents.Definitions.RobotTool.#ctor(System.String,Rhino.Geometry.Mesh,Rhino.Geometry.Point3d,Rhino.Geometry.Quaternion)
  commentId: M:RobotComponents.Definitions.RobotTool.#ctor(System.String,Rhino.Geometry.Mesh,Rhino.Geometry.Point3d,Rhino.Geometry.Quaternion)
  id: '#ctor(System.String,Rhino.Geometry.Mesh,Rhino.Geometry.Point3d,Rhino.Geometry.Quaternion)'
  parent: RobotComponents.Definitions.RobotTool
  langs:
  - csharp
  - vb
  name: RobotTool(String, Mesh, Point3d, Quaternion)
  nameWithType: RobotTool.RobotTool(String, Mesh, Point3d, Quaternion)
  fullName: RobotComponents.Definitions.RobotTool.RobotTool(System.String, Rhino.Geometry.Mesh, Rhino.Geometry.Point3d, Rhino.Geometry.Quaternion)
  type: Constructor
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nInitializes a new instance of the Robot Tool class from a point and a quarternion.\nSets the attachtment plane equal to the world xy-plane. \nSets the load data as defined for the default tool tool0.\n"
  syntax:
    content: public RobotTool(string name, Mesh mesh, Point3d point, Quaternion quat)
    parameters:
    - id: name
      type: System.String
      description: 'The tool name, must be unique. '
    - id: mesh
      type: Rhino.Geometry.Mesh
      description: 'The tool mesh defined in the tool coordinate space. '
    - id: point
      type: Rhino.Geometry.Point3d
      description: 'The point of the TCP point. '
    - id: quat
      type: Rhino.Geometry.Quaternion
      description: 'The orientation of TCP point. '
    content.vb: Public Sub New(name As String, mesh As Mesh, point As Point3d, quat As Quaternion)
  overload: RobotComponents.Definitions.RobotTool.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RobotComponents.Definitions.RobotTool.#ctor(System.String,Rhino.Geometry.Mesh,Rhino.Geometry.Plane,Rhino.Geometry.Plane,System.Boolean,System.Double,Rhino.Geometry.Point3d,Rhino.Geometry.Quaternion,Rhino.Geometry.Vector3d)
  commentId: M:RobotComponents.Definitions.RobotTool.#ctor(System.String,Rhino.Geometry.Mesh,Rhino.Geometry.Plane,Rhino.Geometry.Plane,System.Boolean,System.Double,Rhino.Geometry.Point3d,Rhino.Geometry.Quaternion,Rhino.Geometry.Vector3d)
  id: '#ctor(System.String,Rhino.Geometry.Mesh,Rhino.Geometry.Plane,Rhino.Geometry.Plane,System.Boolean,System.Double,Rhino.Geometry.Point3d,Rhino.Geometry.Quaternion,Rhino.Geometry.Vector3d)'
  parent: RobotComponents.Definitions.RobotTool
  langs:
  - csharp
  - vb
  name: RobotTool(String, Mesh, Plane, Plane, Boolean, Double, Point3d, Quaternion, Vector3d)
  nameWithType: RobotTool.RobotTool(String, Mesh, Plane, Plane, Boolean, Double, Point3d, Quaternion, Vector3d)
  fullName: RobotComponents.Definitions.RobotTool.RobotTool(System.String, Rhino.Geometry.Mesh, Rhino.Geometry.Plane, Rhino.Geometry.Plane, System.Boolean, System.Double, Rhino.Geometry.Point3d, Rhino.Geometry.Quaternion, Rhino.Geometry.Vector3d)
  type: Constructor
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nInitializes a new instance of the Robot Tool class.\n"
  syntax:
    content: public RobotTool(string name, Mesh mesh, Plane attachmentPlane, Plane toolPlane, bool robotHold, double mass, Point3d centerOfGravityPosition, Quaternion centerOfGravityOrientation, Vector3d inertia)
    parameters:
    - id: name
      type: System.String
      description: 'The tool name, must be unique. '
    - id: mesh
      type: Rhino.Geometry.Mesh
      description: 'The tool mesh. '
    - id: attachmentPlane
      type: Rhino.Geometry.Plane
      description: 'The attachement plane. '
    - id: toolPlane
      type: Rhino.Geometry.Plane
      description: 'The tool center point and tool orientation. '
    - id: robotHold
      type: System.Boolean
      description: 'Specifies whether the robot is holding the tool. '
    - id: mass
      type: System.Double
      description: 'The weight of the tool in kg. '
    - id: centerOfGravityPosition
      type: Rhino.Geometry.Point3d
      description: 'The position of the  center of gravity of the tool load. '
    - id: centerOfGravityOrientation
      type: Rhino.Geometry.Quaternion
      description: "The orientation of the tool load coordinate system defined by the principal inertial axes of the \ntool load. Expressed in the wrist coordinate system as a quaternion (q1, q2, q3, q4). "
    - id: inertia
      type: Rhino.Geometry.Vector3d
      description: 'The moment of inertia of the load in kgm2. '
    content.vb: Public Sub New(name As String, mesh As Mesh, attachmentPlane As Plane, toolPlane As Plane, robotHold As Boolean, mass As Double, centerOfGravityPosition As Point3d, centerOfGravityOrientation As Quaternion, inertia As Vector3d)
  overload: RobotComponents.Definitions.RobotTool.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RobotComponents.Definitions.RobotTool.#ctor(System.String,System.Collections.Generic.List{Rhino.Geometry.Mesh},Rhino.Geometry.Plane,Rhino.Geometry.Plane,System.Boolean,System.Double,Rhino.Geometry.Point3d,Rhino.Geometry.Quaternion,Rhino.Geometry.Vector3d)
  commentId: M:RobotComponents.Definitions.RobotTool.#ctor(System.String,System.Collections.Generic.List{Rhino.Geometry.Mesh},Rhino.Geometry.Plane,Rhino.Geometry.Plane,System.Boolean,System.Double,Rhino.Geometry.Point3d,Rhino.Geometry.Quaternion,Rhino.Geometry.Vector3d)
  id: '#ctor(System.String,System.Collections.Generic.List{Rhino.Geometry.Mesh},Rhino.Geometry.Plane,Rhino.Geometry.Plane,System.Boolean,System.Double,Rhino.Geometry.Point3d,Rhino.Geometry.Quaternion,Rhino.Geometry.Vector3d)'
  parent: RobotComponents.Definitions.RobotTool
  langs:
  - csharp
  - vb
  name: RobotTool(String, List<Mesh>, Plane, Plane, Boolean, Double, Point3d, Quaternion, Vector3d)
  nameWithType: RobotTool.RobotTool(String, List<Mesh>, Plane, Plane, Boolean, Double, Point3d, Quaternion, Vector3d)
  fullName: RobotComponents.Definitions.RobotTool.RobotTool(System.String, System.Collections.Generic.List<Rhino.Geometry.Mesh>, Rhino.Geometry.Plane, Rhino.Geometry.Plane, System.Boolean, System.Double, Rhino.Geometry.Point3d, Rhino.Geometry.Quaternion, Rhino.Geometry.Vector3d)
  type: Constructor
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nInitializes a new instance of the Robot Tool class.\n"
  syntax:
    content: public RobotTool(string name, List<Mesh> meshes, Plane attachmentPlane, Plane toolPlane, bool robotHold, double mass, Point3d centerOfGravityPosition, Quaternion centerOfGravityOrientation, Vector3d inertia)
    parameters:
    - id: name
      type: System.String
      description: 'The tool name, must be unique. '
    - id: meshes
      type: System.Collections.Generic.List{Rhino.Geometry.Mesh}
      description: 'The tool mesh. '
    - id: attachmentPlane
      type: Rhino.Geometry.Plane
      description: 'The attachement plane. '
    - id: toolPlane
      type: Rhino.Geometry.Plane
      description: 'The tool center point and tool orientation. '
    - id: robotHold
      type: System.Boolean
      description: 'Specifies whether the robot is holding the tool. '
    - id: mass
      type: System.Double
      description: 'The weight of the tool in kg. '
    - id: centerOfGravityPosition
      type: Rhino.Geometry.Point3d
      description: 'The position of the center of gravity of the tool load. '
    - id: centerOfGravityOrientation
      type: Rhino.Geometry.Quaternion
      description: "The orientation of the tool load coordinate system defined by the principal inertial axes of the \ntool load. Expressed in the wrist coordinate system as a quaternion (q1, q2, q3, q4). "
    - id: inertia
      type: Rhino.Geometry.Vector3d
      description: 'The moment of inertia of the load in kgm2. '
    content.vb: Public Sub New(name As String, meshes As List(Of Mesh), attachmentPlane As Plane, toolPlane As Plane, robotHold As Boolean, mass As Double, centerOfGravityPosition As Point3d, centerOfGravityOrientation As Quaternion, inertia As Vector3d)
  overload: RobotComponents.Definitions.RobotTool.#ctor*
  nameWithType.vb: RobotTool.RobotTool(String, List(Of Mesh), Plane, Plane, Boolean, Double, Point3d, Quaternion, Vector3d)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: RobotComponents.Definitions.RobotTool.RobotTool(System.String, System.Collections.Generic.List(Of Rhino.Geometry.Mesh), Rhino.Geometry.Plane, Rhino.Geometry.Plane, System.Boolean, System.Double, Rhino.Geometry.Point3d, Rhino.Geometry.Quaternion, Rhino.Geometry.Vector3d)
  name.vb: RobotTool(String, List(Of Mesh), Plane, Plane, Boolean, Double, Point3d, Quaternion, Vector3d)
- uid: RobotComponents.Definitions.RobotTool.#ctor(System.String,Rhino.Geometry.Mesh,Rhino.Geometry.Plane,Rhino.Geometry.Plane,System.Boolean,System.Double,Rhino.Geometry.Plane,Rhino.Geometry.Vector3d)
  commentId: M:RobotComponents.Definitions.RobotTool.#ctor(System.String,Rhino.Geometry.Mesh,Rhino.Geometry.Plane,Rhino.Geometry.Plane,System.Boolean,System.Double,Rhino.Geometry.Plane,Rhino.Geometry.Vector3d)
  id: '#ctor(System.String,Rhino.Geometry.Mesh,Rhino.Geometry.Plane,Rhino.Geometry.Plane,System.Boolean,System.Double,Rhino.Geometry.Plane,Rhino.Geometry.Vector3d)'
  parent: RobotComponents.Definitions.RobotTool
  langs:
  - csharp
  - vb
  name: RobotTool(String, Mesh, Plane, Plane, Boolean, Double, Plane, Vector3d)
  nameWithType: RobotTool.RobotTool(String, Mesh, Plane, Plane, Boolean, Double, Plane, Vector3d)
  fullName: RobotComponents.Definitions.RobotTool.RobotTool(System.String, Rhino.Geometry.Mesh, Rhino.Geometry.Plane, Rhino.Geometry.Plane, System.Boolean, System.Double, Rhino.Geometry.Plane, Rhino.Geometry.Vector3d)
  type: Constructor
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nInitializes a new instance of the Robot Tool class.\n"
  syntax:
    content: public RobotTool(string name, Mesh mesh, Plane attachmentPlane, Plane toolPlane, bool robotHold, double mass, Plane centerOfGravity, Vector3d inertia)
    parameters:
    - id: name
      type: System.String
      description: 'The tool name, must be unique. '
    - id: mesh
      type: Rhino.Geometry.Mesh
      description: 'The tool mesh. '
    - id: attachmentPlane
      type: Rhino.Geometry.Plane
      description: 'The attachement plane. '
    - id: toolPlane
      type: Rhino.Geometry.Plane
      description: 'The tool center point and tool orientation. '
    - id: robotHold
      type: System.Boolean
      description: 'Specifies whether the robot is holding the tool. '
    - id: mass
      type: System.Double
      description: 'The weight of the tool in kg. '
    - id: centerOfGravity
      type: Rhino.Geometry.Plane
      description: 'The position and orientation of the center of gravity of the tool load. '
    - id: inertia
      type: Rhino.Geometry.Vector3d
      description: 'The moment of inertia of the load in kgm2. '
    content.vb: Public Sub New(name As String, mesh As Mesh, attachmentPlane As Plane, toolPlane As Plane, robotHold As Boolean, mass As Double, centerOfGravity As Plane, inertia As Vector3d)
  overload: RobotComponents.Definitions.RobotTool.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RobotComponents.Definitions.RobotTool.#ctor(System.String,System.Collections.Generic.List{Rhino.Geometry.Mesh},Rhino.Geometry.Plane,Rhino.Geometry.Plane,System.Boolean,System.Double,Rhino.Geometry.Plane,Rhino.Geometry.Vector3d)
  commentId: M:RobotComponents.Definitions.RobotTool.#ctor(System.String,System.Collections.Generic.List{Rhino.Geometry.Mesh},Rhino.Geometry.Plane,Rhino.Geometry.Plane,System.Boolean,System.Double,Rhino.Geometry.Plane,Rhino.Geometry.Vector3d)
  id: '#ctor(System.String,System.Collections.Generic.List{Rhino.Geometry.Mesh},Rhino.Geometry.Plane,Rhino.Geometry.Plane,System.Boolean,System.Double,Rhino.Geometry.Plane,Rhino.Geometry.Vector3d)'
  parent: RobotComponents.Definitions.RobotTool
  langs:
  - csharp
  - vb
  name: RobotTool(String, List<Mesh>, Plane, Plane, Boolean, Double, Plane, Vector3d)
  nameWithType: RobotTool.RobotTool(String, List<Mesh>, Plane, Plane, Boolean, Double, Plane, Vector3d)
  fullName: RobotComponents.Definitions.RobotTool.RobotTool(System.String, System.Collections.Generic.List<Rhino.Geometry.Mesh>, Rhino.Geometry.Plane, Rhino.Geometry.Plane, System.Boolean, System.Double, Rhino.Geometry.Plane, Rhino.Geometry.Vector3d)
  type: Constructor
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nInitializes a new instance of the Robot Tool class.\n"
  syntax:
    content: public RobotTool(string name, List<Mesh> meshes, Plane attachmentPlane, Plane toolPlane, bool robotHold, double mass, Plane centerOfGravity, Vector3d inertia)
    parameters:
    - id: name
      type: System.String
      description: 'The tool name, must be unique. '
    - id: meshes
      type: System.Collections.Generic.List{Rhino.Geometry.Mesh}
      description: 'The tool mesh. '
    - id: attachmentPlane
      type: Rhino.Geometry.Plane
      description: 'The attachement plane. '
    - id: toolPlane
      type: Rhino.Geometry.Plane
      description: 'The tool center point and tool orientation. '
    - id: robotHold
      type: System.Boolean
      description: 'Specifies whether the robot is holding the tool. '
    - id: mass
      type: System.Double
      description: 'The weight of the tool in kg. '
    - id: centerOfGravity
      type: Rhino.Geometry.Plane
      description: 'The position and orientation of the center of gravity of the tool load. '
    - id: inertia
      type: Rhino.Geometry.Vector3d
      description: 'The moment of inertia of the load in kgm2. '
    content.vb: Public Sub New(name As String, meshes As List(Of Mesh), attachmentPlane As Plane, toolPlane As Plane, robotHold As Boolean, mass As Double, centerOfGravity As Plane, inertia As Vector3d)
  overload: RobotComponents.Definitions.RobotTool.#ctor*
  nameWithType.vb: RobotTool.RobotTool(String, List(Of Mesh), Plane, Plane, Boolean, Double, Plane, Vector3d)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: RobotComponents.Definitions.RobotTool.RobotTool(System.String, System.Collections.Generic.List(Of Rhino.Geometry.Mesh), Rhino.Geometry.Plane, Rhino.Geometry.Plane, System.Boolean, System.Double, Rhino.Geometry.Plane, Rhino.Geometry.Vector3d)
  name.vb: RobotTool(String, List(Of Mesh), Plane, Plane, Boolean, Double, Plane, Vector3d)
- uid: RobotComponents.Definitions.RobotTool.#ctor(RobotComponents.Definitions.RobotTool,System.Boolean)
  commentId: M:RobotComponents.Definitions.RobotTool.#ctor(RobotComponents.Definitions.RobotTool,System.Boolean)
  id: '#ctor(RobotComponents.Definitions.RobotTool,System.Boolean)'
  parent: RobotComponents.Definitions.RobotTool
  langs:
  - csharp
  - vb
  name: RobotTool(RobotTool, Boolean)
  nameWithType: RobotTool.RobotTool(RobotTool, Boolean)
  fullName: RobotComponents.Definitions.RobotTool.RobotTool(RobotComponents.Definitions.RobotTool, System.Boolean)
  type: Constructor
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nInitializes a new instance of the Robot Tool class by duplicating an existing Robot Tool instance. \n"
  syntax:
    content: public RobotTool(RobotTool robotTool, bool duplicateMesh = true)
    parameters:
    - id: robotTool
      type: RobotComponents.Definitions.RobotTool
      description: 'The Robot Tool instance to duplicate. '
    - id: duplicateMesh
      type: System.Boolean
      description: 'Specifies whether the meshes should be duplicated. '
    content.vb: Public Sub New(robotTool As RobotTool, duplicateMesh As Boolean = True)
  overload: RobotComponents.Definitions.RobotTool.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RobotComponents.Definitions.RobotTool.Duplicate
  commentId: M:RobotComponents.Definitions.RobotTool.Duplicate
  id: Duplicate
  parent: RobotComponents.Definitions.RobotTool
  langs:
  - csharp
  - vb
  name: Duplicate()
  nameWithType: RobotTool.Duplicate()
  fullName: RobotComponents.Definitions.RobotTool.Duplicate()
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nReturns an exact duplicate of this Robot Tool instance.\n"
  syntax:
    content: public RobotTool Duplicate()
    return:
      type: RobotComponents.Definitions.RobotTool
      description: 'A deep copy of the Robot Tool instance. '
    content.vb: Public Function Duplicate As RobotTool
  overload: RobotComponents.Definitions.RobotTool.Duplicate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RobotComponents.Definitions.RobotTool.DuplicateWithoutMesh
  commentId: M:RobotComponents.Definitions.RobotTool.DuplicateWithoutMesh
  id: DuplicateWithoutMesh
  parent: RobotComponents.Definitions.RobotTool
  langs:
  - csharp
  - vb
  name: DuplicateWithoutMesh()
  nameWithType: RobotTool.DuplicateWithoutMesh()
  fullName: RobotComponents.Definitions.RobotTool.DuplicateWithoutMesh()
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nReturns an exact duplicate of this Robot Tool instance without meshes.\n"
  syntax:
    content: public RobotTool DuplicateWithoutMesh()
    return:
      type: RobotComponents.Definitions.RobotTool
      description: 'A deep copy of the Robot Tool instance without meshes. '
    content.vb: Public Function DuplicateWithoutMesh As RobotTool
  overload: RobotComponents.Definitions.RobotTool.DuplicateWithoutMesh*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RobotComponents.Definitions.RobotTool.GetEmptyRobotTool
  commentId: M:RobotComponents.Definitions.RobotTool.GetEmptyRobotTool
  id: GetEmptyRobotTool
  parent: RobotComponents.Definitions.RobotTool
  langs:
  - csharp
  - vb
  name: GetEmptyRobotTool()
  nameWithType: RobotTool.GetEmptyRobotTool()
  fullName: RobotComponents.Definitions.RobotTool.GetEmptyRobotTool()
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nReturns an empty Robot Tool instance.\n"
  syntax:
    content: public static RobotTool GetEmptyRobotTool()
    return:
      type: RobotComponents.Definitions.RobotTool
      description: 'The empty Robot Tool. '
    content.vb: Public Shared Function GetEmptyRobotTool As RobotTool
  overload: RobotComponents.Definitions.RobotTool.GetEmptyRobotTool*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: RobotComponents.Definitions.RobotTool.ToString
  commentId: M:RobotComponents.Definitions.RobotTool.ToString
  id: ToString
  parent: RobotComponents.Definitions.RobotTool
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: RobotTool.ToString()
  fullName: RobotComponents.Definitions.RobotTool.ToString()
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nReturns a string that represents the current object.\n"
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: 'A string that represents the current object. '
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: RobotComponents.Definitions.RobotTool.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: RobotComponents.Definitions.RobotTool.ReInitialize
  commentId: M:RobotComponents.Definitions.RobotTool.ReInitialize
  id: ReInitialize
  parent: RobotComponents.Definitions.RobotTool
  langs:
  - csharp
  - vb
  name: ReInitialize()
  nameWithType: RobotTool.ReInitialize()
  fullName: RobotComponents.Definitions.RobotTool.ReInitialize()
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nReinitializes the fields and properties to construct a valid Robot Tool instance. \n"
  syntax:
    content: public void ReInitialize()
    content.vb: Public Sub ReInitialize
  overload: RobotComponents.Definitions.RobotTool.ReInitialize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RobotComponents.Definitions.RobotTool.CalculateToolPosition
  commentId: M:RobotComponents.Definitions.RobotTool.CalculateToolPosition
  id: CalculateToolPosition
  parent: RobotComponents.Definitions.RobotTool
  langs:
  - csharp
  - vb
  name: CalculateToolPosition()
  nameWithType: RobotTool.CalculateToolPosition()
  fullName: RobotComponents.Definitions.RobotTool.CalculateToolPosition()
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nCalculates and returns the tool center point relative to the defined attachment plane. \n"
  syntax:
    content: public Point3d CalculateToolPosition()
    return:
      type: Rhino.Geometry.Point3d
      description: 'The tool center point. '
    content.vb: Public Function CalculateToolPosition As Point3d
  overload: RobotComponents.Definitions.RobotTool.CalculateToolPosition*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RobotComponents.Definitions.RobotTool.CalculateToolOrientation
  commentId: M:RobotComponents.Definitions.RobotTool.CalculateToolOrientation
  id: CalculateToolOrientation
  parent: RobotComponents.Definitions.RobotTool
  langs:
  - csharp
  - vb
  name: CalculateToolOrientation()
  nameWithType: RobotTool.CalculateToolOrientation()
  fullName: RobotComponents.Definitions.RobotTool.CalculateToolOrientation()
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nCalculates and returns the tool center orientation relative to the defined attachment plane. \n"
  syntax:
    content: public Quaternion CalculateToolOrientation()
    return:
      type: Rhino.Geometry.Quaternion
      description: 'The quaternion orientation of the tool center plane. '
    content.vb: Public Function CalculateToolOrientation As Quaternion
  overload: RobotComponents.Definitions.RobotTool.CalculateToolOrientation*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RobotComponents.Definitions.RobotTool.CalculateCenterOfGravityPosition
  commentId: M:RobotComponents.Definitions.RobotTool.CalculateCenterOfGravityPosition
  id: CalculateCenterOfGravityPosition
  parent: RobotComponents.Definitions.RobotTool
  langs:
  - csharp
  - vb
  name: CalculateCenterOfGravityPosition()
  nameWithType: RobotTool.CalculateCenterOfGravityPosition()
  fullName: RobotComponents.Definitions.RobotTool.CalculateCenterOfGravityPosition()
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nCalculates and returns the tool center of gravity relative to the defined attachment plane. \n"
  syntax:
    content: public Point3d CalculateCenterOfGravityPosition()
    return:
      type: Rhino.Geometry.Point3d
      description: 'The center of gravity point. '
    content.vb: Public Function CalculateCenterOfGravityPosition As Point3d
  overload: RobotComponents.Definitions.RobotTool.CalculateCenterOfGravityPosition*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RobotComponents.Definitions.RobotTool.CalculateCenterOfGravityOrientation
  commentId: M:RobotComponents.Definitions.RobotTool.CalculateCenterOfGravityOrientation
  id: CalculateCenterOfGravityOrientation
  parent: RobotComponents.Definitions.RobotTool
  langs:
  - csharp
  - vb
  name: CalculateCenterOfGravityOrientation()
  nameWithType: RobotTool.CalculateCenterOfGravityOrientation()
  fullName: RobotComponents.Definitions.RobotTool.CalculateCenterOfGravityOrientation()
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nCalculates and returns the tool center of gravity orientation relative to the defined attachment plane. \n"
  syntax:
    content: public Quaternion CalculateCenterOfGravityOrientation()
    return:
      type: Rhino.Geometry.Quaternion
      description: 'The quaternion orientation of the tool center of gravity. '
    content.vb: Public Function CalculateCenterOfGravityOrientation As Quaternion
  overload: RobotComponents.Definitions.RobotTool.CalculateCenterOfGravityOrientation*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RobotComponents.Definitions.RobotTool.ToRAPIDDeclaration
  commentId: M:RobotComponents.Definitions.RobotTool.ToRAPIDDeclaration
  id: ToRAPIDDeclaration
  parent: RobotComponents.Definitions.RobotTool
  langs:
  - csharp
  - vb
  name: ToRAPIDDeclaration()
  nameWithType: RobotTool.ToRAPIDDeclaration()
  fullName: RobotComponents.Definitions.RobotTool.ToRAPIDDeclaration()
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nReturns the RAPID declaration code line of the this Robot Tool.\n"
  syntax:
    content: public string ToRAPIDDeclaration()
    return:
      type: System.String
      description: 'The RAPID code line. '
    content.vb: Public Function ToRAPIDDeclaration As String
  overload: RobotComponents.Definitions.RobotTool.ToRAPIDDeclaration*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RobotComponents.Definitions.RobotTool.Transform(Rhino.Geometry.Transform)
  commentId: M:RobotComponents.Definitions.RobotTool.Transform(Rhino.Geometry.Transform)
  id: Transform(Rhino.Geometry.Transform)
  parent: RobotComponents.Definitions.RobotTool
  langs:
  - csharp
  - vb
  name: Transform(Transform)
  nameWithType: RobotTool.Transform(Transform)
  fullName: RobotComponents.Definitions.RobotTool.Transform(Rhino.Geometry.Transform)
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nTransforms the Robot Tool spatial properties (planes and meshes). \n"
  syntax:
    content: public void Transform(Transform xform)
    parameters:
    - id: xform
      type: Rhino.Geometry.Transform
      description: 'The spatial deform. '
    content.vb: Public Sub Transform(xform As Transform)
  overload: RobotComponents.Definitions.RobotTool.Transform*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RobotComponents.Definitions.RobotTool.GetBoundingBox(System.Boolean)
  commentId: M:RobotComponents.Definitions.RobotTool.GetBoundingBox(System.Boolean)
  id: GetBoundingBox(System.Boolean)
  parent: RobotComponents.Definitions.RobotTool
  langs:
  - csharp
  - vb
  name: GetBoundingBox(Boolean)
  nameWithType: RobotTool.GetBoundingBox(Boolean)
  fullName: RobotComponents.Definitions.RobotTool.GetBoundingBox(System.Boolean)
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nReturns the Bounding Box of the object.\n"
  syntax:
    content: public BoundingBox GetBoundingBox(bool accurate)
    parameters:
    - id: accurate
      type: System.Boolean
      description: 'If true, a physically accurate bounding box will be computed. If not, a bounding box estimate will be computed. '
    return:
      type: Rhino.Geometry.BoundingBox
      description: 'The Bounding Box. '
    content.vb: Public Function GetBoundingBox(accurate As Boolean) As BoundingBox
  overload: RobotComponents.Definitions.RobotTool.GetBoundingBox*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RobotComponents.Definitions.RobotTool.IsValid
  commentId: P:RobotComponents.Definitions.RobotTool.IsValid
  id: IsValid
  parent: RobotComponents.Definitions.RobotTool
  langs:
  - csharp
  - vb
  name: IsValid
  nameWithType: RobotTool.IsValid
  fullName: RobotComponents.Definitions.RobotTool.IsValid
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nGets a value indicating whether or not the object is valid.\n"
  syntax:
    content: public bool IsValid { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsValid As Boolean
  overload: RobotComponents.Definitions.RobotTool.IsValid*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: RobotComponents.Definitions.RobotTool.ReferenceType
  commentId: P:RobotComponents.Definitions.RobotTool.ReferenceType
  id: ReferenceType
  parent: RobotComponents.Definitions.RobotTool
  langs:
  - csharp
  - vb
  name: ReferenceType
  nameWithType: RobotTool.ReferenceType
  fullName: RobotComponents.Definitions.RobotTool.ReferenceType
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nGets or sets the Reference Type. \n"
  syntax:
    content: public ReferenceType ReferenceType { get; set; }
    parameters: []
    return:
      type: RobotComponents.Enumerations.ReferenceType
    content.vb: Public Property ReferenceType As ReferenceType
  overload: RobotComponents.Definitions.RobotTool.ReferenceType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: RobotComponents.Definitions.RobotTool.Name
  commentId: P:RobotComponents.Definitions.RobotTool.Name
  id: Name
  parent: RobotComponents.Definitions.RobotTool
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: RobotTool.Name
  fullName: RobotComponents.Definitions.RobotTool.Name
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nGets or sets the tool name.\nEach tool name has to be unique.\n"
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: RobotComponents.Definitions.RobotTool.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: RobotComponents.Definitions.RobotTool.Mesh
  commentId: P:RobotComponents.Definitions.RobotTool.Mesh
  id: Mesh
  parent: RobotComponents.Definitions.RobotTool
  langs:
  - csharp
  - vb
  name: Mesh
  nameWithType: RobotTool.Mesh
  fullName: RobotComponents.Definitions.RobotTool.Mesh
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nGets or sets the mesh.\n"
  syntax:
    content: public Mesh Mesh { get; set; }
    parameters: []
    return:
      type: Rhino.Geometry.Mesh
    content.vb: Public Property Mesh As Mesh
  overload: RobotComponents.Definitions.RobotTool.Mesh*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: RobotComponents.Definitions.RobotTool.AttachmentPlane
  commentId: P:RobotComponents.Definitions.RobotTool.AttachmentPlane
  id: AttachmentPlane
  parent: RobotComponents.Definitions.RobotTool
  langs:
  - csharp
  - vb
  name: AttachmentPlane
  nameWithType: RobotTool.AttachmentPlane
  fullName: RobotComponents.Definitions.RobotTool.AttachmentPlane
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nGets or sets the tool attachment plane.\n"
  syntax:
    content: public Plane AttachmentPlane { get; set; }
    parameters: []
    return:
      type: Rhino.Geometry.Plane
    content.vb: Public Property AttachmentPlane As Plane
  overload: RobotComponents.Definitions.RobotTool.AttachmentPlane*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: RobotComponents.Definitions.RobotTool.ToolPlane
  commentId: P:RobotComponents.Definitions.RobotTool.ToolPlane
  id: ToolPlane
  parent: RobotComponents.Definitions.RobotTool
  langs:
  - csharp
  - vb
  name: ToolPlane
  nameWithType: RobotTool.ToolPlane
  fullName: RobotComponents.Definitions.RobotTool.ToolPlane
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nGets or sets the position and orientaton of the tool center point. \n"
  syntax:
    content: public Plane ToolPlane { get; set; }
    parameters: []
    return:
      type: Rhino.Geometry.Plane
    content.vb: Public Property ToolPlane As Plane
  overload: RobotComponents.Definitions.RobotTool.ToolPlane*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: RobotComponents.Definitions.RobotTool.RobotHold
  commentId: P:RobotComponents.Definitions.RobotTool.RobotHold
  id: RobotHold
  parent: RobotComponents.Definitions.RobotTool
  langs:
  - csharp
  - vb
  name: RobotHold
  nameWithType: RobotTool.RobotHold
  fullName: RobotComponents.Definitions.RobotTool.RobotHold
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nGets or sets a value indicating whether the robot is holding the tool.\nUse true if the robot is holding the tool. \nUse false if the robot is not holding the tool (e.g. stationary tool).\n"
  syntax:
    content: public bool RobotHold { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property RobotHold As Boolean
  overload: RobotComponents.Definitions.RobotTool.RobotHold*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: RobotComponents.Definitions.RobotTool.Position
  commentId: P:RobotComponents.Definitions.RobotTool.Position
  id: Position
  parent: RobotComponents.Definitions.RobotTool
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: RobotTool.Position
  fullName: RobotComponents.Definitions.RobotTool.Position
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nGets the position of the the tool center point which is the offset between the tool center plane and the attachment plane.\n"
  syntax:
    content: public Point3d Position { get; }
    parameters: []
    return:
      type: Rhino.Geometry.Point3d
    content.vb: Public ReadOnly Property Position As Point3d
  overload: RobotComponents.Definitions.RobotTool.Position*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: RobotComponents.Definitions.RobotTool.Orientation
  commentId: P:RobotComponents.Definitions.RobotTool.Orientation
  id: Orientation
  parent: RobotComponents.Definitions.RobotTool
  langs:
  - csharp
  - vb
  name: Orientation
  nameWithType: RobotTool.Orientation
  fullName: RobotComponents.Definitions.RobotTool.Orientation
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nGets the orientation of the tool center point as a Quaternion.\n"
  syntax:
    content: public Quaternion Orientation { get; }
    parameters: []
    return:
      type: Rhino.Geometry.Quaternion
    content.vb: Public ReadOnly Property Orientation As Quaternion
  overload: RobotComponents.Definitions.RobotTool.Orientation*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: RobotComponents.Definitions.RobotTool.Mass
  commentId: P:RobotComponents.Definitions.RobotTool.Mass
  id: Mass
  parent: RobotComponents.Definitions.RobotTool
  langs:
  - csharp
  - vb
  name: Mass
  nameWithType: RobotTool.Mass
  fullName: RobotComponents.Definitions.RobotTool.Mass
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nGets or sets the weight of the load in kg.\n"
  syntax:
    content: public double Mass { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Mass As Double
  overload: RobotComponents.Definitions.RobotTool.Mass*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: RobotComponents.Definitions.RobotTool.CenterOfGravity
  commentId: P:RobotComponents.Definitions.RobotTool.CenterOfGravity
  id: CenterOfGravity
  parent: RobotComponents.Definitions.RobotTool
  langs:
  - csharp
  - vb
  name: CenterOfGravity
  nameWithType: RobotTool.CenterOfGravity
  fullName: RobotComponents.Definitions.RobotTool.CenterOfGravity
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nGets or sets the position and orientation of the center of gravity of the tool load as a plane.\n"
  syntax:
    content: public Plane CenterOfGravity { get; set; }
    parameters: []
    return:
      type: Rhino.Geometry.Plane
    content.vb: Public Property CenterOfGravity As Plane
  overload: RobotComponents.Definitions.RobotTool.CenterOfGravity*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: RobotComponents.Definitions.RobotTool.CenterOfGravityPosition
  commentId: P:RobotComponents.Definitions.RobotTool.CenterOfGravityPosition
  id: CenterOfGravityPosition
  parent: RobotComponents.Definitions.RobotTool
  langs:
  - csharp
  - vb
  name: CenterOfGravityPosition
  nameWithType: RobotTool.CenterOfGravityPosition
  fullName: RobotComponents.Definitions.RobotTool.CenterOfGravityPosition
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nGets the position of the center of gravity of the tool load.\n"
  syntax:
    content: public Point3d CenterOfGravityPosition { get; }
    parameters: []
    return:
      type: Rhino.Geometry.Point3d
    content.vb: Public ReadOnly Property CenterOfGravityPosition As Point3d
  overload: RobotComponents.Definitions.RobotTool.CenterOfGravityPosition*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: RobotComponents.Definitions.RobotTool.CenterOfGravityOrientation
  commentId: P:RobotComponents.Definitions.RobotTool.CenterOfGravityOrientation
  id: CenterOfGravityOrientation
  parent: RobotComponents.Definitions.RobotTool
  langs:
  - csharp
  - vb
  name: CenterOfGravityOrientation
  nameWithType: RobotTool.CenterOfGravityOrientation
  fullName: RobotComponents.Definitions.RobotTool.CenterOfGravityOrientation
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nGets the orientation of the tool load coordinate system defined by the principal inertial axes of the tool load. \nExpressed in the wrist coordinate system as a quaternion (q1, q2, q3, q4).\n"
  syntax:
    content: public Quaternion CenterOfGravityOrientation { get; }
    parameters: []
    return:
      type: Rhino.Geometry.Quaternion
    content.vb: Public ReadOnly Property CenterOfGravityOrientation As Quaternion
  overload: RobotComponents.Definitions.RobotTool.CenterOfGravityOrientation*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: RobotComponents.Definitions.RobotTool.Inertia
  commentId: P:RobotComponents.Definitions.RobotTool.Inertia
  id: Inertia
  parent: RobotComponents.Definitions.RobotTool
  langs:
  - csharp
  - vb
  name: Inertia
  nameWithType: RobotTool.Inertia
  fullName: RobotComponents.Definitions.RobotTool.Inertia
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nGets or set the moment of inertia of the load in kgm2.\n"
  syntax:
    content: public Vector3d Inertia { get; set; }
    parameters: []
    return:
      type: Rhino.Geometry.Vector3d
    content.vb: Public Property Inertia As Vector3d
  overload: RobotComponents.Definitions.RobotTool.Inertia*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: RobotComponents.Definitions
  commentId: N:RobotComponents.Definitions
  isExternal: true
  name: RobotComponents.Definitions
  nameWithType: RobotComponents.Definitions
  fullName: RobotComponents.Definitions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Runtime.Serialization.ISerializable
  commentId: T:System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: true
  name: ISerializable
  nameWithType: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: true
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: RobotComponents.Definitions.RobotTool.#ctor*
  commentId: Overload:RobotComponents.Definitions.RobotTool.#ctor
  isExternal: true
  name: RobotTool
  nameWithType: RobotTool.RobotTool
  fullName: RobotComponents.Definitions.RobotTool.RobotTool
- uid: System.Runtime.Serialization.SerializationInfo
  commentId: T:System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: true
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  commentId: T:System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: RobotComponents.Definitions.RobotTool.GetObjectData*
  commentId: Overload:RobotComponents.Definitions.RobotTool.GetObjectData
  isExternal: true
  name: GetObjectData
  nameWithType: RobotTool.GetObjectData
  fullName: RobotComponents.Definitions.RobotTool.GetObjectData
- uid: System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.Serialization.ISerializable
  isExternal: true
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: ISerializable.GetObjectData(SerializationInfo, StreamingContext)
  fullName: System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: ISerializable.GetObjectData
    fullName: System.Runtime.Serialization.ISerializable.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: ISerializable.GetObjectData
    fullName: System.Runtime.Serialization.ISerializable.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Rhino.Geometry.Mesh
  isExternal: true
  name: Mesh
  nameWithType: Mesh
  fullName: Rhino.Geometry.Mesh
- uid: Rhino.Geometry.Plane
  isExternal: true
  name: Plane
  nameWithType: Plane
  fullName: Rhino.Geometry.Plane
- uid: System.Collections.Generic.List{Rhino.Geometry.Mesh}
  commentId: T:System.Collections.Generic.List{Rhino.Geometry.Mesh}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Mesh>
  nameWithType: List<Mesh>
  fullName: System.Collections.Generic.List<Rhino.Geometry.Mesh>
  nameWithType.vb: List(Of Mesh)
  fullName.vb: System.Collections.Generic.List(Of Rhino.Geometry.Mesh)
  name.vb: List(Of Mesh)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Rhino.Geometry.Mesh
    name: Mesh
    nameWithType: Mesh
    fullName: Rhino.Geometry.Mesh
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Rhino.Geometry.Mesh
    name: Mesh
    nameWithType: Mesh
    fullName: Rhino.Geometry.Mesh
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Rhino.Geometry.Point3d
  isExternal: true
  name: Point3d
  nameWithType: Point3d
  fullName: Rhino.Geometry.Point3d
- uid: Rhino.Geometry.Quaternion
  isExternal: true
  name: Quaternion
  nameWithType: Quaternion
  fullName: Rhino.Geometry.Quaternion
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Rhino.Geometry.Vector3d
  isExternal: true
  name: Vector3d
  nameWithType: Vector3d
  fullName: Rhino.Geometry.Vector3d
- uid: RobotComponents.Definitions.RobotTool
  commentId: T:RobotComponents.Definitions.RobotTool
  parent: RobotComponents.Definitions
  isExternal: true
  name: RobotTool
  nameWithType: RobotTool
  fullName: RobotComponents.Definitions.RobotTool
- uid: RobotComponents.Definitions.RobotTool.Duplicate*
  commentId: Overload:RobotComponents.Definitions.RobotTool.Duplicate
  isExternal: true
  name: Duplicate
  nameWithType: RobotTool.Duplicate
  fullName: RobotComponents.Definitions.RobotTool.Duplicate
- uid: RobotComponents.Definitions.RobotTool.DuplicateWithoutMesh*
  commentId: Overload:RobotComponents.Definitions.RobotTool.DuplicateWithoutMesh
  isExternal: true
  name: DuplicateWithoutMesh
  nameWithType: RobotTool.DuplicateWithoutMesh
  fullName: RobotComponents.Definitions.RobotTool.DuplicateWithoutMesh
- uid: RobotComponents.Definitions.RobotTool.GetEmptyRobotTool*
  commentId: Overload:RobotComponents.Definitions.RobotTool.GetEmptyRobotTool
  isExternal: true
  name: GetEmptyRobotTool
  nameWithType: RobotTool.GetEmptyRobotTool
  fullName: RobotComponents.Definitions.RobotTool.GetEmptyRobotTool
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: RobotComponents.Definitions.RobotTool.ToString*
  commentId: Overload:RobotComponents.Definitions.RobotTool.ToString
  isExternal: true
  name: ToString
  nameWithType: RobotTool.ToString
  fullName: RobotComponents.Definitions.RobotTool.ToString
- uid: RobotComponents.Definitions.RobotTool.ReInitialize*
  commentId: Overload:RobotComponents.Definitions.RobotTool.ReInitialize
  isExternal: true
  name: ReInitialize
  nameWithType: RobotTool.ReInitialize
  fullName: RobotComponents.Definitions.RobotTool.ReInitialize
- uid: RobotComponents.Definitions.RobotTool.CalculateToolPosition*
  commentId: Overload:RobotComponents.Definitions.RobotTool.CalculateToolPosition
  isExternal: true
  name: CalculateToolPosition
  nameWithType: RobotTool.CalculateToolPosition
  fullName: RobotComponents.Definitions.RobotTool.CalculateToolPosition
- uid: RobotComponents.Definitions.RobotTool.CalculateToolOrientation*
  commentId: Overload:RobotComponents.Definitions.RobotTool.CalculateToolOrientation
  isExternal: true
  name: CalculateToolOrientation
  nameWithType: RobotTool.CalculateToolOrientation
  fullName: RobotComponents.Definitions.RobotTool.CalculateToolOrientation
- uid: RobotComponents.Definitions.RobotTool.CalculateCenterOfGravityPosition*
  commentId: Overload:RobotComponents.Definitions.RobotTool.CalculateCenterOfGravityPosition
  isExternal: true
  name: CalculateCenterOfGravityPosition
  nameWithType: RobotTool.CalculateCenterOfGravityPosition
  fullName: RobotComponents.Definitions.RobotTool.CalculateCenterOfGravityPosition
- uid: RobotComponents.Definitions.RobotTool.CalculateCenterOfGravityOrientation*
  commentId: Overload:RobotComponents.Definitions.RobotTool.CalculateCenterOfGravityOrientation
  isExternal: true
  name: CalculateCenterOfGravityOrientation
  nameWithType: RobotTool.CalculateCenterOfGravityOrientation
  fullName: RobotComponents.Definitions.RobotTool.CalculateCenterOfGravityOrientation
- uid: RobotComponents.Definitions.RobotTool.ToRAPIDDeclaration*
  commentId: Overload:RobotComponents.Definitions.RobotTool.ToRAPIDDeclaration
  isExternal: true
  name: ToRAPIDDeclaration
  nameWithType: RobotTool.ToRAPIDDeclaration
  fullName: RobotComponents.Definitions.RobotTool.ToRAPIDDeclaration
- uid: RobotComponents.Definitions.RobotTool.Transform*
  commentId: Overload:RobotComponents.Definitions.RobotTool.Transform
  isExternal: true
  name: Transform
  nameWithType: RobotTool.Transform
  fullName: RobotComponents.Definitions.RobotTool.Transform
- uid: Rhino.Geometry.Transform
  isExternal: true
  name: Transform
  nameWithType: Transform
  fullName: Rhino.Geometry.Transform
- uid: RobotComponents.Definitions.RobotTool.GetBoundingBox*
  commentId: Overload:RobotComponents.Definitions.RobotTool.GetBoundingBox
  isExternal: true
  name: GetBoundingBox
  nameWithType: RobotTool.GetBoundingBox
  fullName: RobotComponents.Definitions.RobotTool.GetBoundingBox
- uid: Rhino.Geometry.BoundingBox
  isExternal: true
  name: BoundingBox
  nameWithType: BoundingBox
  fullName: Rhino.Geometry.BoundingBox
- uid: RobotComponents.Definitions.RobotTool.IsValid*
  commentId: Overload:RobotComponents.Definitions.RobotTool.IsValid
  isExternal: true
  name: IsValid
  nameWithType: RobotTool.IsValid
  fullName: RobotComponents.Definitions.RobotTool.IsValid
- uid: RobotComponents.Definitions.RobotTool.ReferenceType*
  commentId: Overload:RobotComponents.Definitions.RobotTool.ReferenceType
  isExternal: true
  name: ReferenceType
  nameWithType: RobotTool.ReferenceType
  fullName: RobotComponents.Definitions.RobotTool.ReferenceType
- uid: RobotComponents.Enumerations.ReferenceType
  commentId: T:RobotComponents.Enumerations.ReferenceType
  parent: RobotComponents.Enumerations
  isExternal: true
  name: ReferenceType
  nameWithType: ReferenceType
  fullName: RobotComponents.Enumerations.ReferenceType
- uid: RobotComponents.Enumerations
  commentId: N:RobotComponents.Enumerations
  isExternal: true
  name: RobotComponents.Enumerations
  nameWithType: RobotComponents.Enumerations
  fullName: RobotComponents.Enumerations
- uid: RobotComponents.Definitions.RobotTool.Name*
  commentId: Overload:RobotComponents.Definitions.RobotTool.Name
  isExternal: true
  name: Name
  nameWithType: RobotTool.Name
  fullName: RobotComponents.Definitions.RobotTool.Name
- uid: RobotComponents.Definitions.RobotTool.Mesh*
  commentId: Overload:RobotComponents.Definitions.RobotTool.Mesh
  isExternal: true
  name: Mesh
  nameWithType: RobotTool.Mesh
  fullName: RobotComponents.Definitions.RobotTool.Mesh
- uid: RobotComponents.Definitions.RobotTool.AttachmentPlane*
  commentId: Overload:RobotComponents.Definitions.RobotTool.AttachmentPlane
  isExternal: true
  name: AttachmentPlane
  nameWithType: RobotTool.AttachmentPlane
  fullName: RobotComponents.Definitions.RobotTool.AttachmentPlane
- uid: RobotComponents.Definitions.RobotTool.ToolPlane*
  commentId: Overload:RobotComponents.Definitions.RobotTool.ToolPlane
  isExternal: true
  name: ToolPlane
  nameWithType: RobotTool.ToolPlane
  fullName: RobotComponents.Definitions.RobotTool.ToolPlane
- uid: RobotComponents.Definitions.RobotTool.RobotHold*
  commentId: Overload:RobotComponents.Definitions.RobotTool.RobotHold
  isExternal: true
  name: RobotHold
  nameWithType: RobotTool.RobotHold
  fullName: RobotComponents.Definitions.RobotTool.RobotHold
- uid: RobotComponents.Definitions.RobotTool.Position*
  commentId: Overload:RobotComponents.Definitions.RobotTool.Position
  isExternal: true
  name: Position
  nameWithType: RobotTool.Position
  fullName: RobotComponents.Definitions.RobotTool.Position
- uid: RobotComponents.Definitions.RobotTool.Orientation*
  commentId: Overload:RobotComponents.Definitions.RobotTool.Orientation
  isExternal: true
  name: Orientation
  nameWithType: RobotTool.Orientation
  fullName: RobotComponents.Definitions.RobotTool.Orientation
- uid: RobotComponents.Definitions.RobotTool.Mass*
  commentId: Overload:RobotComponents.Definitions.RobotTool.Mass
  isExternal: true
  name: Mass
  nameWithType: RobotTool.Mass
  fullName: RobotComponents.Definitions.RobotTool.Mass
- uid: RobotComponents.Definitions.RobotTool.CenterOfGravity*
  commentId: Overload:RobotComponents.Definitions.RobotTool.CenterOfGravity
  isExternal: true
  name: CenterOfGravity
  nameWithType: RobotTool.CenterOfGravity
  fullName: RobotComponents.Definitions.RobotTool.CenterOfGravity
- uid: RobotComponents.Definitions.RobotTool.CenterOfGravityPosition*
  commentId: Overload:RobotComponents.Definitions.RobotTool.CenterOfGravityPosition
  isExternal: true
  name: CenterOfGravityPosition
  nameWithType: RobotTool.CenterOfGravityPosition
  fullName: RobotComponents.Definitions.RobotTool.CenterOfGravityPosition
- uid: RobotComponents.Definitions.RobotTool.CenterOfGravityOrientation*
  commentId: Overload:RobotComponents.Definitions.RobotTool.CenterOfGravityOrientation
  isExternal: true
  name: CenterOfGravityOrientation
  nameWithType: RobotTool.CenterOfGravityOrientation
  fullName: RobotComponents.Definitions.RobotTool.CenterOfGravityOrientation
- uid: RobotComponents.Definitions.RobotTool.Inertia*
  commentId: Overload:RobotComponents.Definitions.RobotTool.Inertia
  isExternal: true
  name: Inertia
  nameWithType: RobotTool.Inertia
  fullName: RobotComponents.Definitions.RobotTool.Inertia
