### YamlMime:ManagedReference
items:
- uid: RobotComponents.Definitions.ExternalLinearAxis
  commentId: T:RobotComponents.Definitions.ExternalLinearAxis
  id: ExternalLinearAxis
  parent: RobotComponents.Definitions
  children:
  - RobotComponents.Definitions.ExternalLinearAxis.#ctor
  - RobotComponents.Definitions.ExternalLinearAxis.#ctor(Rhino.Geometry.Plane,Rhino.Geometry.Plane,Rhino.Geometry.Interval,Rhino.Geometry.Mesh,Rhino.Geometry.Mesh)
  - RobotComponents.Definitions.ExternalLinearAxis.#ctor(Rhino.Geometry.Plane,Rhino.Geometry.Vector3d,Rhino.Geometry.Interval)
  - RobotComponents.Definitions.ExternalLinearAxis.#ctor(Rhino.Geometry.Plane,Rhino.Geometry.Vector3d,Rhino.Geometry.Interval,Rhino.Geometry.Mesh,Rhino.Geometry.Mesh)
  - RobotComponents.Definitions.ExternalLinearAxis.#ctor(RobotComponents.Definitions.ExternalLinearAxis,System.Boolean)
  - RobotComponents.Definitions.ExternalLinearAxis.#ctor(System.String,Rhino.Geometry.Plane,Rhino.Geometry.Plane,Rhino.Geometry.Interval,Rhino.Geometry.Mesh,Rhino.Geometry.Mesh)
  - RobotComponents.Definitions.ExternalLinearAxis.#ctor(System.String,Rhino.Geometry.Plane,Rhino.Geometry.Plane,Rhino.Geometry.Interval,System.Collections.Generic.List{Rhino.Geometry.Mesh},System.Collections.Generic.List{Rhino.Geometry.Mesh})
  - RobotComponents.Definitions.ExternalLinearAxis.#ctor(System.String,Rhino.Geometry.Plane,Rhino.Geometry.Vector3d,Rhino.Geometry.Interval,Rhino.Geometry.Mesh,Rhino.Geometry.Mesh)
  - RobotComponents.Definitions.ExternalLinearAxis.#ctor(System.String,Rhino.Geometry.Plane,Rhino.Geometry.Vector3d,Rhino.Geometry.Interval,System.Collections.Generic.List{Rhino.Geometry.Mesh},System.Collections.Generic.List{Rhino.Geometry.Mesh})
  - RobotComponents.Definitions.ExternalLinearAxis.AttachmentPlane
  - RobotComponents.Definitions.ExternalLinearAxis.AxisCurve
  - RobotComponents.Definitions.ExternalLinearAxis.AxisLimits
  - RobotComponents.Definitions.ExternalLinearAxis.AxisNumber
  - RobotComponents.Definitions.ExternalLinearAxis.AxisPlane
  - RobotComponents.Definitions.ExternalLinearAxis.AxisType
  - RobotComponents.Definitions.ExternalLinearAxis.BaseMesh
  - RobotComponents.Definitions.ExternalLinearAxis.CalculatePosition(System.Double,System.Boolean@)
  - RobotComponents.Definitions.ExternalLinearAxis.CalculatePositionSave(System.Double)
  - RobotComponents.Definitions.ExternalLinearAxis.CalculateTransformationMatrix(System.Double,System.Boolean@)
  - RobotComponents.Definitions.ExternalLinearAxis.CalculateTransformationMatrixSave(System.Double)
  - RobotComponents.Definitions.ExternalLinearAxis.Duplicate
  - RobotComponents.Definitions.ExternalLinearAxis.DuplicateExternalAxis
  - RobotComponents.Definitions.ExternalLinearAxis.DuplicateExternalAxisWithoutMesh
  - RobotComponents.Definitions.ExternalLinearAxis.DuplicateWithoutMesh
  - RobotComponents.Definitions.ExternalLinearAxis.GetAxisCurve
  - RobotComponents.Definitions.ExternalLinearAxis.IsValid
  - RobotComponents.Definitions.ExternalLinearAxis.LinkMesh
  - RobotComponents.Definitions.ExternalLinearAxis.Name
  - RobotComponents.Definitions.ExternalLinearAxis.PosedMeshes
  - RobotComponents.Definitions.ExternalLinearAxis.PoseMeshes(System.Double)
  - RobotComponents.Definitions.ExternalLinearAxis.ReInitialize
  - RobotComponents.Definitions.ExternalLinearAxis.ToString
  - RobotComponents.Definitions.ExternalLinearAxis.Transform(Rhino.Geometry.Transform)
  langs:
  - csharp
  - vb
  name: ExternalLinearAxis
  nameWithType: ExternalLinearAxis
  fullName: RobotComponents.Definitions.ExternalLinearAxis
  type: Class
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nExternal linear axis class, main class for external linear axis.\n"
  syntax:
    content: 'public class ExternalLinearAxis : ExternalAxis'
    content.vb: >-
      Public Class ExternalLinearAxis
          Inherits ExternalAxis
  inheritance:
  - System.Object
  - RobotComponents.Definitions.ExternalAxis
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: RobotComponents.Definitions.ExternalLinearAxis.#ctor
  commentId: M:RobotComponents.Definitions.ExternalLinearAxis.#ctor
  id: '#ctor'
  parent: RobotComponents.Definitions.ExternalLinearAxis
  langs:
  - csharp
  - vb
  name: ExternalLinearAxis()
  nameWithType: ExternalLinearAxis.ExternalLinearAxis()
  fullName: RobotComponents.Definitions.ExternalLinearAxis.ExternalLinearAxis()
  type: Constructor
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nAn empty constuctor that creates an empty external linear axis.\n"
  syntax:
    content: public ExternalLinearAxis()
    content.vb: Public Sub New
  overload: RobotComponents.Definitions.ExternalLinearAxis.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RobotComponents.Definitions.ExternalLinearAxis.#ctor(Rhino.Geometry.Plane,Rhino.Geometry.Vector3d,Rhino.Geometry.Interval)
  commentId: M:RobotComponents.Definitions.ExternalLinearAxis.#ctor(Rhino.Geometry.Plane,Rhino.Geometry.Vector3d,Rhino.Geometry.Interval)
  id: '#ctor(Rhino.Geometry.Plane,Rhino.Geometry.Vector3d,Rhino.Geometry.Interval)'
  parent: RobotComponents.Definitions.ExternalLinearAxis
  langs:
  - csharp
  - vb
  name: ExternalLinearAxis(Plane, Vector3d, Interval)
  nameWithType: ExternalLinearAxis.ExternalLinearAxis(Plane, Vector3d, Interval)
  fullName: RobotComponents.Definitions.ExternalLinearAxis.ExternalLinearAxis(Rhino.Geometry.Plane, Rhino.Geometry.Vector3d, Rhino.Geometry.Interval)
  type: Constructor
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nDefines an external linear axis with empty meshes. \n"
  syntax:
    content: public ExternalLinearAxis(Plane attachmentPlane, Vector3d axis, Interval axisLimits)
    parameters:
    - id: attachmentPlane
      type: Rhino.Geometry.Plane
      description: 'The attachment plane posed at the location for axis value 0. '
    - id: axis
      type: Rhino.Geometry.Vector3d
      description: 'The positive movement direction of the external linear axis as a vector. '
    - id: axisLimits
      type: Rhino.Geometry.Interval
      description: 'The movement limits of the external linear axis as an interval. '
    content.vb: Public Sub New(attachmentPlane As Plane, axis As Vector3d, axisLimits As Interval)
  overload: RobotComponents.Definitions.ExternalLinearAxis.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RobotComponents.Definitions.ExternalLinearAxis.#ctor(Rhino.Geometry.Plane,Rhino.Geometry.Vector3d,Rhino.Geometry.Interval,Rhino.Geometry.Mesh,Rhino.Geometry.Mesh)
  commentId: M:RobotComponents.Definitions.ExternalLinearAxis.#ctor(Rhino.Geometry.Plane,Rhino.Geometry.Vector3d,Rhino.Geometry.Interval,Rhino.Geometry.Mesh,Rhino.Geometry.Mesh)
  id: '#ctor(Rhino.Geometry.Plane,Rhino.Geometry.Vector3d,Rhino.Geometry.Interval,Rhino.Geometry.Mesh,Rhino.Geometry.Mesh)'
  parent: RobotComponents.Definitions.ExternalLinearAxis
  langs:
  - csharp
  - vb
  name: ExternalLinearAxis(Plane, Vector3d, Interval, Mesh, Mesh)
  nameWithType: ExternalLinearAxis.ExternalLinearAxis(Plane, Vector3d, Interval, Mesh, Mesh)
  fullName: RobotComponents.Definitions.ExternalLinearAxis.ExternalLinearAxis(Rhino.Geometry.Plane, Rhino.Geometry.Vector3d, Rhino.Geometry.Interval, Rhino.Geometry.Mesh, Rhino.Geometry.Mesh)
  type: Constructor
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nDefines an external linear axis with a mesh geometry. \n"
  syntax:
    content: public ExternalLinearAxis(Plane attachmentPlane, Vector3d axis, Interval axisLimits, Mesh baseMesh, Mesh linkMesh)
    parameters:
    - id: attachmentPlane
      type: Rhino.Geometry.Plane
      description: 'The attachment plane posed at the location for axis value 0. '
    - id: axis
      type: Rhino.Geometry.Vector3d
      description: 'The positive movement direction of the external linear axis as a vector. '
    - id: axisLimits
      type: Rhino.Geometry.Interval
      description: 'The movement limits of the external linear axis as an interval. '
    - id: baseMesh
      type: Rhino.Geometry.Mesh
      description: 'The base mesh of the external linear axis. '
    - id: linkMesh
      type: Rhino.Geometry.Mesh
      description: 'The link mesh of the external linear axis posed for external axis value 0. '
    content.vb: Public Sub New(attachmentPlane As Plane, axis As Vector3d, axisLimits As Interval, baseMesh As Mesh, linkMesh As Mesh)
  overload: RobotComponents.Definitions.ExternalLinearAxis.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RobotComponents.Definitions.ExternalLinearAxis.#ctor(Rhino.Geometry.Plane,Rhino.Geometry.Plane,Rhino.Geometry.Interval,Rhino.Geometry.Mesh,Rhino.Geometry.Mesh)
  commentId: M:RobotComponents.Definitions.ExternalLinearAxis.#ctor(Rhino.Geometry.Plane,Rhino.Geometry.Plane,Rhino.Geometry.Interval,Rhino.Geometry.Mesh,Rhino.Geometry.Mesh)
  id: '#ctor(Rhino.Geometry.Plane,Rhino.Geometry.Plane,Rhino.Geometry.Interval,Rhino.Geometry.Mesh,Rhino.Geometry.Mesh)'
  parent: RobotComponents.Definitions.ExternalLinearAxis
  langs:
  - csharp
  - vb
  name: ExternalLinearAxis(Plane, Plane, Interval, Mesh, Mesh)
  nameWithType: ExternalLinearAxis.ExternalLinearAxis(Plane, Plane, Interval, Mesh, Mesh)
  fullName: RobotComponents.Definitions.ExternalLinearAxis.ExternalLinearAxis(Rhino.Geometry.Plane, Rhino.Geometry.Plane, Rhino.Geometry.Interval, Rhino.Geometry.Mesh, Rhino.Geometry.Mesh)
  type: Constructor
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nDefines an external linear axis with a mesh geometry.\n"
  syntax:
    content: public ExternalLinearAxis(Plane attachmentPlane, Plane axisPlane, Interval axisLimits, Mesh baseMesh, Mesh linkMesh)
    parameters:
    - id: attachmentPlane
      type: Rhino.Geometry.Plane
      description: 'The attachment plane posed at the location for axis value 0. '
    - id: axisPlane
      type: Rhino.Geometry.Plane
      description: 'The axis plane. The Z-axis defines the positive movement direction of the axis. '
    - id: axisLimits
      type: Rhino.Geometry.Interval
      description: 'The movement limits of the external linear axis as an interval. '
    - id: baseMesh
      type: Rhino.Geometry.Mesh
      description: 'The base mesh of the external linear axis. '
    - id: linkMesh
      type: Rhino.Geometry.Mesh
      description: 'The link mesh of the external linear axis posed for external axis value 0. '
    content.vb: Public Sub New(attachmentPlane As Plane, axisPlane As Plane, axisLimits As Interval, baseMesh As Mesh, linkMesh As Mesh)
  overload: RobotComponents.Definitions.ExternalLinearAxis.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RobotComponents.Definitions.ExternalLinearAxis.#ctor(System.String,Rhino.Geometry.Plane,Rhino.Geometry.Vector3d,Rhino.Geometry.Interval,Rhino.Geometry.Mesh,Rhino.Geometry.Mesh)
  commentId: M:RobotComponents.Definitions.ExternalLinearAxis.#ctor(System.String,Rhino.Geometry.Plane,Rhino.Geometry.Vector3d,Rhino.Geometry.Interval,Rhino.Geometry.Mesh,Rhino.Geometry.Mesh)
  id: '#ctor(System.String,Rhino.Geometry.Plane,Rhino.Geometry.Vector3d,Rhino.Geometry.Interval,Rhino.Geometry.Mesh,Rhino.Geometry.Mesh)'
  parent: RobotComponents.Definitions.ExternalLinearAxis
  langs:
  - csharp
  - vb
  name: ExternalLinearAxis(String, Plane, Vector3d, Interval, Mesh, Mesh)
  nameWithType: ExternalLinearAxis.ExternalLinearAxis(String, Plane, Vector3d, Interval, Mesh, Mesh)
  fullName: RobotComponents.Definitions.ExternalLinearAxis.ExternalLinearAxis(System.String, Rhino.Geometry.Plane, Rhino.Geometry.Vector3d, Rhino.Geometry.Interval, Rhino.Geometry.Mesh, Rhino.Geometry.Mesh)
  type: Constructor
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nDefines an external linear axis with a mesh geometry and a name.\n"
  syntax:
    content: public ExternalLinearAxis(string name, Plane attachmentPlane, Vector3d axis, Interval axisLimits, Mesh baseMesh, Mesh linkMesh)
    parameters:
    - id: name
      type: System.String
      description: 'The axis name as a string. '
    - id: attachmentPlane
      type: Rhino.Geometry.Plane
      description: 'The attachment plane posed at the location for axis value 0. '
    - id: axis
      type: Rhino.Geometry.Vector3d
      description: 'The positive movement direction of the external linear axis as a vector. '
    - id: axisLimits
      type: Rhino.Geometry.Interval
      description: 'The movement limits of the external linear axis as an interval. '
    - id: baseMesh
      type: Rhino.Geometry.Mesh
      description: 'The base mesh of the external linear axis. '
    - id: linkMesh
      type: Rhino.Geometry.Mesh
      description: 'The link mesh of the external linear axis posed for external axis value 0. '
    content.vb: Public Sub New(name As String, attachmentPlane As Plane, axis As Vector3d, axisLimits As Interval, baseMesh As Mesh, linkMesh As Mesh)
  overload: RobotComponents.Definitions.ExternalLinearAxis.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RobotComponents.Definitions.ExternalLinearAxis.#ctor(System.String,Rhino.Geometry.Plane,Rhino.Geometry.Vector3d,Rhino.Geometry.Interval,System.Collections.Generic.List{Rhino.Geometry.Mesh},System.Collections.Generic.List{Rhino.Geometry.Mesh})
  commentId: M:RobotComponents.Definitions.ExternalLinearAxis.#ctor(System.String,Rhino.Geometry.Plane,Rhino.Geometry.Vector3d,Rhino.Geometry.Interval,System.Collections.Generic.List{Rhino.Geometry.Mesh},System.Collections.Generic.List{Rhino.Geometry.Mesh})
  id: '#ctor(System.String,Rhino.Geometry.Plane,Rhino.Geometry.Vector3d,Rhino.Geometry.Interval,System.Collections.Generic.List{Rhino.Geometry.Mesh},System.Collections.Generic.List{Rhino.Geometry.Mesh})'
  parent: RobotComponents.Definitions.ExternalLinearAxis
  langs:
  - csharp
  - vb
  name: ExternalLinearAxis(String, Plane, Vector3d, Interval, List<Mesh>, List<Mesh>)
  nameWithType: ExternalLinearAxis.ExternalLinearAxis(String, Plane, Vector3d, Interval, List<Mesh>, List<Mesh>)
  fullName: RobotComponents.Definitions.ExternalLinearAxis.ExternalLinearAxis(System.String, Rhino.Geometry.Plane, Rhino.Geometry.Vector3d, Rhino.Geometry.Interval, System.Collections.Generic.List<Rhino.Geometry.Mesh>, System.Collections.Generic.List<Rhino.Geometry.Mesh>)
  type: Constructor
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nDefines an external linear axis with a mesh geometry and a name.\n"
  syntax:
    content: public ExternalLinearAxis(string name, Plane attachmentPlane, Vector3d axis, Interval axisLimits, List<Mesh> baseMeshes, List<Mesh> linkMeshes)
    parameters:
    - id: name
      type: System.String
      description: 'The axis name as a string. '
    - id: attachmentPlane
      type: Rhino.Geometry.Plane
      description: 'The attachment plane posed at the location for axis value 0. '
    - id: axis
      type: Rhino.Geometry.Vector3d
      description: 'The positive movement direction of the external linear axis as a vector. '
    - id: axisLimits
      type: Rhino.Geometry.Interval
      description: 'The movement limits of the external linear axis as an interval. '
    - id: baseMeshes
      type: System.Collections.Generic.List{Rhino.Geometry.Mesh}
      description: 'The base mesh of the external linear axis as a list with Meshes '
    - id: linkMeshes
      type: System.Collections.Generic.List{Rhino.Geometry.Mesh}
      description: 'The link mesh of the external linear axis posed for external axis value 0 as a list with Meshes. '
    content.vb: Public Sub New(name As String, attachmentPlane As Plane, axis As Vector3d, axisLimits As Interval, baseMeshes As List(Of Mesh), linkMeshes As List(Of Mesh))
  overload: RobotComponents.Definitions.ExternalLinearAxis.#ctor*
  nameWithType.vb: ExternalLinearAxis.ExternalLinearAxis(String, Plane, Vector3d, Interval, List(Of Mesh), List(Of Mesh))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: RobotComponents.Definitions.ExternalLinearAxis.ExternalLinearAxis(System.String, Rhino.Geometry.Plane, Rhino.Geometry.Vector3d, Rhino.Geometry.Interval, System.Collections.Generic.List(Of Rhino.Geometry.Mesh), System.Collections.Generic.List(Of Rhino.Geometry.Mesh))
  name.vb: ExternalLinearAxis(String, Plane, Vector3d, Interval, List(Of Mesh), List(Of Mesh))
- uid: RobotComponents.Definitions.ExternalLinearAxis.#ctor(System.String,Rhino.Geometry.Plane,Rhino.Geometry.Plane,Rhino.Geometry.Interval,Rhino.Geometry.Mesh,Rhino.Geometry.Mesh)
  commentId: M:RobotComponents.Definitions.ExternalLinearAxis.#ctor(System.String,Rhino.Geometry.Plane,Rhino.Geometry.Plane,Rhino.Geometry.Interval,Rhino.Geometry.Mesh,Rhino.Geometry.Mesh)
  id: '#ctor(System.String,Rhino.Geometry.Plane,Rhino.Geometry.Plane,Rhino.Geometry.Interval,Rhino.Geometry.Mesh,Rhino.Geometry.Mesh)'
  parent: RobotComponents.Definitions.ExternalLinearAxis
  langs:
  - csharp
  - vb
  name: ExternalLinearAxis(String, Plane, Plane, Interval, Mesh, Mesh)
  nameWithType: ExternalLinearAxis.ExternalLinearAxis(String, Plane, Plane, Interval, Mesh, Mesh)
  fullName: RobotComponents.Definitions.ExternalLinearAxis.ExternalLinearAxis(System.String, Rhino.Geometry.Plane, Rhino.Geometry.Plane, Rhino.Geometry.Interval, Rhino.Geometry.Mesh, Rhino.Geometry.Mesh)
  type: Constructor
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nDefines an external linear axis with a mesh geometry and a name. \n"
  syntax:
    content: public ExternalLinearAxis(string name, Plane attachmentPlane, Plane axisPlane, Interval axisLimits, Mesh baseMesh, Mesh linkMesh)
    parameters:
    - id: name
      type: System.String
      description: 'The axis name as a string. '
    - id: attachmentPlane
      type: Rhino.Geometry.Plane
      description: 'The attachment plane posed at the location for axis value 0. '
    - id: axisPlane
      type: Rhino.Geometry.Plane
      description: 'The axis plane. The Z-axis defines the positive movement direction of the axis. '
    - id: axisLimits
      type: Rhino.Geometry.Interval
      description: 'The movement limits of the external linear axis as an interval. '
    - id: baseMesh
      type: Rhino.Geometry.Mesh
      description: 'The base mesh of the external linear axis. '
    - id: linkMesh
      type: Rhino.Geometry.Mesh
      description: 'The link mesh of the external linear axis posed for external axis value 0. '
    content.vb: Public Sub New(name As String, attachmentPlane As Plane, axisPlane As Plane, axisLimits As Interval, baseMesh As Mesh, linkMesh As Mesh)
  overload: RobotComponents.Definitions.ExternalLinearAxis.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RobotComponents.Definitions.ExternalLinearAxis.#ctor(System.String,Rhino.Geometry.Plane,Rhino.Geometry.Plane,Rhino.Geometry.Interval,System.Collections.Generic.List{Rhino.Geometry.Mesh},System.Collections.Generic.List{Rhino.Geometry.Mesh})
  commentId: M:RobotComponents.Definitions.ExternalLinearAxis.#ctor(System.String,Rhino.Geometry.Plane,Rhino.Geometry.Plane,Rhino.Geometry.Interval,System.Collections.Generic.List{Rhino.Geometry.Mesh},System.Collections.Generic.List{Rhino.Geometry.Mesh})
  id: '#ctor(System.String,Rhino.Geometry.Plane,Rhino.Geometry.Plane,Rhino.Geometry.Interval,System.Collections.Generic.List{Rhino.Geometry.Mesh},System.Collections.Generic.List{Rhino.Geometry.Mesh})'
  parent: RobotComponents.Definitions.ExternalLinearAxis
  langs:
  - csharp
  - vb
  name: ExternalLinearAxis(String, Plane, Plane, Interval, List<Mesh>, List<Mesh>)
  nameWithType: ExternalLinearAxis.ExternalLinearAxis(String, Plane, Plane, Interval, List<Mesh>, List<Mesh>)
  fullName: RobotComponents.Definitions.ExternalLinearAxis.ExternalLinearAxis(System.String, Rhino.Geometry.Plane, Rhino.Geometry.Plane, Rhino.Geometry.Interval, System.Collections.Generic.List<Rhino.Geometry.Mesh>, System.Collections.Generic.List<Rhino.Geometry.Mesh>)
  type: Constructor
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nDefines an external linear axis with a mesh geometry and a name. \n"
  syntax:
    content: public ExternalLinearAxis(string name, Plane attachmentPlane, Plane axisPlane, Interval axisLimits, List<Mesh> baseMeshes, List<Mesh> linkMeshes)
    parameters:
    - id: name
      type: System.String
      description: 'The axis name as a string. '
    - id: attachmentPlane
      type: Rhino.Geometry.Plane
      description: 'The attachment plane posed at the location for axis value 0. '
    - id: axisPlane
      type: Rhino.Geometry.Plane
      description: 'The axis plane. The Z-axis defines the positive movement direction of the axis. '
    - id: axisLimits
      type: Rhino.Geometry.Interval
      description: 'The movement limits of the external linear axis as an interval. '
    - id: baseMeshes
      type: System.Collections.Generic.List{Rhino.Geometry.Mesh}
      description: 'The base mesh of the external linear axis as list with meshes '
    - id: linkMeshes
      type: System.Collections.Generic.List{Rhino.Geometry.Mesh}
      description: 'The link mesh of the external linear axis posed for external axis value 0 as a list with meshes. '
    content.vb: Public Sub New(name As String, attachmentPlane As Plane, axisPlane As Plane, axisLimits As Interval, baseMeshes As List(Of Mesh), linkMeshes As List(Of Mesh))
  overload: RobotComponents.Definitions.ExternalLinearAxis.#ctor*
  nameWithType.vb: ExternalLinearAxis.ExternalLinearAxis(String, Plane, Plane, Interval, List(Of Mesh), List(Of Mesh))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: RobotComponents.Definitions.ExternalLinearAxis.ExternalLinearAxis(System.String, Rhino.Geometry.Plane, Rhino.Geometry.Plane, Rhino.Geometry.Interval, System.Collections.Generic.List(Of Rhino.Geometry.Mesh), System.Collections.Generic.List(Of Rhino.Geometry.Mesh))
  name.vb: ExternalLinearAxis(String, Plane, Plane, Interval, List(Of Mesh), List(Of Mesh))
- uid: RobotComponents.Definitions.ExternalLinearAxis.#ctor(RobotComponents.Definitions.ExternalLinearAxis,System.Boolean)
  commentId: M:RobotComponents.Definitions.ExternalLinearAxis.#ctor(RobotComponents.Definitions.ExternalLinearAxis,System.Boolean)
  id: '#ctor(RobotComponents.Definitions.ExternalLinearAxis,System.Boolean)'
  parent: RobotComponents.Definitions.ExternalLinearAxis
  langs:
  - csharp
  - vb
  name: ExternalLinearAxis(ExternalLinearAxis, Boolean)
  nameWithType: ExternalLinearAxis.ExternalLinearAxis(ExternalLinearAxis, Boolean)
  fullName: RobotComponents.Definitions.ExternalLinearAxis.ExternalLinearAxis(RobotComponents.Definitions.ExternalLinearAxis, System.Boolean)
  type: Constructor
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nCreates a new external linear axis by duplicating an existing axis.\nThis creates a deep copy of the existing axis.\n"
  syntax:
    content: public ExternalLinearAxis(ExternalLinearAxis externalLinearAxis, bool duplicateMesh = true)
    parameters:
    - id: externalLinearAxis
      type: RobotComponents.Definitions.ExternalLinearAxis
      description: 'The external linear axis that should be duplicated. '
    - id: duplicateMesh
      type: System.Boolean
      description: 'A boolean that indicates if the mesh should be duplicated. '
    content.vb: Public Sub New(externalLinearAxis As ExternalLinearAxis, duplicateMesh As Boolean = True)
  overload: RobotComponents.Definitions.ExternalLinearAxis.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RobotComponents.Definitions.ExternalLinearAxis.Duplicate
  commentId: M:RobotComponents.Definitions.ExternalLinearAxis.Duplicate
  id: Duplicate
  parent: RobotComponents.Definitions.ExternalLinearAxis
  langs:
  - csharp
  - vb
  name: Duplicate()
  nameWithType: ExternalLinearAxis.Duplicate()
  fullName: RobotComponents.Definitions.ExternalLinearAxis.Duplicate()
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nA method to duplicate the ExternalLinearAxis object. \n"
  syntax:
    content: public ExternalLinearAxis Duplicate()
    return:
      type: RobotComponents.Definitions.ExternalLinearAxis
      description: 'Returns a deep copy for the ExternalLinearAxis object. '
    content.vb: Public Function Duplicate As ExternalLinearAxis
  overload: RobotComponents.Definitions.ExternalLinearAxis.Duplicate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RobotComponents.Definitions.ExternalLinearAxis.DuplicateWithoutMesh
  commentId: M:RobotComponents.Definitions.ExternalLinearAxis.DuplicateWithoutMesh
  id: DuplicateWithoutMesh
  parent: RobotComponents.Definitions.ExternalLinearAxis
  langs:
  - csharp
  - vb
  name: DuplicateWithoutMesh()
  nameWithType: ExternalLinearAxis.DuplicateWithoutMesh()
  fullName: RobotComponents.Definitions.ExternalLinearAxis.DuplicateWithoutMesh()
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nA method to duplicate the ExternalLinearAxis object without duplicating the mesh. It will set an empty mesh. \n"
  syntax:
    content: public ExternalLinearAxis DuplicateWithoutMesh()
    return:
      type: RobotComponents.Definitions.ExternalLinearAxis
      description: 'Returns a deep copy for the ExternalLinearAxis object without a mesh. '
    content.vb: Public Function DuplicateWithoutMesh As ExternalLinearAxis
  overload: RobotComponents.Definitions.ExternalLinearAxis.DuplicateWithoutMesh*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RobotComponents.Definitions.ExternalLinearAxis.DuplicateExternalAxis
  commentId: M:RobotComponents.Definitions.ExternalLinearAxis.DuplicateExternalAxis
  id: DuplicateExternalAxis
  parent: RobotComponents.Definitions.ExternalLinearAxis
  langs:
  - csharp
  - vb
  name: DuplicateExternalAxis()
  nameWithType: ExternalLinearAxis.DuplicateExternalAxis()
  fullName: RobotComponents.Definitions.ExternalLinearAxis.DuplicateExternalAxis()
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nA method to duplicate the ExternalLinearAxis object to an ExternalAxis object. \n"
  syntax:
    content: public override ExternalAxis DuplicateExternalAxis()
    return:
      type: RobotComponents.Definitions.ExternalAxis
      description: 'Returns a deep copy of the ExternalLinearAxis object as an ExternalAxis object. '
    content.vb: Public Overrides Function DuplicateExternalAxis As ExternalAxis
  overridden: RobotComponents.Definitions.ExternalAxis.DuplicateExternalAxis
  overload: RobotComponents.Definitions.ExternalLinearAxis.DuplicateExternalAxis*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: RobotComponents.Definitions.ExternalLinearAxis.DuplicateExternalAxisWithoutMesh
  commentId: M:RobotComponents.Definitions.ExternalLinearAxis.DuplicateExternalAxisWithoutMesh
  id: DuplicateExternalAxisWithoutMesh
  parent: RobotComponents.Definitions.ExternalLinearAxis
  langs:
  - csharp
  - vb
  name: DuplicateExternalAxisWithoutMesh()
  nameWithType: ExternalLinearAxis.DuplicateExternalAxisWithoutMesh()
  fullName: RobotComponents.Definitions.ExternalLinearAxis.DuplicateExternalAxisWithoutMesh()
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nA method to duplicate the ExternalLinearAxis object to an ExternalAxis object without the mesh. \n"
  syntax:
    content: public override ExternalAxis DuplicateExternalAxisWithoutMesh()
    return:
      type: RobotComponents.Definitions.ExternalAxis
      description: 'Returns a deep copy of the ExternalLinearAxis object as an ExternalAxis object with empty meshes. '
    content.vb: Public Overrides Function DuplicateExternalAxisWithoutMesh As ExternalAxis
  overridden: RobotComponents.Definitions.ExternalAxis.DuplicateExternalAxisWithoutMesh
  overload: RobotComponents.Definitions.ExternalLinearAxis.DuplicateExternalAxisWithoutMesh*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: RobotComponents.Definitions.ExternalLinearAxis.ToString
  commentId: M:RobotComponents.Definitions.ExternalLinearAxis.ToString
  id: ToString
  parent: RobotComponents.Definitions.ExternalLinearAxis
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ExternalLinearAxis.ToString()
  fullName: RobotComponents.Definitions.ExternalLinearAxis.ToString()
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nReturns a string that represents the current object.\n"
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: 'A string that represents the current object. '
    content.vb: Public Overrides Function ToString As String
  overridden: RobotComponents.Definitions.ExternalAxis.ToString
  overload: RobotComponents.Definitions.ExternalLinearAxis.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: RobotComponents.Definitions.ExternalLinearAxis.GetAxisCurve
  commentId: M:RobotComponents.Definitions.ExternalLinearAxis.GetAxisCurve
  id: GetAxisCurve
  parent: RobotComponents.Definitions.ExternalLinearAxis
  langs:
  - csharp
  - vb
  name: GetAxisCurve()
  nameWithType: ExternalLinearAxis.GetAxisCurve()
  fullName: RobotComponents.Definitions.ExternalLinearAxis.GetAxisCurve()
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nDefines the axis curve based on the axis limits, the momvement direction and the attachment plane origin.\n"
  syntax:
    content: public void GetAxisCurve()
    content.vb: Public Sub GetAxisCurve
  overload: RobotComponents.Definitions.ExternalLinearAxis.GetAxisCurve*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RobotComponents.Definitions.ExternalLinearAxis.CalculatePosition(System.Double,System.Boolean@)
  commentId: M:RobotComponents.Definitions.ExternalLinearAxis.CalculatePosition(System.Double,System.Boolean@)
  id: CalculatePosition(System.Double,System.Boolean@)
  parent: RobotComponents.Definitions.ExternalLinearAxis
  langs:
  - csharp
  - vb
  name: CalculatePosition(Double, out Boolean)
  nameWithType: ExternalLinearAxis.CalculatePosition(Double, out Boolean)
  fullName: RobotComponents.Definitions.ExternalLinearAxis.CalculatePosition(System.Double, out System.Boolean)
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nCalculates the position of the attachment plane for a defined external axis value.\nThis method does not take into account the axis limits. \n"
  syntax:
    content: public override Plane CalculatePosition(double axisValue, out bool inLimits)
    parameters:
    - id: axisValue
      type: System.Double
      description: 'The external axis value to calculate the position of the attachment plane for. '
    - id: inLimits
      type: System.Boolean
      description: 'A boolean that indicates if the defined exernal axis value is inside its limits. '
    return:
      type: Rhino.Geometry.Plane
      description: 'The posed attachement plane. '
    content.vb: Public Overrides Function CalculatePosition(axisValue As Double, ByRef inLimits As Boolean) As Plane
  overridden: RobotComponents.Definitions.ExternalAxis.CalculatePosition(System.Double,System.Boolean@)
  overload: RobotComponents.Definitions.ExternalLinearAxis.CalculatePosition*
  nameWithType.vb: ExternalLinearAxis.CalculatePosition(Double, ByRef Boolean)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: RobotComponents.Definitions.ExternalLinearAxis.CalculatePosition(System.Double, ByRef System.Boolean)
  name.vb: CalculatePosition(Double, ByRef Boolean)
- uid: RobotComponents.Definitions.ExternalLinearAxis.CalculateTransformationMatrix(System.Double,System.Boolean@)
  commentId: M:RobotComponents.Definitions.ExternalLinearAxis.CalculateTransformationMatrix(System.Double,System.Boolean@)
  id: CalculateTransformationMatrix(System.Double,System.Boolean@)
  parent: RobotComponents.Definitions.ExternalLinearAxis
  langs:
  - csharp
  - vb
  name: CalculateTransformationMatrix(Double, out Boolean)
  nameWithType: ExternalLinearAxis.CalculateTransformationMatrix(Double, out Boolean)
  fullName: RobotComponents.Definitions.ExternalLinearAxis.CalculateTransformationMatrix(System.Double, out System.Boolean)
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nCalculates the the transformation matrix for a defined external axis value. \nThis method does not take into account the axis limits. \n"
  syntax:
    content: public override Transform CalculateTransformationMatrix(double axisValue, out bool inLimits)
    parameters:
    - id: axisValue
      type: System.Double
      description: 'The external axis value to calculate the position of the attachment plane for in mm. '
    - id: inLimits
      type: System.Boolean
      description: 'A boolean that indicates if the defined exernal axis value is inside its limits. '
    return:
      type: Rhino.Geometry.Transform
      description: 'The transformation matrix '
    content.vb: Public Overrides Function CalculateTransformationMatrix(axisValue As Double, ByRef inLimits As Boolean) As Transform
  overridden: RobotComponents.Definitions.ExternalAxis.CalculateTransformationMatrix(System.Double,System.Boolean@)
  overload: RobotComponents.Definitions.ExternalLinearAxis.CalculateTransformationMatrix*
  nameWithType.vb: ExternalLinearAxis.CalculateTransformationMatrix(Double, ByRef Boolean)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: RobotComponents.Definitions.ExternalLinearAxis.CalculateTransformationMatrix(System.Double, ByRef System.Boolean)
  name.vb: CalculateTransformationMatrix(Double, ByRef Boolean)
- uid: RobotComponents.Definitions.ExternalLinearAxis.CalculatePositionSave(System.Double)
  commentId: M:RobotComponents.Definitions.ExternalLinearAxis.CalculatePositionSave(System.Double)
  id: CalculatePositionSave(System.Double)
  parent: RobotComponents.Definitions.ExternalLinearAxis
  langs:
  - csharp
  - vb
  name: CalculatePositionSave(Double)
  nameWithType: ExternalLinearAxis.CalculatePositionSave(Double)
  fullName: RobotComponents.Definitions.ExternalLinearAxis.CalculatePositionSave(System.Double)
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nCalculates the position of the attachment plane for a defined external axis value.\nThis method takes into account the external axis limits. If the defined external\naxis value is outside its limits the closest external axis limit will be used. \n"
  syntax:
    content: public override Plane CalculatePositionSave(double axisValue)
    parameters:
    - id: axisValue
      type: System.Double
      description: 'The external axis value to calculate the position of the attachment plane for in mm. '
    return:
      type: Rhino.Geometry.Plane
      description: 'The posed attachement plane. '
    content.vb: Public Overrides Function CalculatePositionSave(axisValue As Double) As Plane
  overridden: RobotComponents.Definitions.ExternalAxis.CalculatePositionSave(System.Double)
  overload: RobotComponents.Definitions.ExternalLinearAxis.CalculatePositionSave*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: RobotComponents.Definitions.ExternalLinearAxis.CalculateTransformationMatrixSave(System.Double)
  commentId: M:RobotComponents.Definitions.ExternalLinearAxis.CalculateTransformationMatrixSave(System.Double)
  id: CalculateTransformationMatrixSave(System.Double)
  parent: RobotComponents.Definitions.ExternalLinearAxis
  langs:
  - csharp
  - vb
  name: CalculateTransformationMatrixSave(Double)
  nameWithType: ExternalLinearAxis.CalculateTransformationMatrixSave(Double)
  fullName: RobotComponents.Definitions.ExternalLinearAxis.CalculateTransformationMatrixSave(System.Double)
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nCalculates the the transformation matrix for a defined external axis value. \nThis method takes into account the external axis limits. If the defined external\naxis value is outside its limits the closest external axis limit will be used. \n"
  syntax:
    content: public override Transform CalculateTransformationMatrixSave(double axisValue)
    parameters:
    - id: axisValue
      type: System.Double
      description: 'The external axis value to calculate the transformation matrix for in mm. '
    return:
      type: Rhino.Geometry.Transform
      description: 'Returns the transformation matrix. '
    content.vb: Public Overrides Function CalculateTransformationMatrixSave(axisValue As Double) As Transform
  overridden: RobotComponents.Definitions.ExternalAxis.CalculateTransformationMatrixSave(System.Double)
  overload: RobotComponents.Definitions.ExternalLinearAxis.CalculateTransformationMatrixSave*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: RobotComponents.Definitions.ExternalLinearAxis.PoseMeshes(System.Double)
  commentId: M:RobotComponents.Definitions.ExternalLinearAxis.PoseMeshes(System.Double)
  id: PoseMeshes(System.Double)
  parent: RobotComponents.Definitions.ExternalLinearAxis
  langs:
  - csharp
  - vb
  name: PoseMeshes(Double)
  nameWithType: ExternalLinearAxis.PoseMeshes(Double)
  fullName: RobotComponents.Definitions.ExternalLinearAxis.PoseMeshes(System.Double)
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nCalculates the position of the external axis mesh for a defined external axis value.\n"
  syntax:
    content: public override void PoseMeshes(double axisValue)
    parameters:
    - id: axisValue
      type: System.Double
      description: 'The external axis value to calculate the position of the meshes for in mm. '
    content.vb: Public Overrides Sub PoseMeshes(axisValue As Double)
  overridden: RobotComponents.Definitions.ExternalAxis.PoseMeshes(System.Double)
  overload: RobotComponents.Definitions.ExternalLinearAxis.PoseMeshes*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: RobotComponents.Definitions.ExternalLinearAxis.ReInitialize
  commentId: M:RobotComponents.Definitions.ExternalLinearAxis.ReInitialize
  id: ReInitialize
  parent: RobotComponents.Definitions.ExternalLinearAxis
  langs:
  - csharp
  - vb
  name: ReInitialize()
  nameWithType: ExternalLinearAxis.ReInitialize()
  fullName: RobotComponents.Definitions.ExternalLinearAxis.ReInitialize()
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nA method that can be called to reinitialize all the data that is needed to construct a valid external linear axis. \n"
  syntax:
    content: public override void ReInitialize()
    content.vb: Public Overrides Sub ReInitialize
  overridden: RobotComponents.Definitions.ExternalAxis.ReInitialize
  overload: RobotComponents.Definitions.ExternalLinearAxis.ReInitialize*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: RobotComponents.Definitions.ExternalLinearAxis.Transform(Rhino.Geometry.Transform)
  commentId: M:RobotComponents.Definitions.ExternalLinearAxis.Transform(Rhino.Geometry.Transform)
  id: Transform(Rhino.Geometry.Transform)
  parent: RobotComponents.Definitions.ExternalLinearAxis
  langs:
  - csharp
  - vb
  name: Transform(Transform)
  nameWithType: ExternalLinearAxis.Transform(Transform)
  fullName: RobotComponents.Definitions.ExternalLinearAxis.Transform(Rhino.Geometry.Transform)
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nTransforms the external linear axis spatial properties (planes and meshes. \n"
  syntax:
    content: public override void Transform(Transform xform)
    parameters:
    - id: xform
      type: Rhino.Geometry.Transform
      description: 'Spatial deform. '
    content.vb: Public Overrides Sub Transform(xform As Transform)
  overridden: RobotComponents.Definitions.ExternalAxis.Transform(Rhino.Geometry.Transform)
  overload: RobotComponents.Definitions.ExternalLinearAxis.Transform*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: RobotComponents.Definitions.ExternalLinearAxis.IsValid
  commentId: P:RobotComponents.Definitions.ExternalLinearAxis.IsValid
  id: IsValid
  parent: RobotComponents.Definitions.ExternalLinearAxis
  langs:
  - csharp
  - vb
  name: IsValid
  nameWithType: ExternalLinearAxis.IsValid
  fullName: RobotComponents.Definitions.ExternalLinearAxis.IsValid
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nA boolean that indicates if the External Linear Axis object is valid. \n"
  syntax:
    content: public override bool IsValid { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property IsValid As Boolean
  overridden: RobotComponents.Definitions.ExternalAxis.IsValid
  overload: RobotComponents.Definitions.ExternalLinearAxis.IsValid*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: RobotComponents.Definitions.ExternalLinearAxis.Name
  commentId: P:RobotComponents.Definitions.ExternalLinearAxis.Name
  id: Name
  parent: RobotComponents.Definitions.ExternalLinearAxis
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ExternalLinearAxis.Name
  fullName: RobotComponents.Definitions.ExternalLinearAxis.Name
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nThe name of the external axis\n"
  syntax:
    content: public override string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overrides Property Name As String
  overridden: RobotComponents.Definitions.ExternalAxis.Name
  overload: RobotComponents.Definitions.ExternalLinearAxis.Name*
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: RobotComponents.Definitions.ExternalLinearAxis.AttachmentPlane
  commentId: P:RobotComponents.Definitions.ExternalLinearAxis.AttachmentPlane
  id: AttachmentPlane
  parent: RobotComponents.Definitions.ExternalLinearAxis
  langs:
  - csharp
  - vb
  name: AttachmentPlane
  nameWithType: ExternalLinearAxis.AttachmentPlane
  fullName: RobotComponents.Definitions.ExternalLinearAxis.AttachmentPlane
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nThe attachment plane of the axis. \n"
  syntax:
    content: public override Plane AttachmentPlane { get; set; }
    parameters: []
    return:
      type: Rhino.Geometry.Plane
    content.vb: Public Overrides Property AttachmentPlane As Plane
  overridden: RobotComponents.Definitions.ExternalAxis.AttachmentPlane
  overload: RobotComponents.Definitions.ExternalLinearAxis.AttachmentPlane*
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: RobotComponents.Definitions.ExternalLinearAxis.AxisPlane
  commentId: P:RobotComponents.Definitions.ExternalLinearAxis.AxisPlane
  id: AxisPlane
  parent: RobotComponents.Definitions.ExternalLinearAxis
  langs:
  - csharp
  - vb
  name: AxisPlane
  nameWithType: ExternalLinearAxis.AxisPlane
  fullName: RobotComponents.Definitions.ExternalLinearAxis.AxisPlane
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nThe axis plane. The z-axis of the place defines the positive movement direction of the plane. \n"
  syntax:
    content: public override Plane AxisPlane { get; set; }
    parameters: []
    return:
      type: Rhino.Geometry.Plane
    content.vb: Public Overrides Property AxisPlane As Plane
  overridden: RobotComponents.Definitions.ExternalAxis.AxisPlane
  overload: RobotComponents.Definitions.ExternalLinearAxis.AxisPlane*
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: RobotComponents.Definitions.ExternalLinearAxis.AxisLimits
  commentId: P:RobotComponents.Definitions.ExternalLinearAxis.AxisLimits
  id: AxisLimits
  parent: RobotComponents.Definitions.ExternalLinearAxis
  langs:
  - csharp
  - vb
  name: AxisLimits
  nameWithType: ExternalLinearAxis.AxisLimits
  fullName: RobotComponents.Definitions.ExternalLinearAxis.AxisLimits
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nThe movement limits of the linear axis in meters. \n"
  syntax:
    content: public override Interval AxisLimits { get; set; }
    parameters: []
    return:
      type: Rhino.Geometry.Interval
    content.vb: Public Overrides Property AxisLimits As Interval
  overridden: RobotComponents.Definitions.ExternalAxis.AxisLimits
  overload: RobotComponents.Definitions.ExternalLinearAxis.AxisLimits*
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: RobotComponents.Definitions.ExternalLinearAxis.AxisNumber
  commentId: P:RobotComponents.Definitions.ExternalLinearAxis.AxisNumber
  id: AxisNumber
  parent: RobotComponents.Definitions.ExternalLinearAxis
  langs:
  - csharp
  - vb
  name: AxisNumber
  nameWithType: ExternalLinearAxis.AxisNumber
  fullName: RobotComponents.Definitions.ExternalLinearAxis.AxisNumber
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nThe logic number of the external axis. \n"
  syntax:
    content: public override int AxisNumber { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overrides Property AxisNumber As Integer
  overridden: RobotComponents.Definitions.ExternalAxis.AxisNumber
  overload: RobotComponents.Definitions.ExternalLinearAxis.AxisNumber*
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: RobotComponents.Definitions.ExternalLinearAxis.AxisType
  commentId: P:RobotComponents.Definitions.ExternalLinearAxis.AxisType
  id: AxisType
  parent: RobotComponents.Definitions.ExternalLinearAxis
  langs:
  - csharp
  - vb
  name: AxisType
  nameWithType: ExternalLinearAxis.AxisType
  fullName: RobotComponents.Definitions.ExternalLinearAxis.AxisType
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nThe axis movement type.\n"
  syntax:
    content: public override AxisType AxisType { get; }
    parameters: []
    return:
      type: RobotComponents.Enumerations.AxisType
    content.vb: Public Overrides ReadOnly Property AxisType As AxisType
  overridden: RobotComponents.Definitions.ExternalAxis.AxisType
  overload: RobotComponents.Definitions.ExternalLinearAxis.AxisType*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: RobotComponents.Definitions.ExternalLinearAxis.BaseMesh
  commentId: P:RobotComponents.Definitions.ExternalLinearAxis.BaseMesh
  id: BaseMesh
  parent: RobotComponents.Definitions.ExternalLinearAxis
  langs:
  - csharp
  - vb
  name: BaseMesh
  nameWithType: ExternalLinearAxis.BaseMesh
  fullName: RobotComponents.Definitions.ExternalLinearAxis.BaseMesh
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nThe fixed base mesh of the external axis. \n"
  syntax:
    content: public override Mesh BaseMesh { get; set; }
    parameters: []
    return:
      type: Rhino.Geometry.Mesh
    content.vb: Public Overrides Property BaseMesh As Mesh
  overridden: RobotComponents.Definitions.ExternalAxis.BaseMesh
  overload: RobotComponents.Definitions.ExternalLinearAxis.BaseMesh*
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: RobotComponents.Definitions.ExternalLinearAxis.LinkMesh
  commentId: P:RobotComponents.Definitions.ExternalLinearAxis.LinkMesh
  id: LinkMesh
  parent: RobotComponents.Definitions.ExternalLinearAxis
  langs:
  - csharp
  - vb
  name: LinkMesh
  nameWithType: ExternalLinearAxis.LinkMesh
  fullName: RobotComponents.Definitions.ExternalLinearAxis.LinkMesh
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nThe movable link mesh of the external axis posed for external axis value 0. \n"
  syntax:
    content: public override Mesh LinkMesh { get; set; }
    parameters: []
    return:
      type: Rhino.Geometry.Mesh
    content.vb: Public Overrides Property LinkMesh As Mesh
  overridden: RobotComponents.Definitions.ExternalAxis.LinkMesh
  overload: RobotComponents.Definitions.ExternalLinearAxis.LinkMesh*
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: RobotComponents.Definitions.ExternalLinearAxis.AxisCurve
  commentId: P:RobotComponents.Definitions.ExternalLinearAxis.AxisCurve
  id: AxisCurve
  parent: RobotComponents.Definitions.ExternalLinearAxis
  langs:
  - csharp
  - vb
  name: AxisCurve
  nameWithType: ExternalLinearAxis.AxisCurve
  fullName: RobotComponents.Definitions.ExternalLinearAxis.AxisCurve
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nThe external linear axis curve. Defines the movement direction and the spatial\nlimits of the attachement plane.\n"
  syntax:
    content: public Curve AxisCurve { get; }
    parameters: []
    return:
      type: Rhino.Geometry.Curve
    content.vb: Public ReadOnly Property AxisCurve As Curve
  overload: RobotComponents.Definitions.ExternalLinearAxis.AxisCurve*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: RobotComponents.Definitions.ExternalLinearAxis.PosedMeshes
  commentId: P:RobotComponents.Definitions.ExternalLinearAxis.PosedMeshes
  id: PosedMeshes
  parent: RobotComponents.Definitions.ExternalLinearAxis
  langs:
  - csharp
  - vb
  name: PosedMeshes
  nameWithType: ExternalLinearAxis.PosedMeshes
  fullName: RobotComponents.Definitions.ExternalLinearAxis.PosedMeshes
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Definitions
  summary: "\nThe external axis mesh posed in a certain external axis value.\n"
  syntax:
    content: public override List<Mesh> PosedMeshes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Rhino.Geometry.Mesh}
    content.vb: Public Overrides ReadOnly Property PosedMeshes As List(Of Mesh)
  overridden: RobotComponents.Definitions.ExternalAxis.PosedMeshes
  overload: RobotComponents.Definitions.ExternalLinearAxis.PosedMeshes*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
references:
- uid: RobotComponents.Definitions
  commentId: N:RobotComponents.Definitions
  isExternal: true
  name: RobotComponents.Definitions
  nameWithType: RobotComponents.Definitions
  fullName: RobotComponents.Definitions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: RobotComponents.Definitions.ExternalAxis
  commentId: T:RobotComponents.Definitions.ExternalAxis
  parent: RobotComponents.Definitions
  isExternal: true
  name: ExternalAxis
  nameWithType: ExternalAxis
  fullName: RobotComponents.Definitions.ExternalAxis
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: RobotComponents.Definitions.ExternalLinearAxis.#ctor*
  commentId: Overload:RobotComponents.Definitions.ExternalLinearAxis.#ctor
  isExternal: true
  name: ExternalLinearAxis
  nameWithType: ExternalLinearAxis.ExternalLinearAxis
  fullName: RobotComponents.Definitions.ExternalLinearAxis.ExternalLinearAxis
- uid: Rhino.Geometry.Plane
  isExternal: true
  name: Plane
  nameWithType: Plane
  fullName: Rhino.Geometry.Plane
- uid: Rhino.Geometry.Vector3d
  isExternal: true
  name: Vector3d
  nameWithType: Vector3d
  fullName: Rhino.Geometry.Vector3d
- uid: Rhino.Geometry.Interval
  isExternal: true
  name: Interval
  nameWithType: Interval
  fullName: Rhino.Geometry.Interval
- uid: Rhino.Geometry.Mesh
  isExternal: true
  name: Mesh
  nameWithType: Mesh
  fullName: Rhino.Geometry.Mesh
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.List{Rhino.Geometry.Mesh}
  commentId: T:System.Collections.Generic.List{Rhino.Geometry.Mesh}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Mesh>
  nameWithType: List<Mesh>
  fullName: System.Collections.Generic.List<Rhino.Geometry.Mesh>
  nameWithType.vb: List(Of Mesh)
  fullName.vb: System.Collections.Generic.List(Of Rhino.Geometry.Mesh)
  name.vb: List(Of Mesh)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Rhino.Geometry.Mesh
    name: Mesh
    nameWithType: Mesh
    fullName: Rhino.Geometry.Mesh
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Rhino.Geometry.Mesh
    name: Mesh
    nameWithType: Mesh
    fullName: Rhino.Geometry.Mesh
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: RobotComponents.Definitions.ExternalLinearAxis
  commentId: T:RobotComponents.Definitions.ExternalLinearAxis
  parent: RobotComponents.Definitions
  isExternal: true
  name: ExternalLinearAxis
  nameWithType: ExternalLinearAxis
  fullName: RobotComponents.Definitions.ExternalLinearAxis
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: RobotComponents.Definitions.ExternalLinearAxis.Duplicate*
  commentId: Overload:RobotComponents.Definitions.ExternalLinearAxis.Duplicate
  isExternal: true
  name: Duplicate
  nameWithType: ExternalLinearAxis.Duplicate
  fullName: RobotComponents.Definitions.ExternalLinearAxis.Duplicate
- uid: RobotComponents.Definitions.ExternalLinearAxis.DuplicateWithoutMesh*
  commentId: Overload:RobotComponents.Definitions.ExternalLinearAxis.DuplicateWithoutMesh
  isExternal: true
  name: DuplicateWithoutMesh
  nameWithType: ExternalLinearAxis.DuplicateWithoutMesh
  fullName: RobotComponents.Definitions.ExternalLinearAxis.DuplicateWithoutMesh
- uid: RobotComponents.Definitions.ExternalAxis.DuplicateExternalAxis
  commentId: M:RobotComponents.Definitions.ExternalAxis.DuplicateExternalAxis
  parent: RobotComponents.Definitions.ExternalAxis
  isExternal: true
  name: DuplicateExternalAxis()
  nameWithType: ExternalAxis.DuplicateExternalAxis()
  fullName: RobotComponents.Definitions.ExternalAxis.DuplicateExternalAxis()
  spec.csharp:
  - uid: RobotComponents.Definitions.ExternalAxis.DuplicateExternalAxis
    name: DuplicateExternalAxis
    nameWithType: ExternalAxis.DuplicateExternalAxis
    fullName: RobotComponents.Definitions.ExternalAxis.DuplicateExternalAxis
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RobotComponents.Definitions.ExternalAxis.DuplicateExternalAxis
    name: DuplicateExternalAxis
    nameWithType: ExternalAxis.DuplicateExternalAxis
    fullName: RobotComponents.Definitions.ExternalAxis.DuplicateExternalAxis
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: RobotComponents.Definitions.ExternalLinearAxis.DuplicateExternalAxis*
  commentId: Overload:RobotComponents.Definitions.ExternalLinearAxis.DuplicateExternalAxis
  isExternal: true
  name: DuplicateExternalAxis
  nameWithType: ExternalLinearAxis.DuplicateExternalAxis
  fullName: RobotComponents.Definitions.ExternalLinearAxis.DuplicateExternalAxis
- uid: RobotComponents.Definitions.ExternalAxis.DuplicateExternalAxisWithoutMesh
  commentId: M:RobotComponents.Definitions.ExternalAxis.DuplicateExternalAxisWithoutMesh
  parent: RobotComponents.Definitions.ExternalAxis
  isExternal: true
  name: DuplicateExternalAxisWithoutMesh()
  nameWithType: ExternalAxis.DuplicateExternalAxisWithoutMesh()
  fullName: RobotComponents.Definitions.ExternalAxis.DuplicateExternalAxisWithoutMesh()
  spec.csharp:
  - uid: RobotComponents.Definitions.ExternalAxis.DuplicateExternalAxisWithoutMesh
    name: DuplicateExternalAxisWithoutMesh
    nameWithType: ExternalAxis.DuplicateExternalAxisWithoutMesh
    fullName: RobotComponents.Definitions.ExternalAxis.DuplicateExternalAxisWithoutMesh
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RobotComponents.Definitions.ExternalAxis.DuplicateExternalAxisWithoutMesh
    name: DuplicateExternalAxisWithoutMesh
    nameWithType: ExternalAxis.DuplicateExternalAxisWithoutMesh
    fullName: RobotComponents.Definitions.ExternalAxis.DuplicateExternalAxisWithoutMesh
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: RobotComponents.Definitions.ExternalLinearAxis.DuplicateExternalAxisWithoutMesh*
  commentId: Overload:RobotComponents.Definitions.ExternalLinearAxis.DuplicateExternalAxisWithoutMesh
  isExternal: true
  name: DuplicateExternalAxisWithoutMesh
  nameWithType: ExternalLinearAxis.DuplicateExternalAxisWithoutMesh
  fullName: RobotComponents.Definitions.ExternalLinearAxis.DuplicateExternalAxisWithoutMesh
- uid: RobotComponents.Definitions.ExternalAxis.ToString
  commentId: M:RobotComponents.Definitions.ExternalAxis.ToString
  parent: RobotComponents.Definitions.ExternalAxis
  isExternal: true
  name: ToString()
  nameWithType: ExternalAxis.ToString()
  fullName: RobotComponents.Definitions.ExternalAxis.ToString()
  spec.csharp:
  - uid: RobotComponents.Definitions.ExternalAxis.ToString
    name: ToString
    nameWithType: ExternalAxis.ToString
    fullName: RobotComponents.Definitions.ExternalAxis.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RobotComponents.Definitions.ExternalAxis.ToString
    name: ToString
    nameWithType: ExternalAxis.ToString
    fullName: RobotComponents.Definitions.ExternalAxis.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: RobotComponents.Definitions.ExternalLinearAxis.ToString*
  commentId: Overload:RobotComponents.Definitions.ExternalLinearAxis.ToString
  isExternal: true
  name: ToString
  nameWithType: ExternalLinearAxis.ToString
  fullName: RobotComponents.Definitions.ExternalLinearAxis.ToString
- uid: RobotComponents.Definitions.ExternalLinearAxis.GetAxisCurve*
  commentId: Overload:RobotComponents.Definitions.ExternalLinearAxis.GetAxisCurve
  isExternal: true
  name: GetAxisCurve
  nameWithType: ExternalLinearAxis.GetAxisCurve
  fullName: RobotComponents.Definitions.ExternalLinearAxis.GetAxisCurve
- uid: RobotComponents.Definitions.ExternalAxis.CalculatePosition(System.Double,System.Boolean@)
  commentId: M:RobotComponents.Definitions.ExternalAxis.CalculatePosition(System.Double,System.Boolean@)
  parent: RobotComponents.Definitions.ExternalAxis
  isExternal: true
  name: CalculatePosition(Double, Boolean)
  nameWithType: ExternalAxis.CalculatePosition(Double, Boolean)
  fullName: RobotComponents.Definitions.ExternalAxis.CalculatePosition(System.Double, System.Boolean)
  spec.csharp:
  - uid: RobotComponents.Definitions.ExternalAxis.CalculatePosition(System.Double,System.Boolean@)
    name: CalculatePosition
    nameWithType: ExternalAxis.CalculatePosition
    fullName: RobotComponents.Definitions.ExternalAxis.CalculatePosition
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RobotComponents.Definitions.ExternalAxis.CalculatePosition(System.Double,System.Boolean@)
    name: CalculatePosition
    nameWithType: ExternalAxis.CalculatePosition
    fullName: RobotComponents.Definitions.ExternalAxis.CalculatePosition
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RobotComponents.Definitions.ExternalLinearAxis.CalculatePosition*
  commentId: Overload:RobotComponents.Definitions.ExternalLinearAxis.CalculatePosition
  isExternal: true
  name: CalculatePosition
  nameWithType: ExternalLinearAxis.CalculatePosition
  fullName: RobotComponents.Definitions.ExternalLinearAxis.CalculatePosition
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: RobotComponents.Definitions.ExternalAxis.CalculateTransformationMatrix(System.Double,System.Boolean@)
  commentId: M:RobotComponents.Definitions.ExternalAxis.CalculateTransformationMatrix(System.Double,System.Boolean@)
  parent: RobotComponents.Definitions.ExternalAxis
  isExternal: true
  name: CalculateTransformationMatrix(Double, Boolean)
  nameWithType: ExternalAxis.CalculateTransformationMatrix(Double, Boolean)
  fullName: RobotComponents.Definitions.ExternalAxis.CalculateTransformationMatrix(System.Double, System.Boolean)
  spec.csharp:
  - uid: RobotComponents.Definitions.ExternalAxis.CalculateTransformationMatrix(System.Double,System.Boolean@)
    name: CalculateTransformationMatrix
    nameWithType: ExternalAxis.CalculateTransformationMatrix
    fullName: RobotComponents.Definitions.ExternalAxis.CalculateTransformationMatrix
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RobotComponents.Definitions.ExternalAxis.CalculateTransformationMatrix(System.Double,System.Boolean@)
    name: CalculateTransformationMatrix
    nameWithType: ExternalAxis.CalculateTransformationMatrix
    fullName: RobotComponents.Definitions.ExternalAxis.CalculateTransformationMatrix
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RobotComponents.Definitions.ExternalLinearAxis.CalculateTransformationMatrix*
  commentId: Overload:RobotComponents.Definitions.ExternalLinearAxis.CalculateTransformationMatrix
  isExternal: true
  name: CalculateTransformationMatrix
  nameWithType: ExternalLinearAxis.CalculateTransformationMatrix
  fullName: RobotComponents.Definitions.ExternalLinearAxis.CalculateTransformationMatrix
- uid: Rhino.Geometry.Transform
  isExternal: true
  name: Transform
  nameWithType: Transform
  fullName: Rhino.Geometry.Transform
- uid: RobotComponents.Definitions.ExternalAxis.CalculatePositionSave(System.Double)
  commentId: M:RobotComponents.Definitions.ExternalAxis.CalculatePositionSave(System.Double)
  parent: RobotComponents.Definitions.ExternalAxis
  isExternal: true
  name: CalculatePositionSave(Double)
  nameWithType: ExternalAxis.CalculatePositionSave(Double)
  fullName: RobotComponents.Definitions.ExternalAxis.CalculatePositionSave(System.Double)
  spec.csharp:
  - uid: RobotComponents.Definitions.ExternalAxis.CalculatePositionSave(System.Double)
    name: CalculatePositionSave
    nameWithType: ExternalAxis.CalculatePositionSave
    fullName: RobotComponents.Definitions.ExternalAxis.CalculatePositionSave
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RobotComponents.Definitions.ExternalAxis.CalculatePositionSave(System.Double)
    name: CalculatePositionSave
    nameWithType: ExternalAxis.CalculatePositionSave
    fullName: RobotComponents.Definitions.ExternalAxis.CalculatePositionSave
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RobotComponents.Definitions.ExternalLinearAxis.CalculatePositionSave*
  commentId: Overload:RobotComponents.Definitions.ExternalLinearAxis.CalculatePositionSave
  isExternal: true
  name: CalculatePositionSave
  nameWithType: ExternalLinearAxis.CalculatePositionSave
  fullName: RobotComponents.Definitions.ExternalLinearAxis.CalculatePositionSave
- uid: RobotComponents.Definitions.ExternalAxis.CalculateTransformationMatrixSave(System.Double)
  commentId: M:RobotComponents.Definitions.ExternalAxis.CalculateTransformationMatrixSave(System.Double)
  parent: RobotComponents.Definitions.ExternalAxis
  isExternal: true
  name: CalculateTransformationMatrixSave(Double)
  nameWithType: ExternalAxis.CalculateTransformationMatrixSave(Double)
  fullName: RobotComponents.Definitions.ExternalAxis.CalculateTransformationMatrixSave(System.Double)
  spec.csharp:
  - uid: RobotComponents.Definitions.ExternalAxis.CalculateTransformationMatrixSave(System.Double)
    name: CalculateTransformationMatrixSave
    nameWithType: ExternalAxis.CalculateTransformationMatrixSave
    fullName: RobotComponents.Definitions.ExternalAxis.CalculateTransformationMatrixSave
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RobotComponents.Definitions.ExternalAxis.CalculateTransformationMatrixSave(System.Double)
    name: CalculateTransformationMatrixSave
    nameWithType: ExternalAxis.CalculateTransformationMatrixSave
    fullName: RobotComponents.Definitions.ExternalAxis.CalculateTransformationMatrixSave
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RobotComponents.Definitions.ExternalLinearAxis.CalculateTransformationMatrixSave*
  commentId: Overload:RobotComponents.Definitions.ExternalLinearAxis.CalculateTransformationMatrixSave
  isExternal: true
  name: CalculateTransformationMatrixSave
  nameWithType: ExternalLinearAxis.CalculateTransformationMatrixSave
  fullName: RobotComponents.Definitions.ExternalLinearAxis.CalculateTransformationMatrixSave
- uid: RobotComponents.Definitions.ExternalAxis.PoseMeshes(System.Double)
  commentId: M:RobotComponents.Definitions.ExternalAxis.PoseMeshes(System.Double)
  parent: RobotComponents.Definitions.ExternalAxis
  isExternal: true
  name: PoseMeshes(Double)
  nameWithType: ExternalAxis.PoseMeshes(Double)
  fullName: RobotComponents.Definitions.ExternalAxis.PoseMeshes(System.Double)
  spec.csharp:
  - uid: RobotComponents.Definitions.ExternalAxis.PoseMeshes(System.Double)
    name: PoseMeshes
    nameWithType: ExternalAxis.PoseMeshes
    fullName: RobotComponents.Definitions.ExternalAxis.PoseMeshes
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RobotComponents.Definitions.ExternalAxis.PoseMeshes(System.Double)
    name: PoseMeshes
    nameWithType: ExternalAxis.PoseMeshes
    fullName: RobotComponents.Definitions.ExternalAxis.PoseMeshes
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RobotComponents.Definitions.ExternalLinearAxis.PoseMeshes*
  commentId: Overload:RobotComponents.Definitions.ExternalLinearAxis.PoseMeshes
  isExternal: true
  name: PoseMeshes
  nameWithType: ExternalLinearAxis.PoseMeshes
  fullName: RobotComponents.Definitions.ExternalLinearAxis.PoseMeshes
- uid: RobotComponents.Definitions.ExternalAxis.ReInitialize
  commentId: M:RobotComponents.Definitions.ExternalAxis.ReInitialize
  parent: RobotComponents.Definitions.ExternalAxis
  isExternal: true
  name: ReInitialize()
  nameWithType: ExternalAxis.ReInitialize()
  fullName: RobotComponents.Definitions.ExternalAxis.ReInitialize()
  spec.csharp:
  - uid: RobotComponents.Definitions.ExternalAxis.ReInitialize
    name: ReInitialize
    nameWithType: ExternalAxis.ReInitialize
    fullName: RobotComponents.Definitions.ExternalAxis.ReInitialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RobotComponents.Definitions.ExternalAxis.ReInitialize
    name: ReInitialize
    nameWithType: ExternalAxis.ReInitialize
    fullName: RobotComponents.Definitions.ExternalAxis.ReInitialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: RobotComponents.Definitions.ExternalLinearAxis.ReInitialize*
  commentId: Overload:RobotComponents.Definitions.ExternalLinearAxis.ReInitialize
  isExternal: true
  name: ReInitialize
  nameWithType: ExternalLinearAxis.ReInitialize
  fullName: RobotComponents.Definitions.ExternalLinearAxis.ReInitialize
- uid: RobotComponents.Definitions.ExternalAxis.Transform(Rhino.Geometry.Transform)
  commentId: M:RobotComponents.Definitions.ExternalAxis.Transform(Rhino.Geometry.Transform)
  parent: RobotComponents.Definitions.ExternalAxis
  isExternal: true
  name: Transform(Transform)
  nameWithType: ExternalAxis.Transform(Transform)
  fullName: RobotComponents.Definitions.ExternalAxis.Transform(Rhino.Geometry.Transform)
  spec.csharp:
  - uid: RobotComponents.Definitions.ExternalAxis.Transform(Rhino.Geometry.Transform)
    name: Transform
    nameWithType: ExternalAxis.Transform
    fullName: RobotComponents.Definitions.ExternalAxis.Transform
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Transform
    name: Transform
    nameWithType: Transform
    fullName: Rhino.Geometry.Transform
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RobotComponents.Definitions.ExternalAxis.Transform(Rhino.Geometry.Transform)
    name: Transform
    nameWithType: ExternalAxis.Transform
    fullName: RobotComponents.Definitions.ExternalAxis.Transform
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Transform
    name: Transform
    nameWithType: Transform
    fullName: Rhino.Geometry.Transform
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RobotComponents.Definitions.ExternalLinearAxis.Transform*
  commentId: Overload:RobotComponents.Definitions.ExternalLinearAxis.Transform
  isExternal: true
  name: Transform
  nameWithType: ExternalLinearAxis.Transform
  fullName: RobotComponents.Definitions.ExternalLinearAxis.Transform
- uid: RobotComponents.Definitions.ExternalAxis.IsValid
  commentId: P:RobotComponents.Definitions.ExternalAxis.IsValid
  parent: RobotComponents.Definitions.ExternalAxis
  isExternal: true
  name: IsValid
  nameWithType: ExternalAxis.IsValid
  fullName: RobotComponents.Definitions.ExternalAxis.IsValid
- uid: RobotComponents.Definitions.ExternalLinearAxis.IsValid*
  commentId: Overload:RobotComponents.Definitions.ExternalLinearAxis.IsValid
  isExternal: true
  name: IsValid
  nameWithType: ExternalLinearAxis.IsValid
  fullName: RobotComponents.Definitions.ExternalLinearAxis.IsValid
- uid: RobotComponents.Definitions.ExternalAxis.Name
  commentId: P:RobotComponents.Definitions.ExternalAxis.Name
  parent: RobotComponents.Definitions.ExternalAxis
  isExternal: true
  name: Name
  nameWithType: ExternalAxis.Name
  fullName: RobotComponents.Definitions.ExternalAxis.Name
- uid: RobotComponents.Definitions.ExternalLinearAxis.Name*
  commentId: Overload:RobotComponents.Definitions.ExternalLinearAxis.Name
  isExternal: true
  name: Name
  nameWithType: ExternalLinearAxis.Name
  fullName: RobotComponents.Definitions.ExternalLinearAxis.Name
- uid: RobotComponents.Definitions.ExternalAxis.AttachmentPlane
  commentId: P:RobotComponents.Definitions.ExternalAxis.AttachmentPlane
  parent: RobotComponents.Definitions.ExternalAxis
  isExternal: true
  name: AttachmentPlane
  nameWithType: ExternalAxis.AttachmentPlane
  fullName: RobotComponents.Definitions.ExternalAxis.AttachmentPlane
- uid: RobotComponents.Definitions.ExternalLinearAxis.AttachmentPlane*
  commentId: Overload:RobotComponents.Definitions.ExternalLinearAxis.AttachmentPlane
  isExternal: true
  name: AttachmentPlane
  nameWithType: ExternalLinearAxis.AttachmentPlane
  fullName: RobotComponents.Definitions.ExternalLinearAxis.AttachmentPlane
- uid: RobotComponents.Definitions.ExternalAxis.AxisPlane
  commentId: P:RobotComponents.Definitions.ExternalAxis.AxisPlane
  parent: RobotComponents.Definitions.ExternalAxis
  isExternal: true
  name: AxisPlane
  nameWithType: ExternalAxis.AxisPlane
  fullName: RobotComponents.Definitions.ExternalAxis.AxisPlane
- uid: RobotComponents.Definitions.ExternalLinearAxis.AxisPlane*
  commentId: Overload:RobotComponents.Definitions.ExternalLinearAxis.AxisPlane
  isExternal: true
  name: AxisPlane
  nameWithType: ExternalLinearAxis.AxisPlane
  fullName: RobotComponents.Definitions.ExternalLinearAxis.AxisPlane
- uid: RobotComponents.Definitions.ExternalAxis.AxisLimits
  commentId: P:RobotComponents.Definitions.ExternalAxis.AxisLimits
  parent: RobotComponents.Definitions.ExternalAxis
  isExternal: true
  name: AxisLimits
  nameWithType: ExternalAxis.AxisLimits
  fullName: RobotComponents.Definitions.ExternalAxis.AxisLimits
- uid: RobotComponents.Definitions.ExternalLinearAxis.AxisLimits*
  commentId: Overload:RobotComponents.Definitions.ExternalLinearAxis.AxisLimits
  isExternal: true
  name: AxisLimits
  nameWithType: ExternalLinearAxis.AxisLimits
  fullName: RobotComponents.Definitions.ExternalLinearAxis.AxisLimits
- uid: RobotComponents.Definitions.ExternalAxis.AxisNumber
  commentId: P:RobotComponents.Definitions.ExternalAxis.AxisNumber
  parent: RobotComponents.Definitions.ExternalAxis
  isExternal: true
  name: AxisNumber
  nameWithType: ExternalAxis.AxisNumber
  fullName: RobotComponents.Definitions.ExternalAxis.AxisNumber
- uid: RobotComponents.Definitions.ExternalLinearAxis.AxisNumber*
  commentId: Overload:RobotComponents.Definitions.ExternalLinearAxis.AxisNumber
  isExternal: true
  name: AxisNumber
  nameWithType: ExternalLinearAxis.AxisNumber
  fullName: RobotComponents.Definitions.ExternalLinearAxis.AxisNumber
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: RobotComponents.Definitions.ExternalAxis.AxisType
  commentId: P:RobotComponents.Definitions.ExternalAxis.AxisType
  parent: RobotComponents.Definitions.ExternalAxis
  isExternal: true
  name: AxisType
  nameWithType: ExternalAxis.AxisType
  fullName: RobotComponents.Definitions.ExternalAxis.AxisType
- uid: RobotComponents.Definitions.ExternalLinearAxis.AxisType*
  commentId: Overload:RobotComponents.Definitions.ExternalLinearAxis.AxisType
  isExternal: true
  name: AxisType
  nameWithType: ExternalLinearAxis.AxisType
  fullName: RobotComponents.Definitions.ExternalLinearAxis.AxisType
- uid: RobotComponents.Enumerations.AxisType
  commentId: T:RobotComponents.Enumerations.AxisType
  parent: RobotComponents.Enumerations
  isExternal: true
  name: AxisType
  nameWithType: AxisType
  fullName: RobotComponents.Enumerations.AxisType
- uid: RobotComponents.Enumerations
  commentId: N:RobotComponents.Enumerations
  isExternal: true
  name: RobotComponents.Enumerations
  nameWithType: RobotComponents.Enumerations
  fullName: RobotComponents.Enumerations
- uid: RobotComponents.Definitions.ExternalAxis.BaseMesh
  commentId: P:RobotComponents.Definitions.ExternalAxis.BaseMesh
  parent: RobotComponents.Definitions.ExternalAxis
  isExternal: true
  name: BaseMesh
  nameWithType: ExternalAxis.BaseMesh
  fullName: RobotComponents.Definitions.ExternalAxis.BaseMesh
- uid: RobotComponents.Definitions.ExternalLinearAxis.BaseMesh*
  commentId: Overload:RobotComponents.Definitions.ExternalLinearAxis.BaseMesh
  isExternal: true
  name: BaseMesh
  nameWithType: ExternalLinearAxis.BaseMesh
  fullName: RobotComponents.Definitions.ExternalLinearAxis.BaseMesh
- uid: RobotComponents.Definitions.ExternalAxis.LinkMesh
  commentId: P:RobotComponents.Definitions.ExternalAxis.LinkMesh
  parent: RobotComponents.Definitions.ExternalAxis
  isExternal: true
  name: LinkMesh
  nameWithType: ExternalAxis.LinkMesh
  fullName: RobotComponents.Definitions.ExternalAxis.LinkMesh
- uid: RobotComponents.Definitions.ExternalLinearAxis.LinkMesh*
  commentId: Overload:RobotComponents.Definitions.ExternalLinearAxis.LinkMesh
  isExternal: true
  name: LinkMesh
  nameWithType: ExternalLinearAxis.LinkMesh
  fullName: RobotComponents.Definitions.ExternalLinearAxis.LinkMesh
- uid: RobotComponents.Definitions.ExternalLinearAxis.AxisCurve*
  commentId: Overload:RobotComponents.Definitions.ExternalLinearAxis.AxisCurve
  isExternal: true
  name: AxisCurve
  nameWithType: ExternalLinearAxis.AxisCurve
  fullName: RobotComponents.Definitions.ExternalLinearAxis.AxisCurve
- uid: Rhino.Geometry.Curve
  commentId: '!:Rhino.Geometry.Curve'
  isExternal: true
  name: Curve
  nameWithType: Curve
  fullName: Rhino.Geometry.Curve
- uid: RobotComponents.Definitions.ExternalAxis.PosedMeshes
  commentId: P:RobotComponents.Definitions.ExternalAxis.PosedMeshes
  parent: RobotComponents.Definitions.ExternalAxis
  isExternal: true
  name: PosedMeshes
  nameWithType: ExternalAxis.PosedMeshes
  fullName: RobotComponents.Definitions.ExternalAxis.PosedMeshes
- uid: RobotComponents.Definitions.ExternalLinearAxis.PosedMeshes*
  commentId: Overload:RobotComponents.Definitions.ExternalLinearAxis.PosedMeshes
  isExternal: true
  name: PosedMeshes
  nameWithType: ExternalLinearAxis.PosedMeshes
  fullName: RobotComponents.Definitions.ExternalLinearAxis.PosedMeshes
