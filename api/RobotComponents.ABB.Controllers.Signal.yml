### YamlMime:ManagedReference
items:
- uid: RobotComponents.ABB.Controllers.Signal
  commentId: T:RobotComponents.ABB.Controllers.Signal
  id: Signal
  parent: RobotComponents.ABB.Controllers
  children:
  - RobotComponents.ABB.Controllers.Signal.#ctor
  - RobotComponents.ABB.Controllers.Signal.#ctor(ABB.Robotics.Controllers.IOSystemDomain.Signal,ABB.Robotics.Controllers.Controller)
  - RobotComponents.ABB.Controllers.Signal.#ctor(ABB.Robotics.Controllers.IOSystemDomain.Signal,RobotComponents.ABB.Controllers.Controller)
  - RobotComponents.ABB.Controllers.Signal.AccesLevel
  - RobotComponents.ABB.Controllers.Signal.Dispose
  - RobotComponents.ABB.Controllers.Signal.IsEmpty
  - RobotComponents.ABB.Controllers.Signal.IsValid
  - RobotComponents.ABB.Controllers.Signal.Limits
  - RobotComponents.ABB.Controllers.Signal.MaxValue
  - RobotComponents.ABB.Controllers.Signal.MinValue
  - RobotComponents.ABB.Controllers.Signal.Name
  - RobotComponents.ABB.Controllers.Signal.SetValue(System.Single,System.String@)
  - RobotComponents.ABB.Controllers.Signal.SignalABB
  - RobotComponents.ABB.Controllers.Signal.ToString
  - RobotComponents.ABB.Controllers.Signal.Value
  langs:
  - csharp
  - vb
  name: Signal
  nameWithType: Signal
  fullName: RobotComponents.ABB.Controllers.Signal
  type: Class
  assemblies:
  - RobotComponents.ABB.Controllers
  namespace: RobotComponents.ABB.Controllers
  summary: Represents the Signal class.
  remarks: This class is a wrapper around the ABB Signal class.
  example: []
  syntax:
    content: public class Signal
    content.vb: Public Class Signal
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: RobotComponents.ABB.Controllers.Signal.#ctor
  commentId: M:RobotComponents.ABB.Controllers.Signal.#ctor
  id: '#ctor'
  parent: RobotComponents.ABB.Controllers.Signal
  langs:
  - csharp
  - vb
  name: Signal()
  nameWithType: Signal.Signal()
  fullName: RobotComponents.ABB.Controllers.Signal.Signal()
  type: Constructor
  assemblies:
  - RobotComponents.ABB.Controllers
  namespace: RobotComponents.ABB.Controllers
  summary: Empty constructor.
  example: []
  syntax:
    content: public Signal()
    content.vb: Public Sub New()
  overload: RobotComponents.ABB.Controllers.Signal.#ctor*
  nameWithType.vb: Signal.New()
  fullName.vb: RobotComponents.ABB.Controllers.Signal.New()
  name.vb: New()
- uid: RobotComponents.ABB.Controllers.Signal.#ctor(ABB.Robotics.Controllers.IOSystemDomain.Signal,ABB.Robotics.Controllers.Controller)
  commentId: M:RobotComponents.ABB.Controllers.Signal.#ctor(ABB.Robotics.Controllers.IOSystemDomain.Signal,ABB.Robotics.Controllers.Controller)
  id: '#ctor(ABB.Robotics.Controllers.IOSystemDomain.Signal,ABB.Robotics.Controllers.Controller)'
  parent: RobotComponents.ABB.Controllers.Signal
  langs:
  - csharp
  - vb
  name: Signal(Signal, Controller)
  nameWithType: Signal.Signal(Signal, Controller)
  fullName: RobotComponents.ABB.Controllers.Signal.Signal(ABB.Robotics.Controllers.IOSystemDomain.Signal, ABB.Robotics.Controllers.Controller)
  type: Constructor
  assemblies:
  - RobotComponents.ABB.Controllers
  namespace: RobotComponents.ABB.Controllers
  summary: Construct a Signal instance from an ABB Signal instance.
  example: []
  syntax:
    content: public Signal(Signal signal, Controller controller)
    parameters:
    - id: signal
      type: ABB.Robotics.Controllers.IOSystemDomain.Signal
      description: The ABB Signal instance.
    - id: controller
      type: ABB.Robotics.Controllers.Controller
      description: The ABB Controller instance.
    content.vb: Public Sub New(signal As Signal, controller As Controller)
  overload: RobotComponents.ABB.Controllers.Signal.#ctor*
  nameWithType.vb: Signal.New(Signal, Controller)
  fullName.vb: RobotComponents.ABB.Controllers.Signal.New(ABB.Robotics.Controllers.IOSystemDomain.Signal, ABB.Robotics.Controllers.Controller)
  name.vb: New(Signal, Controller)
- uid: RobotComponents.ABB.Controllers.Signal.#ctor(ABB.Robotics.Controllers.IOSystemDomain.Signal,RobotComponents.ABB.Controllers.Controller)
  commentId: M:RobotComponents.ABB.Controllers.Signal.#ctor(ABB.Robotics.Controllers.IOSystemDomain.Signal,RobotComponents.ABB.Controllers.Controller)
  id: '#ctor(ABB.Robotics.Controllers.IOSystemDomain.Signal,RobotComponents.ABB.Controllers.Controller)'
  parent: RobotComponents.ABB.Controllers.Signal
  langs:
  - csharp
  - vb
  name: Signal(Signal, Controller)
  nameWithType: Signal.Signal(Signal, Controller)
  fullName: RobotComponents.ABB.Controllers.Signal.Signal(ABB.Robotics.Controllers.IOSystemDomain.Signal, RobotComponents.ABB.Controllers.Controller)
  type: Constructor
  assemblies:
  - RobotComponents.ABB.Controllers
  namespace: RobotComponents.ABB.Controllers
  summary: Construct a Signal instance from an ABB Signal instance.
  example: []
  syntax:
    content: public Signal(Signal signal, Controller controller)
    parameters:
    - id: signal
      type: ABB.Robotics.Controllers.IOSystemDomain.Signal
      description: The ABB Signal instance.
    - id: controller
      type: RobotComponents.ABB.Controllers.Controller
      description: The Robot Components Controller instance.
    content.vb: Public Sub New(signal As Signal, controller As Controller)
  overload: RobotComponents.ABB.Controllers.Signal.#ctor*
  nameWithType.vb: Signal.New(Signal, Controller)
  fullName.vb: RobotComponents.ABB.Controllers.Signal.New(ABB.Robotics.Controllers.IOSystemDomain.Signal, RobotComponents.ABB.Controllers.Controller)
  name.vb: New(Signal, Controller)
- uid: RobotComponents.ABB.Controllers.Signal.ToString
  commentId: M:RobotComponents.ABB.Controllers.Signal.ToString
  id: ToString
  parent: RobotComponents.ABB.Controllers.Signal
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Signal.ToString()
  fullName: RobotComponents.ABB.Controllers.Signal.ToString()
  type: Method
  assemblies:
  - RobotComponents.ABB.Controllers
  namespace: RobotComponents.ABB.Controllers
  summary: Returns a string that represents the current object.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A string that represents the current object.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: RobotComponents.ABB.Controllers.Signal.ToString*
- uid: RobotComponents.ABB.Controllers.Signal.SetValue(System.Single,System.String@)
  commentId: M:RobotComponents.ABB.Controllers.Signal.SetValue(System.Single,System.String@)
  id: SetValue(System.Single,System.String@)
  parent: RobotComponents.ABB.Controllers.Signal
  langs:
  - csharp
  - vb
  name: SetValue(float, out string)
  nameWithType: Signal.SetValue(float, out string)
  fullName: RobotComponents.ABB.Controllers.Signal.SetValue(float, out string)
  type: Method
  assemblies:
  - RobotComponents.ABB.Controllers
  namespace: RobotComponents.ABB.Controllers
  summary: Overwrites the current value of the signal.
  example: []
  syntax:
    content: public bool SetValue(float value, out string msg)
    parameters:
    - id: value
      type: System.Single
      description: The desired signal state.
    - id: msg
      type: System.String
      description: The status message.
    return:
      type: System.Boolean
      description: True on success, false on failure.
    content.vb: Public Function SetValue(value As Single, msg As String) As Boolean
  overload: RobotComponents.ABB.Controllers.Signal.SetValue*
  nameWithType.vb: Signal.SetValue(Single, String)
  fullName.vb: RobotComponents.ABB.Controllers.Signal.SetValue(Single, String)
  name.vb: SetValue(Single, String)
- uid: RobotComponents.ABB.Controllers.Signal.Dispose
  commentId: M:RobotComponents.ABB.Controllers.Signal.Dispose
  id: Dispose
  parent: RobotComponents.ABB.Controllers.Signal
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: Signal.Dispose()
  fullName: RobotComponents.ABB.Controllers.Signal.Dispose()
  type: Method
  assemblies:
  - RobotComponents.ABB.Controllers
  namespace: RobotComponents.ABB.Controllers
  summary: Disposes the current signal object inside this instance.
  example: []
  syntax:
    content: public bool Dispose()
    return:
      type: System.Boolean
      description: True on success, false on failure.
    content.vb: Public Function Dispose() As Boolean
  overload: RobotComponents.ABB.Controllers.Signal.Dispose*
- uid: RobotComponents.ABB.Controllers.Signal.IsValid
  commentId: P:RobotComponents.ABB.Controllers.Signal.IsValid
  id: IsValid
  parent: RobotComponents.ABB.Controllers.Signal
  langs:
  - csharp
  - vb
  name: IsValid
  nameWithType: Signal.IsValid
  fullName: RobotComponents.ABB.Controllers.Signal.IsValid
  type: Property
  assemblies:
  - RobotComponents.ABB.Controllers
  namespace: RobotComponents.ABB.Controllers
  summary: Gets a value indicating whether or not the object is valid.
  example: []
  syntax:
    content: public bool IsValid { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsValid As Boolean
  overload: RobotComponents.ABB.Controllers.Signal.IsValid*
- uid: RobotComponents.ABB.Controllers.Signal.SignalABB
  commentId: P:RobotComponents.ABB.Controllers.Signal.SignalABB
  id: SignalABB
  parent: RobotComponents.ABB.Controllers.Signal
  langs:
  - csharp
  - vb
  name: SignalABB
  nameWithType: Signal.SignalABB
  fullName: RobotComponents.ABB.Controllers.Signal.SignalABB
  type: Property
  assemblies:
  - RobotComponents.ABB.Controllers
  namespace: RobotComponents.ABB.Controllers
  summary: Gets the signal instance.
  example: []
  syntax:
    content: public Signal SignalABB { get; }
    parameters: []
    return:
      type: ABB.Robotics.Controllers.IOSystemDomain.Signal
    content.vb: Public ReadOnly Property SignalABB As Signal
  overload: RobotComponents.ABB.Controllers.Signal.SignalABB*
- uid: RobotComponents.ABB.Controllers.Signal.Name
  commentId: P:RobotComponents.ABB.Controllers.Signal.Name
  id: Name
  parent: RobotComponents.ABB.Controllers.Signal
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Signal.Name
  fullName: RobotComponents.ABB.Controllers.Signal.Name
  type: Property
  assemblies:
  - RobotComponents.ABB.Controllers
  namespace: RobotComponents.ABB.Controllers
  summary: Gets the signal name.
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: RobotComponents.ABB.Controllers.Signal.Name*
- uid: RobotComponents.ABB.Controllers.Signal.Limits
  commentId: P:RobotComponents.ABB.Controllers.Signal.Limits
  id: Limits
  parent: RobotComponents.ABB.Controllers.Signal
  langs:
  - csharp
  - vb
  name: Limits
  nameWithType: Signal.Limits
  fullName: RobotComponents.ABB.Controllers.Signal.Limits
  type: Property
  assemblies:
  - RobotComponents.ABB.Controllers
  namespace: RobotComponents.ABB.Controllers
  summary: Gets the minimum and maximum values of the signal as an interval.
  example: []
  syntax:
    content: public Interval Limits { get; }
    parameters: []
    return:
      type: Rhino.Geometry.Interval
    content.vb: Public ReadOnly Property Limits As Interval
  overload: RobotComponents.ABB.Controllers.Signal.Limits*
- uid: RobotComponents.ABB.Controllers.Signal.Value
  commentId: P:RobotComponents.ABB.Controllers.Signal.Value
  id: Value
  parent: RobotComponents.ABB.Controllers.Signal
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: Signal.Value
  fullName: RobotComponents.ABB.Controllers.Signal.Value
  type: Property
  assemblies:
  - RobotComponents.ABB.Controllers
  namespace: RobotComponents.ABB.Controllers
  summary: Gets the current value of the signal.
  example: []
  syntax:
    content: public float Value { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Value As Single
  overload: RobotComponents.ABB.Controllers.Signal.Value*
- uid: RobotComponents.ABB.Controllers.Signal.MinValue
  commentId: P:RobotComponents.ABB.Controllers.Signal.MinValue
  id: MinValue
  parent: RobotComponents.ABB.Controllers.Signal
  langs:
  - csharp
  - vb
  name: MinValue
  nameWithType: Signal.MinValue
  fullName: RobotComponents.ABB.Controllers.Signal.MinValue
  type: Property
  assemblies:
  - RobotComponents.ABB.Controllers
  namespace: RobotComponents.ABB.Controllers
  summary: Gets the minimum value of the signal.
  example: []
  syntax:
    content: public double MinValue { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property MinValue As Double
  overload: RobotComponents.ABB.Controllers.Signal.MinValue*
- uid: RobotComponents.ABB.Controllers.Signal.MaxValue
  commentId: P:RobotComponents.ABB.Controllers.Signal.MaxValue
  id: MaxValue
  parent: RobotComponents.ABB.Controllers.Signal
  langs:
  - csharp
  - vb
  name: MaxValue
  nameWithType: Signal.MaxValue
  fullName: RobotComponents.ABB.Controllers.Signal.MaxValue
  type: Property
  assemblies:
  - RobotComponents.ABB.Controllers
  namespace: RobotComponents.ABB.Controllers
  summary: Gets the maximum value of the signal.
  example: []
  syntax:
    content: public double MaxValue { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property MaxValue As Double
  overload: RobotComponents.ABB.Controllers.Signal.MaxValue*
- uid: RobotComponents.ABB.Controllers.Signal.IsEmpty
  commentId: P:RobotComponents.ABB.Controllers.Signal.IsEmpty
  id: IsEmpty
  parent: RobotComponents.ABB.Controllers.Signal
  langs:
  - csharp
  - vb
  name: IsEmpty
  nameWithType: Signal.IsEmpty
  fullName: RobotComponents.ABB.Controllers.Signal.IsEmpty
  type: Property
  assemblies:
  - RobotComponents.ABB.Controllers
  namespace: RobotComponents.ABB.Controllers
  summary: >-
    Gets a value indicating whether or not the signal instance is empty.

    <remarks>

    If empty, there is no ABB signal instance defined inside this instance. 

    </remarks>
  example: []
  syntax:
    content: public bool IsEmpty { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsEmpty As Boolean
  overload: RobotComponents.ABB.Controllers.Signal.IsEmpty*
- uid: RobotComponents.ABB.Controllers.Signal.AccesLevel
  commentId: P:RobotComponents.ABB.Controllers.Signal.AccesLevel
  id: AccesLevel
  parent: RobotComponents.ABB.Controllers.Signal
  langs:
  - csharp
  - vb
  name: AccesLevel
  nameWithType: Signal.AccesLevel
  fullName: RobotComponents.ABB.Controllers.Signal.AccesLevel
  type: Property
  assemblies:
  - RobotComponents.ABB.Controllers
  namespace: RobotComponents.ABB.Controllers
  summary: Gets the acces level.
  example: []
  syntax:
    content: public string AccesLevel { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property AccesLevel As String
  overload: RobotComponents.ABB.Controllers.Signal.AccesLevel*
references:
- uid: RobotComponents.ABB.Controllers
  commentId: N:RobotComponents.ABB.Controllers
  isExternal: true
  href: RobotComponents.html
  name: RobotComponents.ABB.Controllers
  nameWithType: RobotComponents.ABB.Controllers
  fullName: RobotComponents.ABB.Controllers
  spec.csharp:
  - uid: RobotComponents
    name: RobotComponents
    isExternal: true
    href: RobotComponents.html
  - name: .
  - uid: RobotComponents.ABB
    name: ABB
    isExternal: true
    href: RobotComponents.ABB.html
  - name: .
  - uid: RobotComponents.ABB.Controllers
    name: Controllers
    isExternal: true
    href: RobotComponents.ABB.Controllers.html
  spec.vb:
  - uid: RobotComponents
    name: RobotComponents
    isExternal: true
    href: RobotComponents.html
  - name: .
  - uid: RobotComponents.ABB
    name: ABB
    isExternal: true
    href: RobotComponents.ABB.html
  - name: .
  - uid: RobotComponents.ABB.Controllers
    name: Controllers
    isExternal: true
    href: RobotComponents.ABB.Controllers.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: RobotComponents.ABB.Controllers.Signal.#ctor*
  commentId: Overload:RobotComponents.ABB.Controllers.Signal.#ctor
  isExternal: true
  href: RobotComponents.ABB.Controllers.Signal.html#RobotComponents.ABB.Controllers.Signal.#ctor
  name: Signal
  nameWithType: Signal.Signal
  fullName: RobotComponents.ABB.Controllers.Signal.Signal
  nameWithType.vb: Signal.New
  fullName.vb: RobotComponents.ABB.Controllers.Signal.New
  name.vb: New
- uid: ABB.Robotics.Controllers.IOSystemDomain.Signal
  isExternal: true
  name: Signal
  nameWithType: Signal
  fullName: ABB.Robotics.Controllers.IOSystemDomain.Signal
- uid: ABB.Robotics.Controllers.Controller
  isExternal: true
  name: Controller
  nameWithType: Controller
  fullName: ABB.Robotics.Controllers.Controller
- uid: RobotComponents.ABB.Controllers.Controller
  commentId: T:RobotComponents.ABB.Controllers.Controller
  parent: RobotComponents.ABB.Controllers
  isExternal: true
  href: RobotComponents.ABB.Controllers.Controller.html
  name: Controller
  nameWithType: Controller
  fullName: RobotComponents.ABB.Controllers.Controller
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: RobotComponents.ABB.Controllers.Signal.ToString*
  commentId: Overload:RobotComponents.ABB.Controllers.Signal.ToString
  isExternal: true
  href: RobotComponents.ABB.Controllers.Signal.html#RobotComponents.ABB.Controllers.Signal.ToString
  name: ToString
  nameWithType: Signal.ToString
  fullName: RobotComponents.ABB.Controllers.Signal.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: RobotComponents.ABB.Controllers.Signal.SetValue*
  commentId: Overload:RobotComponents.ABB.Controllers.Signal.SetValue
  isExternal: true
  href: RobotComponents.ABB.Controllers.Signal.html#RobotComponents.ABB.Controllers.Signal.SetValue(System.Single,System.String@)
  name: SetValue
  nameWithType: Signal.SetValue
  fullName: RobotComponents.ABB.Controllers.Signal.SetValue
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: RobotComponents.ABB.Controllers.Signal.Dispose*
  commentId: Overload:RobotComponents.ABB.Controllers.Signal.Dispose
  isExternal: true
  href: RobotComponents.ABB.Controllers.Signal.html#RobotComponents.ABB.Controllers.Signal.Dispose
  name: Dispose
  nameWithType: Signal.Dispose
  fullName: RobotComponents.ABB.Controllers.Signal.Dispose
- uid: RobotComponents.ABB.Controllers.Signal.IsValid*
  commentId: Overload:RobotComponents.ABB.Controllers.Signal.IsValid
  isExternal: true
  href: RobotComponents.ABB.Controllers.Signal.html#RobotComponents.ABB.Controllers.Signal.IsValid
  name: IsValid
  nameWithType: Signal.IsValid
  fullName: RobotComponents.ABB.Controllers.Signal.IsValid
- uid: RobotComponents.ABB.Controllers.Signal.SignalABB*
  commentId: Overload:RobotComponents.ABB.Controllers.Signal.SignalABB
  isExternal: true
  href: RobotComponents.ABB.Controllers.Signal.html#RobotComponents.ABB.Controllers.Signal.SignalABB
  name: SignalABB
  nameWithType: Signal.SignalABB
  fullName: RobotComponents.ABB.Controllers.Signal.SignalABB
- uid: RobotComponents.ABB.Controllers.Signal.Name*
  commentId: Overload:RobotComponents.ABB.Controllers.Signal.Name
  isExternal: true
  href: RobotComponents.ABB.Controllers.Signal.html#RobotComponents.ABB.Controllers.Signal.Name
  name: Name
  nameWithType: Signal.Name
  fullName: RobotComponents.ABB.Controllers.Signal.Name
- uid: RobotComponents.ABB.Controllers.Signal.Limits*
  commentId: Overload:RobotComponents.ABB.Controllers.Signal.Limits
  isExternal: true
  href: RobotComponents.ABB.Controllers.Signal.html#RobotComponents.ABB.Controllers.Signal.Limits
  name: Limits
  nameWithType: Signal.Limits
  fullName: RobotComponents.ABB.Controllers.Signal.Limits
- uid: Rhino.Geometry.Interval
  isExternal: true
  name: Interval
  nameWithType: Interval
  fullName: Rhino.Geometry.Interval
- uid: RobotComponents.ABB.Controllers.Signal.Value*
  commentId: Overload:RobotComponents.ABB.Controllers.Signal.Value
  isExternal: true
  href: RobotComponents.ABB.Controllers.Signal.html#RobotComponents.ABB.Controllers.Signal.Value
  name: Value
  nameWithType: Signal.Value
  fullName: RobotComponents.ABB.Controllers.Signal.Value
- uid: RobotComponents.ABB.Controllers.Signal.MinValue*
  commentId: Overload:RobotComponents.ABB.Controllers.Signal.MinValue
  isExternal: true
  href: RobotComponents.ABB.Controllers.Signal.html#RobotComponents.ABB.Controllers.Signal.MinValue
  name: MinValue
  nameWithType: Signal.MinValue
  fullName: RobotComponents.ABB.Controllers.Signal.MinValue
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: RobotComponents.ABB.Controllers.Signal.MaxValue*
  commentId: Overload:RobotComponents.ABB.Controllers.Signal.MaxValue
  isExternal: true
  href: RobotComponents.ABB.Controllers.Signal.html#RobotComponents.ABB.Controllers.Signal.MaxValue
  name: MaxValue
  nameWithType: Signal.MaxValue
  fullName: RobotComponents.ABB.Controllers.Signal.MaxValue
- uid: RobotComponents.ABB.Controllers.Signal.IsEmpty*
  commentId: Overload:RobotComponents.ABB.Controllers.Signal.IsEmpty
  isExternal: true
  href: RobotComponents.ABB.Controllers.Signal.html#RobotComponents.ABB.Controllers.Signal.IsEmpty
  name: IsEmpty
  nameWithType: Signal.IsEmpty
  fullName: RobotComponents.ABB.Controllers.Signal.IsEmpty
- uid: RobotComponents.ABB.Controllers.Signal.AccesLevel*
  commentId: Overload:RobotComponents.ABB.Controllers.Signal.AccesLevel
  isExternal: true
  href: RobotComponents.ABB.Controllers.Signal.html#RobotComponents.ABB.Controllers.Signal.AccesLevel
  name: AccesLevel
  nameWithType: Signal.AccesLevel
  fullName: RobotComponents.ABB.Controllers.Signal.AccesLevel
