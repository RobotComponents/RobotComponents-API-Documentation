### YamlMime:ManagedReference
items:
- uid: RobotComponents.Generic.Kinematics.OPWKinematics
  commentId: T:RobotComponents.Generic.Kinematics.OPWKinematics
  id: OPWKinematics
  parent: RobotComponents.Generic.Kinematics
  children:
  - RobotComponents.Generic.Kinematics.OPWKinematics.#ctor
  - RobotComponents.Generic.Kinematics.OPWKinematics.A1
  - RobotComponents.Generic.Kinematics.OPWKinematics.A2
  - RobotComponents.Generic.Kinematics.OPWKinematics.B
  - RobotComponents.Generic.Kinematics.OPWKinematics.C1
  - RobotComponents.Generic.Kinematics.OPWKinematics.C2
  - RobotComponents.Generic.Kinematics.OPWKinematics.C3
  - RobotComponents.Generic.Kinematics.OPWKinematics.C4
  - RobotComponents.Generic.Kinematics.OPWKinematics.Forward(System.Collections.Generic.IList{System.Double})
  - RobotComponents.Generic.Kinematics.OPWKinematics.Forward(System.Collections.Generic.IList{System.Double},Rhino.Geometry.Point3d@)
  - RobotComponents.Generic.Kinematics.OPWKinematics.Inverse(Rhino.Geometry.Plane)
  - RobotComponents.Generic.Kinematics.OPWKinematics.IsElbowSingularity
  - RobotComponents.Generic.Kinematics.OPWKinematics.IsShoulderSingularity
  - RobotComponents.Generic.Kinematics.OPWKinematics.IsValid
  - RobotComponents.Generic.Kinematics.OPWKinematics.IsWristSingularity
  - RobotComponents.Generic.Kinematics.OPWKinematics.Offsets
  - RobotComponents.Generic.Kinematics.OPWKinematics.Signs
  - RobotComponents.Generic.Kinematics.OPWKinematics.Solutions
  - RobotComponents.Generic.Kinematics.OPWKinematics.ToString
  langs:
  - csharp
  - vb
  name: OPWKinematics
  nameWithType: OPWKinematics
  fullName: RobotComponents.Generic.Kinematics.OPWKinematics
  type: Class
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Generic.Kinematics
  summary: Represents the OPW Kinematics class.
  remarks: >-
    Based on the paper 'An Analytical Solution of the Inverse Kinematics Problem of 

    Industrial Serial Manipulators with an Ortho-parallel Basis and a Spherical Wrist' 

    by Mathias Brandst√∂tter, Arthur Angerer, and Michael Hofbaur.


    Solution order:


    Sol.    Wrist center            Wrist center            Axis 5 angle
            relative to axis 1      relative to lower arm

    0       In front of             In front of             Positive

    1       In front of             Behind                  Positive

    2       Behind                  In front of             Positive

    3       Behind                  Behind                  Positive

    4       In front of             In front of             Negative

    5       In front of             Behind                  Negative 

    6       Behind                  In front of             Negative

    7       Behind                  Behind                  Negative
  example: []
  syntax:
    content: public class OPWKinematics
    content.vb: Public Class OPWKinematics
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: RobotComponents.Generic.Kinematics.OPWKinematics.#ctor
  commentId: M:RobotComponents.Generic.Kinematics.OPWKinematics.#ctor
  id: '#ctor'
  parent: RobotComponents.Generic.Kinematics.OPWKinematics
  langs:
  - csharp
  - vb
  name: OPWKinematics()
  nameWithType: OPWKinematics.OPWKinematics()
  fullName: RobotComponents.Generic.Kinematics.OPWKinematics.OPWKinematics()
  type: Constructor
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Generic.Kinematics
  summary: Initializes an empty instance of the OPW Kinematics class
  example: []
  syntax:
    content: public OPWKinematics()
    content.vb: Public Sub New()
  overload: RobotComponents.Generic.Kinematics.OPWKinematics.#ctor*
  nameWithType.vb: OPWKinematics.New()
  fullName.vb: RobotComponents.Generic.Kinematics.OPWKinematics.New()
  name.vb: New()
- uid: RobotComponents.Generic.Kinematics.OPWKinematics.ToString
  commentId: M:RobotComponents.Generic.Kinematics.OPWKinematics.ToString
  id: ToString
  parent: RobotComponents.Generic.Kinematics.OPWKinematics
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: OPWKinematics.ToString()
  fullName: RobotComponents.Generic.Kinematics.OPWKinematics.ToString()
  type: Method
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Generic.Kinematics
  summary: Returns a string that represents the current object.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A string that represents the current object.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: RobotComponents.Generic.Kinematics.OPWKinematics.ToString*
- uid: RobotComponents.Generic.Kinematics.OPWKinematics.Forward(System.Collections.Generic.IList{System.Double})
  commentId: M:RobotComponents.Generic.Kinematics.OPWKinematics.Forward(System.Collections.Generic.IList{System.Double})
  id: Forward(System.Collections.Generic.IList{System.Double})
  parent: RobotComponents.Generic.Kinematics.OPWKinematics
  langs:
  - csharp
  - vb
  name: Forward(IList<double>)
  nameWithType: OPWKinematics.Forward(IList<double>)
  fullName: RobotComponents.Generic.Kinematics.OPWKinematics.Forward(System.Collections.Generic.IList<double>)
  type: Method
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Generic.Kinematics
  summary: Calculates the end plane of joint 6 for a given pose.
  example: []
  syntax:
    content: public Plane Forward(IList<double> pose)
    parameters:
    - id: pose
      type: System.Collections.Generic.IList{System.Double}
      description: The pose as a collection with 6 rotations in radians.
    return:
      type: Rhino.Geometry.Plane
      description: The end plane of the 6th joint.
    content.vb: Public Function Forward(pose As IList(Of Double)) As Plane
  overload: RobotComponents.Generic.Kinematics.OPWKinematics.Forward*
  nameWithType.vb: OPWKinematics.Forward(IList(Of Double))
  fullName.vb: RobotComponents.Generic.Kinematics.OPWKinematics.Forward(System.Collections.Generic.IList(Of Double))
  name.vb: Forward(IList(Of Double))
- uid: RobotComponents.Generic.Kinematics.OPWKinematics.Forward(System.Collections.Generic.IList{System.Double},Rhino.Geometry.Point3d@)
  commentId: M:RobotComponents.Generic.Kinematics.OPWKinematics.Forward(System.Collections.Generic.IList{System.Double},Rhino.Geometry.Point3d@)
  id: Forward(System.Collections.Generic.IList{System.Double},Rhino.Geometry.Point3d@)
  parent: RobotComponents.Generic.Kinematics.OPWKinematics
  langs:
  - csharp
  - vb
  name: Forward(IList<double>, out Point3d)
  nameWithType: OPWKinematics.Forward(IList<double>, out Point3d)
  fullName: RobotComponents.Generic.Kinematics.OPWKinematics.Forward(System.Collections.Generic.IList<double>, out Rhino.Geometry.Point3d)
  type: Method
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Generic.Kinematics
  summary: Calculates the end plane of joint 6 for a given pose.
  example: []
  syntax:
    content: public Plane Forward(IList<double> pose, out Point3d wristPosition)
    parameters:
    - id: pose
      type: System.Collections.Generic.IList{System.Double}
      description: The pose as a collection with 6 rotations in radians.
    - id: wristPosition
      type: Rhino.Geometry.Point3d
      description: The wrist position for the given pose.
    return:
      type: Rhino.Geometry.Plane
      description: The end plane of the 6th joint.
    content.vb: Public Function Forward(pose As IList(Of Double), wristPosition As Point3d) As Plane
  overload: RobotComponents.Generic.Kinematics.OPWKinematics.Forward*
  nameWithType.vb: OPWKinematics.Forward(IList(Of Double), Point3d)
  fullName.vb: RobotComponents.Generic.Kinematics.OPWKinematics.Forward(System.Collections.Generic.IList(Of Double), Rhino.Geometry.Point3d)
  name.vb: Forward(IList(Of Double), Point3d)
- uid: RobotComponents.Generic.Kinematics.OPWKinematics.Inverse(Rhino.Geometry.Plane)
  commentId: M:RobotComponents.Generic.Kinematics.OPWKinematics.Inverse(Rhino.Geometry.Plane)
  id: Inverse(Rhino.Geometry.Plane)
  parent: RobotComponents.Generic.Kinematics.OPWKinematics
  langs:
  - csharp
  - vb
  name: Inverse(Plane)
  nameWithType: OPWKinematics.Inverse(Plane)
  fullName: RobotComponents.Generic.Kinematics.OPWKinematics.Inverse(Rhino.Geometry.Plane)
  type: Method
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Generic.Kinematics
  summary: Calculates the inverse kinematic solutions.
  example: []
  syntax:
    content: public void Inverse(Plane endPlane)
    parameters:
    - id: endPlane
      type: Rhino.Geometry.Plane
      description: The end plane of joint 6.
    content.vb: Public Sub Inverse(endPlane As Plane)
  overload: RobotComponents.Generic.Kinematics.OPWKinematics.Inverse*
- uid: RobotComponents.Generic.Kinematics.OPWKinematics.IsValid
  commentId: P:RobotComponents.Generic.Kinematics.OPWKinematics.IsValid
  id: IsValid
  parent: RobotComponents.Generic.Kinematics.OPWKinematics
  langs:
  - csharp
  - vb
  name: IsValid
  nameWithType: OPWKinematics.IsValid
  fullName: RobotComponents.Generic.Kinematics.OPWKinematics.IsValid
  type: Property
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Generic.Kinematics
  summary: Gets a value indicating whether or not the object is valid.
  example: []
  syntax:
    content: public bool IsValid { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsValid As Boolean
  overload: RobotComponents.Generic.Kinematics.OPWKinematics.IsValid*
- uid: RobotComponents.Generic.Kinematics.OPWKinematics.Solutions
  commentId: P:RobotComponents.Generic.Kinematics.OPWKinematics.Solutions
  id: Solutions
  parent: RobotComponents.Generic.Kinematics.OPWKinematics
  langs:
  - csharp
  - vb
  name: Solutions
  nameWithType: OPWKinematics.Solutions
  fullName: RobotComponents.Generic.Kinematics.OPWKinematics.Solutions
  type: Property
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Generic.Kinematics
  summary: Gets the inverse kinematics solutions in radians.
  example: []
  syntax:
    content: public double[][] Solutions { get; }
    parameters: []
    return:
      type: System.Double[][]
    content.vb: Public ReadOnly Property Solutions As Double()()
  overload: RobotComponents.Generic.Kinematics.OPWKinematics.Solutions*
- uid: RobotComponents.Generic.Kinematics.OPWKinematics.IsShoulderSingularity
  commentId: P:RobotComponents.Generic.Kinematics.OPWKinematics.IsShoulderSingularity
  id: IsShoulderSingularity
  parent: RobotComponents.Generic.Kinematics.OPWKinematics
  langs:
  - csharp
  - vb
  name: IsShoulderSingularity
  nameWithType: OPWKinematics.IsShoulderSingularity
  fullName: RobotComponents.Generic.Kinematics.OPWKinematics.IsShoulderSingularity
  type: Property
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Generic.Kinematics
  summary: Gets a value indicating whether or not the solutions have a shoulder singularity.
  example: []
  syntax:
    content: public bool[] IsShoulderSingularity { get; }
    parameters: []
    return:
      type: System.Boolean[]
    content.vb: Public ReadOnly Property IsShoulderSingularity As Boolean()
  overload: RobotComponents.Generic.Kinematics.OPWKinematics.IsShoulderSingularity*
- uid: RobotComponents.Generic.Kinematics.OPWKinematics.IsElbowSingularity
  commentId: P:RobotComponents.Generic.Kinematics.OPWKinematics.IsElbowSingularity
  id: IsElbowSingularity
  parent: RobotComponents.Generic.Kinematics.OPWKinematics
  langs:
  - csharp
  - vb
  name: IsElbowSingularity
  nameWithType: OPWKinematics.IsElbowSingularity
  fullName: RobotComponents.Generic.Kinematics.OPWKinematics.IsElbowSingularity
  type: Property
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Generic.Kinematics
  summary: Gets a value indicating whether or not the solutions have an elbow singularity.
  example: []
  syntax:
    content: public bool[] IsElbowSingularity { get; }
    parameters: []
    return:
      type: System.Boolean[]
    content.vb: Public ReadOnly Property IsElbowSingularity As Boolean()
  overload: RobotComponents.Generic.Kinematics.OPWKinematics.IsElbowSingularity*
- uid: RobotComponents.Generic.Kinematics.OPWKinematics.IsWristSingularity
  commentId: P:RobotComponents.Generic.Kinematics.OPWKinematics.IsWristSingularity
  id: IsWristSingularity
  parent: RobotComponents.Generic.Kinematics.OPWKinematics
  langs:
  - csharp
  - vb
  name: IsWristSingularity
  nameWithType: OPWKinematics.IsWristSingularity
  fullName: RobotComponents.Generic.Kinematics.OPWKinematics.IsWristSingularity
  type: Property
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Generic.Kinematics
  summary: Gets a value indicating whether or not the solutions have a wrist singularity.
  example: []
  syntax:
    content: public bool[] IsWristSingularity { get; }
    parameters: []
    return:
      type: System.Boolean[]
    content.vb: Public ReadOnly Property IsWristSingularity As Boolean()
  overload: RobotComponents.Generic.Kinematics.OPWKinematics.IsWristSingularity*
- uid: RobotComponents.Generic.Kinematics.OPWKinematics.Offsets
  commentId: P:RobotComponents.Generic.Kinematics.OPWKinematics.Offsets
  id: Offsets
  parent: RobotComponents.Generic.Kinematics.OPWKinematics
  langs:
  - csharp
  - vb
  name: Offsets
  nameWithType: OPWKinematics.Offsets
  fullName: RobotComponents.Generic.Kinematics.OPWKinematics.Offsets
  type: Property
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Generic.Kinematics
  summary: Gets or sets the offset corrections.
  example: []
  syntax:
    content: public IList<double> Offsets { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Double}
    content.vb: Public Property Offsets As IList(Of Double)
  overload: RobotComponents.Generic.Kinematics.OPWKinematics.Offsets*
- uid: RobotComponents.Generic.Kinematics.OPWKinematics.Signs
  commentId: P:RobotComponents.Generic.Kinematics.OPWKinematics.Signs
  id: Signs
  parent: RobotComponents.Generic.Kinematics.OPWKinematics
  langs:
  - csharp
  - vb
  name: Signs
  nameWithType: OPWKinematics.Signs
  fullName: RobotComponents.Generic.Kinematics.OPWKinematics.Signs
  type: Property
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Generic.Kinematics
  summary: Gets or sets the sign corrections.
  remarks: This property also checks the input values and adjusts them to -1 or 1 if needed.
  example: []
  syntax:
    content: public IList<int> Signs { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Int32}
    content.vb: Public Property Signs As IList(Of Integer)
  overload: RobotComponents.Generic.Kinematics.OPWKinematics.Signs*
- uid: RobotComponents.Generic.Kinematics.OPWKinematics.A1
  commentId: P:RobotComponents.Generic.Kinematics.OPWKinematics.A1
  id: A1
  parent: RobotComponents.Generic.Kinematics.OPWKinematics
  langs:
  - csharp
  - vb
  name: A1
  nameWithType: OPWKinematics.A1
  fullName: RobotComponents.Generic.Kinematics.OPWKinematics.A1
  type: Property
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Generic.Kinematics
  summary: Gets or sets the OPW kinematics parameter A1.
  example: []
  syntax:
    content: public double A1 { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property A1 As Double
  overload: RobotComponents.Generic.Kinematics.OPWKinematics.A1*
- uid: RobotComponents.Generic.Kinematics.OPWKinematics.A2
  commentId: P:RobotComponents.Generic.Kinematics.OPWKinematics.A2
  id: A2
  parent: RobotComponents.Generic.Kinematics.OPWKinematics
  langs:
  - csharp
  - vb
  name: A2
  nameWithType: OPWKinematics.A2
  fullName: RobotComponents.Generic.Kinematics.OPWKinematics.A2
  type: Property
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Generic.Kinematics
  summary: Gets or sets the OPW kinematics parameter A2.
  example: []
  syntax:
    content: public double A2 { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property A2 As Double
  overload: RobotComponents.Generic.Kinematics.OPWKinematics.A2*
- uid: RobotComponents.Generic.Kinematics.OPWKinematics.B
  commentId: P:RobotComponents.Generic.Kinematics.OPWKinematics.B
  id: B
  parent: RobotComponents.Generic.Kinematics.OPWKinematics
  langs:
  - csharp
  - vb
  name: B
  nameWithType: OPWKinematics.B
  fullName: RobotComponents.Generic.Kinematics.OPWKinematics.B
  type: Property
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Generic.Kinematics
  summary: Gets or sets the OPW kinematics parameter B.
  example: []
  syntax:
    content: public double B { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property B As Double
  overload: RobotComponents.Generic.Kinematics.OPWKinematics.B*
- uid: RobotComponents.Generic.Kinematics.OPWKinematics.C1
  commentId: P:RobotComponents.Generic.Kinematics.OPWKinematics.C1
  id: C1
  parent: RobotComponents.Generic.Kinematics.OPWKinematics
  langs:
  - csharp
  - vb
  name: C1
  nameWithType: OPWKinematics.C1
  fullName: RobotComponents.Generic.Kinematics.OPWKinematics.C1
  type: Property
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Generic.Kinematics
  summary: Gets or sets the OPW kinematics parameter C1.
  example: []
  syntax:
    content: public double C1 { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property C1 As Double
  overload: RobotComponents.Generic.Kinematics.OPWKinematics.C1*
- uid: RobotComponents.Generic.Kinematics.OPWKinematics.C2
  commentId: P:RobotComponents.Generic.Kinematics.OPWKinematics.C2
  id: C2
  parent: RobotComponents.Generic.Kinematics.OPWKinematics
  langs:
  - csharp
  - vb
  name: C2
  nameWithType: OPWKinematics.C2
  fullName: RobotComponents.Generic.Kinematics.OPWKinematics.C2
  type: Property
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Generic.Kinematics
  summary: Gets or sets the OPW kinematics parameter C2.
  example: []
  syntax:
    content: public double C2 { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property C2 As Double
  overload: RobotComponents.Generic.Kinematics.OPWKinematics.C2*
- uid: RobotComponents.Generic.Kinematics.OPWKinematics.C3
  commentId: P:RobotComponents.Generic.Kinematics.OPWKinematics.C3
  id: C3
  parent: RobotComponents.Generic.Kinematics.OPWKinematics
  langs:
  - csharp
  - vb
  name: C3
  nameWithType: OPWKinematics.C3
  fullName: RobotComponents.Generic.Kinematics.OPWKinematics.C3
  type: Property
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Generic.Kinematics
  summary: Gets or sets the OPW kinematics parameter C3.
  example: []
  syntax:
    content: public double C3 { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property C3 As Double
  overload: RobotComponents.Generic.Kinematics.OPWKinematics.C3*
- uid: RobotComponents.Generic.Kinematics.OPWKinematics.C4
  commentId: P:RobotComponents.Generic.Kinematics.OPWKinematics.C4
  id: C4
  parent: RobotComponents.Generic.Kinematics.OPWKinematics
  langs:
  - csharp
  - vb
  name: C4
  nameWithType: OPWKinematics.C4
  fullName: RobotComponents.Generic.Kinematics.OPWKinematics.C4
  type: Property
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Generic.Kinematics
  summary: Gets or sets the OPW kinematics parameter C4.
  example: []
  syntax:
    content: public double C4 { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property C4 As Double
  overload: RobotComponents.Generic.Kinematics.OPWKinematics.C4*
references:
- uid: RobotComponents.Generic.Kinematics
  commentId: N:RobotComponents.Generic.Kinematics
  isExternal: true
  href: RobotComponents.html
  name: RobotComponents.Generic.Kinematics
  nameWithType: RobotComponents.Generic.Kinematics
  fullName: RobotComponents.Generic.Kinematics
  spec.csharp:
  - uid: RobotComponents
    name: RobotComponents
    isExternal: true
    href: RobotComponents.html
  - name: .
  - uid: RobotComponents.Generic
    name: Generic
    isExternal: true
    href: RobotComponents.Generic.html
  - name: .
  - uid: RobotComponents.Generic.Kinematics
    name: Kinematics
    isExternal: true
    href: RobotComponents.Generic.Kinematics.html
  spec.vb:
  - uid: RobotComponents
    name: RobotComponents
    isExternal: true
    href: RobotComponents.html
  - name: .
  - uid: RobotComponents.Generic
    name: Generic
    isExternal: true
    href: RobotComponents.Generic.html
  - name: .
  - uid: RobotComponents.Generic.Kinematics
    name: Kinematics
    isExternal: true
    href: RobotComponents.Generic.Kinematics.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: RobotComponents.Generic.Kinematics.OPWKinematics.#ctor*
  commentId: Overload:RobotComponents.Generic.Kinematics.OPWKinematics.#ctor
  isExternal: true
  href: RobotComponents.Generic.Kinematics.OPWKinematics.html#RobotComponents_Generic_Kinematics_OPWKinematics__ctor
  name: OPWKinematics
  nameWithType: OPWKinematics.OPWKinematics
  fullName: RobotComponents.Generic.Kinematics.OPWKinematics.OPWKinematics
  nameWithType.vb: OPWKinematics.New
  fullName.vb: RobotComponents.Generic.Kinematics.OPWKinematics.New
  name.vb: New
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: RobotComponents.Generic.Kinematics.OPWKinematics.ToString*
  commentId: Overload:RobotComponents.Generic.Kinematics.OPWKinematics.ToString
  isExternal: true
  href: RobotComponents.Generic.Kinematics.OPWKinematics.html#RobotComponents_Generic_Kinematics_OPWKinematics_ToString
  name: ToString
  nameWithType: OPWKinematics.ToString
  fullName: RobotComponents.Generic.Kinematics.OPWKinematics.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: RobotComponents.Generic.Kinematics.OPWKinematics.Forward*
  commentId: Overload:RobotComponents.Generic.Kinematics.OPWKinematics.Forward
  isExternal: true
  href: RobotComponents.Generic.Kinematics.OPWKinematics.html#RobotComponents_Generic_Kinematics_OPWKinematics_Forward_System_Collections_Generic_IList_System_Double__
  name: Forward
  nameWithType: OPWKinematics.Forward
  fullName: RobotComponents.Generic.Kinematics.OPWKinematics.Forward
- uid: System.Collections.Generic.IList{System.Double}
  commentId: T:System.Collections.Generic.IList{System.Double}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<double>
  nameWithType: IList<double>
  fullName: System.Collections.Generic.IList<double>
  nameWithType.vb: IList(Of Double)
  fullName.vb: System.Collections.Generic.IList(Of Double)
  name.vb: IList(Of Double)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
- uid: Rhino.Geometry.Plane
  isExternal: true
  name: Plane
  nameWithType: Plane
  fullName: Rhino.Geometry.Plane
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Rhino.Geometry.Point3d
  isExternal: true
  name: Point3d
  nameWithType: Point3d
  fullName: Rhino.Geometry.Point3d
- uid: RobotComponents.Generic.Kinematics.OPWKinematics.Inverse*
  commentId: Overload:RobotComponents.Generic.Kinematics.OPWKinematics.Inverse
  isExternal: true
  href: RobotComponents.Generic.Kinematics.OPWKinematics.html#RobotComponents_Generic_Kinematics_OPWKinematics_Inverse_Rhino_Geometry_Plane_
  name: Inverse
  nameWithType: OPWKinematics.Inverse
  fullName: RobotComponents.Generic.Kinematics.OPWKinematics.Inverse
- uid: RobotComponents.Generic.Kinematics.OPWKinematics.IsValid*
  commentId: Overload:RobotComponents.Generic.Kinematics.OPWKinematics.IsValid
  isExternal: true
  href: RobotComponents.Generic.Kinematics.OPWKinematics.html#RobotComponents_Generic_Kinematics_OPWKinematics_IsValid
  name: IsValid
  nameWithType: OPWKinematics.IsValid
  fullName: RobotComponents.Generic.Kinematics.OPWKinematics.IsValid
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: RobotComponents.Generic.Kinematics.OPWKinematics.Solutions*
  commentId: Overload:RobotComponents.Generic.Kinematics.OPWKinematics.Solutions
  isExternal: true
  href: RobotComponents.Generic.Kinematics.OPWKinematics.html#RobotComponents_Generic_Kinematics_OPWKinematics_Solutions
  name: Solutions
  nameWithType: OPWKinematics.Solutions
  fullName: RobotComponents.Generic.Kinematics.OPWKinematics.Solutions
- uid: System.Double[][]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double[][]
  nameWithType: double[][]
  fullName: double[][]
  nameWithType.vb: Double()()
  fullName.vb: Double()()
  name.vb: Double()()
  spec.csharp:
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: '['
  - name: ']'
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: (
  - name: )
  - name: (
  - name: )
- uid: RobotComponents.Generic.Kinematics.OPWKinematics.IsShoulderSingularity*
  commentId: Overload:RobotComponents.Generic.Kinematics.OPWKinematics.IsShoulderSingularity
  isExternal: true
  href: RobotComponents.Generic.Kinematics.OPWKinematics.html#RobotComponents_Generic_Kinematics_OPWKinematics_IsShoulderSingularity
  name: IsShoulderSingularity
  nameWithType: OPWKinematics.IsShoulderSingularity
  fullName: RobotComponents.Generic.Kinematics.OPWKinematics.IsShoulderSingularity
- uid: System.Boolean[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool[]
  nameWithType: bool[]
  fullName: bool[]
  nameWithType.vb: Boolean()
  fullName.vb: Boolean()
  name.vb: Boolean()
  spec.csharp:
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: (
  - name: )
- uid: RobotComponents.Generic.Kinematics.OPWKinematics.IsElbowSingularity*
  commentId: Overload:RobotComponents.Generic.Kinematics.OPWKinematics.IsElbowSingularity
  isExternal: true
  href: RobotComponents.Generic.Kinematics.OPWKinematics.html#RobotComponents_Generic_Kinematics_OPWKinematics_IsElbowSingularity
  name: IsElbowSingularity
  nameWithType: OPWKinematics.IsElbowSingularity
  fullName: RobotComponents.Generic.Kinematics.OPWKinematics.IsElbowSingularity
- uid: RobotComponents.Generic.Kinematics.OPWKinematics.IsWristSingularity*
  commentId: Overload:RobotComponents.Generic.Kinematics.OPWKinematics.IsWristSingularity
  isExternal: true
  href: RobotComponents.Generic.Kinematics.OPWKinematics.html#RobotComponents_Generic_Kinematics_OPWKinematics_IsWristSingularity
  name: IsWristSingularity
  nameWithType: OPWKinematics.IsWristSingularity
  fullName: RobotComponents.Generic.Kinematics.OPWKinematics.IsWristSingularity
- uid: RobotComponents.Generic.Kinematics.OPWKinematics.Offsets*
  commentId: Overload:RobotComponents.Generic.Kinematics.OPWKinematics.Offsets
  isExternal: true
  href: RobotComponents.Generic.Kinematics.OPWKinematics.html#RobotComponents_Generic_Kinematics_OPWKinematics_Offsets
  name: Offsets
  nameWithType: OPWKinematics.Offsets
  fullName: RobotComponents.Generic.Kinematics.OPWKinematics.Offsets
- uid: RobotComponents.Generic.Kinematics.OPWKinematics.Signs*
  commentId: Overload:RobotComponents.Generic.Kinematics.OPWKinematics.Signs
  isExternal: true
  href: RobotComponents.Generic.Kinematics.OPWKinematics.html#RobotComponents_Generic_Kinematics_OPWKinematics_Signs
  name: Signs
  nameWithType: OPWKinematics.Signs
  fullName: RobotComponents.Generic.Kinematics.OPWKinematics.Signs
- uid: System.Collections.Generic.IList{System.Int32}
  commentId: T:System.Collections.Generic.IList{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<int>
  nameWithType: IList<int>
  fullName: System.Collections.Generic.IList<int>
  nameWithType.vb: IList(Of Integer)
  fullName.vb: System.Collections.Generic.IList(Of Integer)
  name.vb: IList(Of Integer)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: RobotComponents.Generic.Kinematics.OPWKinematics.A1*
  commentId: Overload:RobotComponents.Generic.Kinematics.OPWKinematics.A1
  isExternal: true
  href: RobotComponents.Generic.Kinematics.OPWKinematics.html#RobotComponents_Generic_Kinematics_OPWKinematics_A1
  name: A1
  nameWithType: OPWKinematics.A1
  fullName: RobotComponents.Generic.Kinematics.OPWKinematics.A1
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: RobotComponents.Generic.Kinematics.OPWKinematics.A2*
  commentId: Overload:RobotComponents.Generic.Kinematics.OPWKinematics.A2
  isExternal: true
  href: RobotComponents.Generic.Kinematics.OPWKinematics.html#RobotComponents_Generic_Kinematics_OPWKinematics_A2
  name: A2
  nameWithType: OPWKinematics.A2
  fullName: RobotComponents.Generic.Kinematics.OPWKinematics.A2
- uid: RobotComponents.Generic.Kinematics.OPWKinematics.B*
  commentId: Overload:RobotComponents.Generic.Kinematics.OPWKinematics.B
  isExternal: true
  href: RobotComponents.Generic.Kinematics.OPWKinematics.html#RobotComponents_Generic_Kinematics_OPWKinematics_B
  name: B
  nameWithType: OPWKinematics.B
  fullName: RobotComponents.Generic.Kinematics.OPWKinematics.B
- uid: RobotComponents.Generic.Kinematics.OPWKinematics.C1*
  commentId: Overload:RobotComponents.Generic.Kinematics.OPWKinematics.C1
  isExternal: true
  href: RobotComponents.Generic.Kinematics.OPWKinematics.html#RobotComponents_Generic_Kinematics_OPWKinematics_C1
  name: C1
  nameWithType: OPWKinematics.C1
  fullName: RobotComponents.Generic.Kinematics.OPWKinematics.C1
- uid: RobotComponents.Generic.Kinematics.OPWKinematics.C2*
  commentId: Overload:RobotComponents.Generic.Kinematics.OPWKinematics.C2
  isExternal: true
  href: RobotComponents.Generic.Kinematics.OPWKinematics.html#RobotComponents_Generic_Kinematics_OPWKinematics_C2
  name: C2
  nameWithType: OPWKinematics.C2
  fullName: RobotComponents.Generic.Kinematics.OPWKinematics.C2
- uid: RobotComponents.Generic.Kinematics.OPWKinematics.C3*
  commentId: Overload:RobotComponents.Generic.Kinematics.OPWKinematics.C3
  isExternal: true
  href: RobotComponents.Generic.Kinematics.OPWKinematics.html#RobotComponents_Generic_Kinematics_OPWKinematics_C3
  name: C3
  nameWithType: OPWKinematics.C3
  fullName: RobotComponents.Generic.Kinematics.OPWKinematics.C3
- uid: RobotComponents.Generic.Kinematics.OPWKinematics.C4*
  commentId: Overload:RobotComponents.Generic.Kinematics.OPWKinematics.C4
  isExternal: true
  href: RobotComponents.Generic.Kinematics.OPWKinematics.html#RobotComponents_Generic_Kinematics_OPWKinematics_C4
  name: C4
  nameWithType: OPWKinematics.C4
  fullName: RobotComponents.Generic.Kinematics.OPWKinematics.C4
