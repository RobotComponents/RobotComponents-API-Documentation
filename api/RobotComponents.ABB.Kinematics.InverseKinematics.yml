### YamlMime:ManagedReference
items:
- uid: RobotComponents.ABB.Kinematics.InverseKinematics
  commentId: T:RobotComponents.ABB.Kinematics.InverseKinematics
  id: InverseKinematics
  parent: RobotComponents.ABB.Kinematics
  children:
  - RobotComponents.ABB.Kinematics.InverseKinematics.#ctor
  - RobotComponents.ABB.Kinematics.InverseKinematics.#ctor(RobotComponents.ABB.Actions.Instructions.Movement,RobotComponents.ABB.Definitions.Robot)
  - RobotComponents.ABB.Kinematics.InverseKinematics.#ctor(RobotComponents.ABB.Actions.Interfaces.ITarget,RobotComponents.ABB.Definitions.Robot)
  - RobotComponents.ABB.Kinematics.InverseKinematics.#ctor(RobotComponents.ABB.Kinematics.InverseKinematics)
  - RobotComponents.ABB.Kinematics.InverseKinematics.Calculate
  - RobotComponents.ABB.Kinematics.InverseKinematics.CalculateClosestRobotJointPosition(RobotComponents.ABB.Actions.Declarations.RobotJointPosition)
  - RobotComponents.ABB.Kinematics.InverseKinematics.CalculateExternalJointPosition
  - RobotComponents.ABB.Kinematics.InverseKinematics.CalculateRobotJointPosition
  - RobotComponents.ABB.Kinematics.InverseKinematics.Duplicate
  - RobotComponents.ABB.Kinematics.InverseKinematics.ErrorText
  - RobotComponents.ABB.Kinematics.InverseKinematics.ExternalJointPosition
  - RobotComponents.ABB.Kinematics.InverseKinematics.InLimits
  - RobotComponents.ABB.Kinematics.InverseKinematics.IsValid
  - RobotComponents.ABB.Kinematics.InverseKinematics.Movement
  - RobotComponents.ABB.Kinematics.InverseKinematics.ReInitialize
  - RobotComponents.ABB.Kinematics.InverseKinematics.Robot
  - RobotComponents.ABB.Kinematics.InverseKinematics.RobotJointPosition
  - RobotComponents.ABB.Kinematics.InverseKinematics.RobotJointPositions
  - RobotComponents.ABB.Kinematics.InverseKinematics.RobotTool
  - RobotComponents.ABB.Kinematics.InverseKinematics.ToString
  langs:
  - csharp
  - vb
  name: InverseKinematics
  nameWithType: InverseKinematics
  fullName: RobotComponents.ABB.Kinematics.InverseKinematics
  type: Class
  assemblies:
  - RobotComponents.ABB
  namespace: RobotComponents.ABB.Kinematics
  summary: Represent the Inverse Kinematics for a 6-axis spherical Robot and its attached external axes.
  example: []
  syntax:
    content: public class InverseKinematics
    content.vb: Public Class InverseKinematics
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: RobotComponents.ABB.Kinematics.InverseKinematics.#ctor
  commentId: M:RobotComponents.ABB.Kinematics.InverseKinematics.#ctor
  id: '#ctor'
  parent: RobotComponents.ABB.Kinematics.InverseKinematics
  langs:
  - csharp
  - vb
  name: InverseKinematics()
  nameWithType: InverseKinematics.InverseKinematics()
  fullName: RobotComponents.ABB.Kinematics.InverseKinematics.InverseKinematics()
  type: Constructor
  assemblies:
  - RobotComponents.ABB
  namespace: RobotComponents.ABB.Kinematics
  summary: Initializes an empty instance of the Inverse Kinematics class.
  example: []
  syntax:
    content: public InverseKinematics()
    content.vb: Public Sub New()
  overload: RobotComponents.ABB.Kinematics.InverseKinematics.#ctor*
  nameWithType.vb: InverseKinematics.New()
  fullName.vb: RobotComponents.ABB.Kinematics.InverseKinematics.New()
  name.vb: New()
- uid: RobotComponents.ABB.Kinematics.InverseKinematics.#ctor(RobotComponents.ABB.Actions.Instructions.Movement,RobotComponents.ABB.Definitions.Robot)
  commentId: M:RobotComponents.ABB.Kinematics.InverseKinematics.#ctor(RobotComponents.ABB.Actions.Instructions.Movement,RobotComponents.ABB.Definitions.Robot)
  id: '#ctor(RobotComponents.ABB.Actions.Instructions.Movement,RobotComponents.ABB.Definitions.Robot)'
  parent: RobotComponents.ABB.Kinematics.InverseKinematics
  langs:
  - csharp
  - vb
  name: InverseKinematics(Movement, Robot)
  nameWithType: InverseKinematics.InverseKinematics(Movement, Robot)
  fullName: RobotComponents.ABB.Kinematics.InverseKinematics.InverseKinematics(RobotComponents.ABB.Actions.Instructions.Movement, RobotComponents.ABB.Definitions.Robot)
  type: Constructor
  assemblies:
  - RobotComponents.ABB
  namespace: RobotComponents.ABB.Kinematics
  summary: Initializes a new instance of the Inverse Kinematics class from a Movement.
  example: []
  syntax:
    content: public InverseKinematics(Movement movement, Robot robot)
    parameters:
    - id: movement
      type: RobotComponents.ABB.Actions.Instructions.Movement
      description: The Movement.
    - id: robot
      type: RobotComponents.ABB.Definitions.Robot
      description: The Robot.
    content.vb: Public Sub New(movement As Movement, robot As Robot)
  overload: RobotComponents.ABB.Kinematics.InverseKinematics.#ctor*
  nameWithType.vb: InverseKinematics.New(Movement, Robot)
  fullName.vb: RobotComponents.ABB.Kinematics.InverseKinematics.New(RobotComponents.ABB.Actions.Instructions.Movement, RobotComponents.ABB.Definitions.Robot)
  name.vb: New(Movement, Robot)
- uid: RobotComponents.ABB.Kinematics.InverseKinematics.#ctor(RobotComponents.ABB.Actions.Interfaces.ITarget,RobotComponents.ABB.Definitions.Robot)
  commentId: M:RobotComponents.ABB.Kinematics.InverseKinematics.#ctor(RobotComponents.ABB.Actions.Interfaces.ITarget,RobotComponents.ABB.Definitions.Robot)
  id: '#ctor(RobotComponents.ABB.Actions.Interfaces.ITarget,RobotComponents.ABB.Definitions.Robot)'
  parent: RobotComponents.ABB.Kinematics.InverseKinematics
  langs:
  - csharp
  - vb
  name: InverseKinematics(ITarget, Robot)
  nameWithType: InverseKinematics.InverseKinematics(ITarget, Robot)
  fullName: RobotComponents.ABB.Kinematics.InverseKinematics.InverseKinematics(RobotComponents.ABB.Actions.Interfaces.ITarget, RobotComponents.ABB.Definitions.Robot)
  type: Constructor
  assemblies:
  - RobotComponents.ABB
  namespace: RobotComponents.ABB.Kinematics
  summary: >-
    Initializes a new instance of the Inverse Kinematics class from a Target.

    The target will be casted to robot movement with a default work object (wobj0).
  example: []
  syntax:
    content: public InverseKinematics(ITarget target, Robot robot)
    parameters:
    - id: target
      type: RobotComponents.ABB.Actions.Interfaces.ITarget
      description: The Target
    - id: robot
      type: RobotComponents.ABB.Definitions.Robot
      description: The Robot.
    content.vb: Public Sub New(target As ITarget, robot As Robot)
  overload: RobotComponents.ABB.Kinematics.InverseKinematics.#ctor*
  nameWithType.vb: InverseKinematics.New(ITarget, Robot)
  fullName.vb: RobotComponents.ABB.Kinematics.InverseKinematics.New(RobotComponents.ABB.Actions.Interfaces.ITarget, RobotComponents.ABB.Definitions.Robot)
  name.vb: New(ITarget, Robot)
- uid: RobotComponents.ABB.Kinematics.InverseKinematics.#ctor(RobotComponents.ABB.Kinematics.InverseKinematics)
  commentId: M:RobotComponents.ABB.Kinematics.InverseKinematics.#ctor(RobotComponents.ABB.Kinematics.InverseKinematics)
  id: '#ctor(RobotComponents.ABB.Kinematics.InverseKinematics)'
  parent: RobotComponents.ABB.Kinematics.InverseKinematics
  langs:
  - csharp
  - vb
  name: InverseKinematics(InverseKinematics)
  nameWithType: InverseKinematics.InverseKinematics(InverseKinematics)
  fullName: RobotComponents.ABB.Kinematics.InverseKinematics.InverseKinematics(RobotComponents.ABB.Kinematics.InverseKinematics)
  type: Constructor
  assemblies:
  - RobotComponents.ABB
  namespace: RobotComponents.ABB.Kinematics
  summary: Initializes a new instance of the Inverse Kinematics class by duplicating an existing Inverse Kinematics instance.
  example: []
  syntax:
    content: public InverseKinematics(InverseKinematics inverseKinematics)
    parameters:
    - id: inverseKinematics
      type: RobotComponents.ABB.Kinematics.InverseKinematics
      description: The Inverse Kinematics instance to duplicate.
    content.vb: Public Sub New(inverseKinematics As InverseKinematics)
  overload: RobotComponents.ABB.Kinematics.InverseKinematics.#ctor*
  nameWithType.vb: InverseKinematics.New(InverseKinematics)
  fullName.vb: RobotComponents.ABB.Kinematics.InverseKinematics.New(RobotComponents.ABB.Kinematics.InverseKinematics)
  name.vb: New(InverseKinematics)
- uid: RobotComponents.ABB.Kinematics.InverseKinematics.Duplicate
  commentId: M:RobotComponents.ABB.Kinematics.InverseKinematics.Duplicate
  id: Duplicate
  parent: RobotComponents.ABB.Kinematics.InverseKinematics
  langs:
  - csharp
  - vb
  name: Duplicate()
  nameWithType: InverseKinematics.Duplicate()
  fullName: RobotComponents.ABB.Kinematics.InverseKinematics.Duplicate()
  type: Method
  assemblies:
  - RobotComponents.ABB
  namespace: RobotComponents.ABB.Kinematics
  summary: Returns an exact duplicate of this Inverse Kinematics instance.
  example: []
  syntax:
    content: public InverseKinematics Duplicate()
    return:
      type: RobotComponents.ABB.Kinematics.InverseKinematics
      description: A deep copy of the Inverse Kinematics instance.
    content.vb: Public Function Duplicate() As InverseKinematics
  overload: RobotComponents.ABB.Kinematics.InverseKinematics.Duplicate*
- uid: RobotComponents.ABB.Kinematics.InverseKinematics.ToString
  commentId: M:RobotComponents.ABB.Kinematics.InverseKinematics.ToString
  id: ToString
  parent: RobotComponents.ABB.Kinematics.InverseKinematics
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: InverseKinematics.ToString()
  fullName: RobotComponents.ABB.Kinematics.InverseKinematics.ToString()
  type: Method
  assemblies:
  - RobotComponents.ABB
  namespace: RobotComponents.ABB.Kinematics
  summary: Returns a string that represents the current object.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A string that represents the current object.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: RobotComponents.ABB.Kinematics.InverseKinematics.ToString*
- uid: RobotComponents.ABB.Kinematics.InverseKinematics.ReInitialize
  commentId: M:RobotComponents.ABB.Kinematics.InverseKinematics.ReInitialize
  id: ReInitialize
  parent: RobotComponents.ABB.Kinematics.InverseKinematics
  langs:
  - csharp
  - vb
  name: ReInitialize()
  nameWithType: InverseKinematics.ReInitialize()
  fullName: RobotComponents.ABB.Kinematics.InverseKinematics.ReInitialize()
  type: Method
  assemblies:
  - RobotComponents.ABB
  namespace: RobotComponents.ABB.Kinematics
  summary: >-
    Reinitialize all the fields to construct a valid Inverse Kinematics object. 

    This method also resets the solution. Calculate() has to be called to obtain a new solution.
  example: []
  syntax:
    content: public void ReInitialize()
    content.vb: Public Sub ReInitialize()
  overload: RobotComponents.ABB.Kinematics.InverseKinematics.ReInitialize*
- uid: RobotComponents.ABB.Kinematics.InverseKinematics.Calculate
  commentId: M:RobotComponents.ABB.Kinematics.InverseKinematics.Calculate
  id: Calculate
  parent: RobotComponents.ABB.Kinematics.InverseKinematics
  langs:
  - csharp
  - vb
  name: Calculate()
  nameWithType: InverseKinematics.Calculate()
  fullName: RobotComponents.ABB.Kinematics.InverseKinematics.Calculate()
  type: Method
  assemblies:
  - RobotComponents.ABB
  namespace: RobotComponents.ABB.Kinematics
  summary: Calculates the inverse kinematics solution.
  example: []
  syntax:
    content: public void Calculate()
    content.vb: Public Sub Calculate()
  overload: RobotComponents.ABB.Kinematics.InverseKinematics.Calculate*
- uid: RobotComponents.ABB.Kinematics.InverseKinematics.CalculateRobotJointPosition
  commentId: M:RobotComponents.ABB.Kinematics.InverseKinematics.CalculateRobotJointPosition
  id: CalculateRobotJointPosition
  parent: RobotComponents.ABB.Kinematics.InverseKinematics
  langs:
  - csharp
  - vb
  name: CalculateRobotJointPosition()
  nameWithType: InverseKinematics.CalculateRobotJointPosition()
  fullName: RobotComponents.ABB.Kinematics.InverseKinematics.CalculateRobotJointPosition()
  type: Method
  assemblies:
  - RobotComponents.ABB
  namespace: RobotComponents.ABB.Kinematics
  summary: >-
    Calculates the Robot Joint Position of the Inverse Kinematics solution.

    This method does not check the internal axis limits.
  example: []
  syntax:
    content: public void CalculateRobotJointPosition()
    content.vb: Public Sub CalculateRobotJointPosition()
  overload: RobotComponents.ABB.Kinematics.InverseKinematics.CalculateRobotJointPosition*
- uid: RobotComponents.ABB.Kinematics.InverseKinematics.CalculateClosestRobotJointPosition(RobotComponents.ABB.Actions.Declarations.RobotJointPosition)
  commentId: M:RobotComponents.ABB.Kinematics.InverseKinematics.CalculateClosestRobotJointPosition(RobotComponents.ABB.Actions.Declarations.RobotJointPosition)
  id: CalculateClosestRobotJointPosition(RobotComponents.ABB.Actions.Declarations.RobotJointPosition)
  parent: RobotComponents.ABB.Kinematics.InverseKinematics
  langs:
  - csharp
  - vb
  name: CalculateClosestRobotJointPosition(RobotJointPosition)
  nameWithType: InverseKinematics.CalculateClosestRobotJointPosition(RobotJointPosition)
  fullName: RobotComponents.ABB.Kinematics.InverseKinematics.CalculateClosestRobotJointPosition(RobotComponents.ABB.Actions.Declarations.RobotJointPosition)
  type: Method
  assemblies:
  - RobotComponents.ABB
  namespace: RobotComponents.ABB.Kinematics
  summary: >-
    Calculates and returns the closest Robot Joint Position to a given previous Robot Joint Position.

    This methods sets and returns the closest Robot Joint Poistion insides this Inverse Kinematics object. 

    You first have to calculate the Inverse Kinematics solution before you call this method. 

    This method is typically used for using the Auto Axis Config inside the Path Generator.
  example: []
  syntax:
    content: public RobotJointPosition CalculateClosestRobotJointPosition(RobotJointPosition prevJointPosition)
    parameters:
    - id: prevJointPosition
      type: RobotComponents.ABB.Actions.Declarations.RobotJointPosition
      description: The previous Robot Joint Position.
    return:
      type: RobotComponents.ABB.Actions.Declarations.RobotJointPosition
      description: The closest Robot Joint Position.
    content.vb: Public Function CalculateClosestRobotJointPosition(prevJointPosition As RobotJointPosition) As RobotJointPosition
  overload: RobotComponents.ABB.Kinematics.InverseKinematics.CalculateClosestRobotJointPosition*
- uid: RobotComponents.ABB.Kinematics.InverseKinematics.CalculateExternalJointPosition
  commentId: M:RobotComponents.ABB.Kinematics.InverseKinematics.CalculateExternalJointPosition
  id: CalculateExternalJointPosition
  parent: RobotComponents.ABB.Kinematics.InverseKinematics
  langs:
  - csharp
  - vb
  name: CalculateExternalJointPosition()
  nameWithType: InverseKinematics.CalculateExternalJointPosition()
  fullName: RobotComponents.ABB.Kinematics.InverseKinematics.CalculateExternalJointPosition()
  type: Method
  assemblies:
  - RobotComponents.ABB
  namespace: RobotComponents.ABB.Kinematics
  summary: >-
    Calculates the External Joint Position of the Inverse Kinematics solution.

    This method does not check the external axis limits.
  example: []
  syntax:
    content: public void CalculateExternalJointPosition()
    content.vb: Public Sub CalculateExternalJointPosition()
  overload: RobotComponents.ABB.Kinematics.InverseKinematics.CalculateExternalJointPosition*
- uid: RobotComponents.ABB.Kinematics.InverseKinematics.IsValid
  commentId: P:RobotComponents.ABB.Kinematics.InverseKinematics.IsValid
  id: IsValid
  parent: RobotComponents.ABB.Kinematics.InverseKinematics
  langs:
  - csharp
  - vb
  name: IsValid
  nameWithType: InverseKinematics.IsValid
  fullName: RobotComponents.ABB.Kinematics.InverseKinematics.IsValid
  type: Property
  assemblies:
  - RobotComponents.ABB
  namespace: RobotComponents.ABB.Kinematics
  summary: Gets a value indicating whether or not the object is valid.
  example: []
  syntax:
    content: public bool IsValid { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsValid As Boolean
  overload: RobotComponents.ABB.Kinematics.InverseKinematics.IsValid*
- uid: RobotComponents.ABB.Kinematics.InverseKinematics.Robot
  commentId: P:RobotComponents.ABB.Kinematics.InverseKinematics.Robot
  id: Robot
  parent: RobotComponents.ABB.Kinematics.InverseKinematics
  langs:
  - csharp
  - vb
  name: Robot
  nameWithType: InverseKinematics.Robot
  fullName: RobotComponents.ABB.Kinematics.InverseKinematics.Robot
  type: Property
  assemblies:
  - RobotComponents.ABB
  namespace: RobotComponents.ABB.Kinematics
  summary: Gets or sets the Robot.
  example: []
  syntax:
    content: public Robot Robot { get; set; }
    parameters: []
    return:
      type: RobotComponents.ABB.Definitions.Robot
    content.vb: Public Property Robot As Robot
  overload: RobotComponents.ABB.Kinematics.InverseKinematics.Robot*
- uid: RobotComponents.ABB.Kinematics.InverseKinematics.Movement
  commentId: P:RobotComponents.ABB.Kinematics.InverseKinematics.Movement
  id: Movement
  parent: RobotComponents.ABB.Kinematics.InverseKinematics
  langs:
  - csharp
  - vb
  name: Movement
  nameWithType: InverseKinematics.Movement
  fullName: RobotComponents.ABB.Kinematics.InverseKinematics.Movement
  type: Property
  assemblies:
  - RobotComponents.ABB
  namespace: RobotComponents.ABB.Kinematics
  summary: >-
    Gets or sets the Movement.

    The target and work object are obtained from this movement.
  example: []
  syntax:
    content: public Movement Movement { get; set; }
    parameters: []
    return:
      type: RobotComponents.ABB.Actions.Instructions.Movement
    content.vb: Public Property Movement As Movement
  overload: RobotComponents.ABB.Kinematics.InverseKinematics.Movement*
- uid: RobotComponents.ABB.Kinematics.InverseKinematics.RobotTool
  commentId: P:RobotComponents.ABB.Kinematics.InverseKinematics.RobotTool
  id: RobotTool
  parent: RobotComponents.ABB.Kinematics.InverseKinematics
  langs:
  - csharp
  - vb
  name: RobotTool
  nameWithType: InverseKinematics.RobotTool
  fullName: RobotComponents.ABB.Kinematics.InverseKinematics.RobotTool
  type: Property
  assemblies:
  - RobotComponents.ABB
  namespace: RobotComponents.ABB.Kinematics
  summary: >-
    Gets the tool used by the this Inverse Kinematics.

    By default the tool attached to the robot is used. 

    If a tool is set as a property of the movement, this tool will be used.
  example: []
  syntax:
    content: public RobotTool RobotTool { get; }
    parameters: []
    return:
      type: RobotComponents.ABB.Definitions.RobotTool
    content.vb: Public ReadOnly Property RobotTool As RobotTool
  overload: RobotComponents.ABB.Kinematics.InverseKinematics.RobotTool*
- uid: RobotComponents.ABB.Kinematics.InverseKinematics.RobotJointPositions
  commentId: P:RobotComponents.ABB.Kinematics.InverseKinematics.RobotJointPositions
  id: RobotJointPositions
  parent: RobotComponents.ABB.Kinematics.InverseKinematics
  langs:
  - csharp
  - vb
  name: RobotJointPositions
  nameWithType: InverseKinematics.RobotJointPositions
  fullName: RobotComponents.ABB.Kinematics.InverseKinematics.RobotJointPositions
  type: Property
  assemblies:
  - RobotComponents.ABB
  namespace: RobotComponents.ABB.Kinematics
  summary: Gets the eight latest calculated Robot Joint Positions.
  example: []
  syntax:
    content: public List<RobotJointPosition> RobotJointPositions { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{RobotComponents.ABB.Actions.Declarations.RobotJointPosition}
    content.vb: Public ReadOnly Property RobotJointPositions As List(Of RobotJointPosition)
  overload: RobotComponents.ABB.Kinematics.InverseKinematics.RobotJointPositions*
- uid: RobotComponents.ABB.Kinematics.InverseKinematics.RobotJointPosition
  commentId: P:RobotComponents.ABB.Kinematics.InverseKinematics.RobotJointPosition
  id: RobotJointPosition
  parent: RobotComponents.ABB.Kinematics.InverseKinematics
  langs:
  - csharp
  - vb
  name: RobotJointPosition
  nameWithType: InverseKinematics.RobotJointPosition
  fullName: RobotComponents.ABB.Kinematics.InverseKinematics.RobotJointPosition
  type: Property
  assemblies:
  - RobotComponents.ABB
  namespace: RobotComponents.ABB.Kinematics
  summary: Gets the latest calculated Robot Joint Position.
  example: []
  syntax:
    content: public RobotJointPosition RobotJointPosition { get; }
    parameters: []
    return:
      type: RobotComponents.ABB.Actions.Declarations.RobotJointPosition
    content.vb: Public ReadOnly Property RobotJointPosition As RobotJointPosition
  overload: RobotComponents.ABB.Kinematics.InverseKinematics.RobotJointPosition*
- uid: RobotComponents.ABB.Kinematics.InverseKinematics.ExternalJointPosition
  commentId: P:RobotComponents.ABB.Kinematics.InverseKinematics.ExternalJointPosition
  id: ExternalJointPosition
  parent: RobotComponents.ABB.Kinematics.InverseKinematics
  langs:
  - csharp
  - vb
  name: ExternalJointPosition
  nameWithType: InverseKinematics.ExternalJointPosition
  fullName: RobotComponents.ABB.Kinematics.InverseKinematics.ExternalJointPosition
  type: Property
  assemblies:
  - RobotComponents.ABB
  namespace: RobotComponents.ABB.Kinematics
  summary: Gets the latest calculated External Joint Position.
  example: []
  syntax:
    content: public ExternalJointPosition ExternalJointPosition { get; }
    parameters: []
    return:
      type: RobotComponents.ABB.Actions.Declarations.ExternalJointPosition
    content.vb: Public ReadOnly Property ExternalJointPosition As ExternalJointPosition
  overload: RobotComponents.ABB.Kinematics.InverseKinematics.ExternalJointPosition*
- uid: RobotComponents.ABB.Kinematics.InverseKinematics.ErrorText
  commentId: P:RobotComponents.ABB.Kinematics.InverseKinematics.ErrorText
  id: ErrorText
  parent: RobotComponents.ABB.Kinematics.InverseKinematics
  langs:
  - csharp
  - vb
  name: ErrorText
  nameWithType: InverseKinematics.ErrorText
  fullName: RobotComponents.ABB.Kinematics.InverseKinematics.ErrorText
  type: Property
  assemblies:
  - RobotComponents.ABB
  namespace: RobotComponents.ABB.Kinematics
  summary: Gets the collected error messages.
  example: []
  syntax:
    content: public List<string> ErrorText { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public ReadOnly Property ErrorText As List(Of String)
  overload: RobotComponents.ABB.Kinematics.InverseKinematics.ErrorText*
- uid: RobotComponents.ABB.Kinematics.InverseKinematics.InLimits
  commentId: P:RobotComponents.ABB.Kinematics.InverseKinematics.InLimits
  id: InLimits
  parent: RobotComponents.ABB.Kinematics.InverseKinematics
  langs:
  - csharp
  - vb
  name: InLimits
  nameWithType: InverseKinematics.InLimits
  fullName: RobotComponents.ABB.Kinematics.InverseKinematics.InLimits
  type: Property
  assemblies:
  - RobotComponents.ABB
  namespace: RobotComponents.ABB.Kinematics
  summary: Gets a value indicating whether or not the internal and external values are within their limits.
  example: []
  syntax:
    content: public bool InLimits { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property InLimits As Boolean
  overload: RobotComponents.ABB.Kinematics.InverseKinematics.InLimits*
references:
- uid: RobotComponents.ABB.Kinematics
  commentId: N:RobotComponents.ABB.Kinematics
  isExternal: true
  href: RobotComponents.html
  name: RobotComponents.ABB.Kinematics
  nameWithType: RobotComponents.ABB.Kinematics
  fullName: RobotComponents.ABB.Kinematics
  spec.csharp:
  - uid: RobotComponents
    name: RobotComponents
    isExternal: true
    href: RobotComponents.html
  - name: .
  - uid: RobotComponents.ABB
    name: ABB
    isExternal: true
    href: RobotComponents.ABB.html
  - name: .
  - uid: RobotComponents.ABB.Kinematics
    name: Kinematics
    isExternal: true
    href: RobotComponents.ABB.Kinematics.html
  spec.vb:
  - uid: RobotComponents
    name: RobotComponents
    isExternal: true
    href: RobotComponents.html
  - name: .
  - uid: RobotComponents.ABB
    name: ABB
    isExternal: true
    href: RobotComponents.ABB.html
  - name: .
  - uid: RobotComponents.ABB.Kinematics
    name: Kinematics
    isExternal: true
    href: RobotComponents.ABB.Kinematics.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: RobotComponents.ABB.Kinematics.InverseKinematics.#ctor*
  commentId: Overload:RobotComponents.ABB.Kinematics.InverseKinematics.#ctor
  isExternal: true
  href: RobotComponents.ABB.Kinematics.InverseKinematics.html#RobotComponents.ABB.Kinematics.InverseKinematics.#ctor
  name: InverseKinematics
  nameWithType: InverseKinematics.InverseKinematics
  fullName: RobotComponents.ABB.Kinematics.InverseKinematics.InverseKinematics
  nameWithType.vb: InverseKinematics.New
  fullName.vb: RobotComponents.ABB.Kinematics.InverseKinematics.New
  name.vb: New
- uid: RobotComponents.ABB.Actions.Instructions.Movement
  commentId: T:RobotComponents.ABB.Actions.Instructions.Movement
  parent: RobotComponents.ABB.Actions.Instructions
  isExternal: true
  href: RobotComponents.ABB.Actions.Instructions.Movement.html
  name: Movement
  nameWithType: Movement
  fullName: RobotComponents.ABB.Actions.Instructions.Movement
- uid: RobotComponents.ABB.Definitions.Robot
  commentId: T:RobotComponents.ABB.Definitions.Robot
  parent: RobotComponents.ABB.Definitions
  isExternal: true
  href: RobotComponents.ABB.Definitions.Robot.html
  name: Robot
  nameWithType: Robot
  fullName: RobotComponents.ABB.Definitions.Robot
- uid: RobotComponents.ABB.Actions.Instructions
  commentId: N:RobotComponents.ABB.Actions.Instructions
  isExternal: true
  href: RobotComponents.html
  name: RobotComponents.ABB.Actions.Instructions
  nameWithType: RobotComponents.ABB.Actions.Instructions
  fullName: RobotComponents.ABB.Actions.Instructions
  spec.csharp:
  - uid: RobotComponents
    name: RobotComponents
    isExternal: true
    href: RobotComponents.html
  - name: .
  - uid: RobotComponents.ABB
    name: ABB
    isExternal: true
    href: RobotComponents.ABB.html
  - name: .
  - uid: RobotComponents.ABB.Actions
    name: Actions
    isExternal: true
    href: RobotComponents.ABB.Actions.html
  - name: .
  - uid: RobotComponents.ABB.Actions.Instructions
    name: Instructions
    isExternal: true
    href: RobotComponents.ABB.Actions.Instructions.html
  spec.vb:
  - uid: RobotComponents
    name: RobotComponents
    isExternal: true
    href: RobotComponents.html
  - name: .
  - uid: RobotComponents.ABB
    name: ABB
    isExternal: true
    href: RobotComponents.ABB.html
  - name: .
  - uid: RobotComponents.ABB.Actions
    name: Actions
    isExternal: true
    href: RobotComponents.ABB.Actions.html
  - name: .
  - uid: RobotComponents.ABB.Actions.Instructions
    name: Instructions
    isExternal: true
    href: RobotComponents.ABB.Actions.Instructions.html
- uid: RobotComponents.ABB.Definitions
  commentId: N:RobotComponents.ABB.Definitions
  isExternal: true
  href: RobotComponents.html
  name: RobotComponents.ABB.Definitions
  nameWithType: RobotComponents.ABB.Definitions
  fullName: RobotComponents.ABB.Definitions
  spec.csharp:
  - uid: RobotComponents
    name: RobotComponents
    isExternal: true
    href: RobotComponents.html
  - name: .
  - uid: RobotComponents.ABB
    name: ABB
    isExternal: true
    href: RobotComponents.ABB.html
  - name: .
  - uid: RobotComponents.ABB.Definitions
    name: Definitions
    isExternal: true
    href: RobotComponents.ABB.Definitions.html
  spec.vb:
  - uid: RobotComponents
    name: RobotComponents
    isExternal: true
    href: RobotComponents.html
  - name: .
  - uid: RobotComponents.ABB
    name: ABB
    isExternal: true
    href: RobotComponents.ABB.html
  - name: .
  - uid: RobotComponents.ABB.Definitions
    name: Definitions
    isExternal: true
    href: RobotComponents.ABB.Definitions.html
- uid: RobotComponents.ABB.Actions.Interfaces.ITarget
  commentId: T:RobotComponents.ABB.Actions.Interfaces.ITarget
  parent: RobotComponents.ABB.Actions.Interfaces
  isExternal: true
  href: RobotComponents.ABB.Actions.Interfaces.ITarget.html
  name: ITarget
  nameWithType: ITarget
  fullName: RobotComponents.ABB.Actions.Interfaces.ITarget
- uid: RobotComponents.ABB.Actions.Interfaces
  commentId: N:RobotComponents.ABB.Actions.Interfaces
  isExternal: true
  href: RobotComponents.html
  name: RobotComponents.ABB.Actions.Interfaces
  nameWithType: RobotComponents.ABB.Actions.Interfaces
  fullName: RobotComponents.ABB.Actions.Interfaces
  spec.csharp:
  - uid: RobotComponents
    name: RobotComponents
    isExternal: true
    href: RobotComponents.html
  - name: .
  - uid: RobotComponents.ABB
    name: ABB
    isExternal: true
    href: RobotComponents.ABB.html
  - name: .
  - uid: RobotComponents.ABB.Actions
    name: Actions
    isExternal: true
    href: RobotComponents.ABB.Actions.html
  - name: .
  - uid: RobotComponents.ABB.Actions.Interfaces
    name: Interfaces
    isExternal: true
    href: RobotComponents.ABB.Actions.Interfaces.html
  spec.vb:
  - uid: RobotComponents
    name: RobotComponents
    isExternal: true
    href: RobotComponents.html
  - name: .
  - uid: RobotComponents.ABB
    name: ABB
    isExternal: true
    href: RobotComponents.ABB.html
  - name: .
  - uid: RobotComponents.ABB.Actions
    name: Actions
    isExternal: true
    href: RobotComponents.ABB.Actions.html
  - name: .
  - uid: RobotComponents.ABB.Actions.Interfaces
    name: Interfaces
    isExternal: true
    href: RobotComponents.ABB.Actions.Interfaces.html
- uid: RobotComponents.ABB.Kinematics.InverseKinematics
  commentId: T:RobotComponents.ABB.Kinematics.InverseKinematics
  parent: RobotComponents.ABB.Kinematics
  isExternal: true
  href: RobotComponents.ABB.Kinematics.InverseKinematics.html
  name: InverseKinematics
  nameWithType: InverseKinematics
  fullName: RobotComponents.ABB.Kinematics.InverseKinematics
- uid: RobotComponents.ABB.Kinematics.InverseKinematics.Duplicate*
  commentId: Overload:RobotComponents.ABB.Kinematics.InverseKinematics.Duplicate
  isExternal: true
  href: RobotComponents.ABB.Kinematics.InverseKinematics.html#RobotComponents.ABB.Kinematics.InverseKinematics.Duplicate
  name: Duplicate
  nameWithType: InverseKinematics.Duplicate
  fullName: RobotComponents.ABB.Kinematics.InverseKinematics.Duplicate
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: RobotComponents.ABB.Kinematics.InverseKinematics.ToString*
  commentId: Overload:RobotComponents.ABB.Kinematics.InverseKinematics.ToString
  isExternal: true
  href: RobotComponents.ABB.Kinematics.InverseKinematics.html#RobotComponents.ABB.Kinematics.InverseKinematics.ToString
  name: ToString
  nameWithType: InverseKinematics.ToString
  fullName: RobotComponents.ABB.Kinematics.InverseKinematics.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: RobotComponents.ABB.Kinematics.InverseKinematics.ReInitialize*
  commentId: Overload:RobotComponents.ABB.Kinematics.InverseKinematics.ReInitialize
  isExternal: true
  href: RobotComponents.ABB.Kinematics.InverseKinematics.html#RobotComponents.ABB.Kinematics.InverseKinematics.ReInitialize
  name: ReInitialize
  nameWithType: InverseKinematics.ReInitialize
  fullName: RobotComponents.ABB.Kinematics.InverseKinematics.ReInitialize
- uid: RobotComponents.ABB.Kinematics.InverseKinematics.Calculate*
  commentId: Overload:RobotComponents.ABB.Kinematics.InverseKinematics.Calculate
  isExternal: true
  href: RobotComponents.ABB.Kinematics.InverseKinematics.html#RobotComponents.ABB.Kinematics.InverseKinematics.Calculate
  name: Calculate
  nameWithType: InverseKinematics.Calculate
  fullName: RobotComponents.ABB.Kinematics.InverseKinematics.Calculate
- uid: RobotComponents.ABB.Kinematics.InverseKinematics.CalculateRobotJointPosition*
  commentId: Overload:RobotComponents.ABB.Kinematics.InverseKinematics.CalculateRobotJointPosition
  isExternal: true
  href: RobotComponents.ABB.Kinematics.InverseKinematics.html#RobotComponents.ABB.Kinematics.InverseKinematics.CalculateRobotJointPosition
  name: CalculateRobotJointPosition
  nameWithType: InverseKinematics.CalculateRobotJointPosition
  fullName: RobotComponents.ABB.Kinematics.InverseKinematics.CalculateRobotJointPosition
- uid: RobotComponents.ABB.Kinematics.InverseKinematics.CalculateClosestRobotJointPosition*
  commentId: Overload:RobotComponents.ABB.Kinematics.InverseKinematics.CalculateClosestRobotJointPosition
  isExternal: true
  href: RobotComponents.ABB.Kinematics.InverseKinematics.html#RobotComponents.ABB.Kinematics.InverseKinematics.CalculateClosestRobotJointPosition(RobotComponents.ABB.Actions.Declarations.RobotJointPosition)
  name: CalculateClosestRobotJointPosition
  nameWithType: InverseKinematics.CalculateClosestRobotJointPosition
  fullName: RobotComponents.ABB.Kinematics.InverseKinematics.CalculateClosestRobotJointPosition
- uid: RobotComponents.ABB.Actions.Declarations.RobotJointPosition
  commentId: T:RobotComponents.ABB.Actions.Declarations.RobotJointPosition
  parent: RobotComponents.ABB.Actions.Declarations
  isExternal: true
  href: RobotComponents.ABB.Actions.Declarations.RobotJointPosition.html
  name: RobotJointPosition
  nameWithType: RobotJointPosition
  fullName: RobotComponents.ABB.Actions.Declarations.RobotJointPosition
- uid: RobotComponents.ABB.Actions.Declarations
  commentId: N:RobotComponents.ABB.Actions.Declarations
  isExternal: true
  href: RobotComponents.html
  name: RobotComponents.ABB.Actions.Declarations
  nameWithType: RobotComponents.ABB.Actions.Declarations
  fullName: RobotComponents.ABB.Actions.Declarations
  spec.csharp:
  - uid: RobotComponents
    name: RobotComponents
    isExternal: true
    href: RobotComponents.html
  - name: .
  - uid: RobotComponents.ABB
    name: ABB
    isExternal: true
    href: RobotComponents.ABB.html
  - name: .
  - uid: RobotComponents.ABB.Actions
    name: Actions
    isExternal: true
    href: RobotComponents.ABB.Actions.html
  - name: .
  - uid: RobotComponents.ABB.Actions.Declarations
    name: Declarations
    isExternal: true
    href: RobotComponents.ABB.Actions.Declarations.html
  spec.vb:
  - uid: RobotComponents
    name: RobotComponents
    isExternal: true
    href: RobotComponents.html
  - name: .
  - uid: RobotComponents.ABB
    name: ABB
    isExternal: true
    href: RobotComponents.ABB.html
  - name: .
  - uid: RobotComponents.ABB.Actions
    name: Actions
    isExternal: true
    href: RobotComponents.ABB.Actions.html
  - name: .
  - uid: RobotComponents.ABB.Actions.Declarations
    name: Declarations
    isExternal: true
    href: RobotComponents.ABB.Actions.Declarations.html
- uid: RobotComponents.ABB.Kinematics.InverseKinematics.CalculateExternalJointPosition*
  commentId: Overload:RobotComponents.ABB.Kinematics.InverseKinematics.CalculateExternalJointPosition
  isExternal: true
  href: RobotComponents.ABB.Kinematics.InverseKinematics.html#RobotComponents.ABB.Kinematics.InverseKinematics.CalculateExternalJointPosition
  name: CalculateExternalJointPosition
  nameWithType: InverseKinematics.CalculateExternalJointPosition
  fullName: RobotComponents.ABB.Kinematics.InverseKinematics.CalculateExternalJointPosition
- uid: RobotComponents.ABB.Kinematics.InverseKinematics.IsValid*
  commentId: Overload:RobotComponents.ABB.Kinematics.InverseKinematics.IsValid
  isExternal: true
  href: RobotComponents.ABB.Kinematics.InverseKinematics.html#RobotComponents.ABB.Kinematics.InverseKinematics.IsValid
  name: IsValid
  nameWithType: InverseKinematics.IsValid
  fullName: RobotComponents.ABB.Kinematics.InverseKinematics.IsValid
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: RobotComponents.ABB.Kinematics.InverseKinematics.Robot*
  commentId: Overload:RobotComponents.ABB.Kinematics.InverseKinematics.Robot
  isExternal: true
  href: RobotComponents.ABB.Kinematics.InverseKinematics.html#RobotComponents.ABB.Kinematics.InverseKinematics.Robot
  name: Robot
  nameWithType: InverseKinematics.Robot
  fullName: RobotComponents.ABB.Kinematics.InverseKinematics.Robot
- uid: RobotComponents.ABB.Kinematics.InverseKinematics.Movement*
  commentId: Overload:RobotComponents.ABB.Kinematics.InverseKinematics.Movement
  isExternal: true
  href: RobotComponents.ABB.Kinematics.InverseKinematics.html#RobotComponents.ABB.Kinematics.InverseKinematics.Movement
  name: Movement
  nameWithType: InverseKinematics.Movement
  fullName: RobotComponents.ABB.Kinematics.InverseKinematics.Movement
- uid: RobotComponents.ABB.Kinematics.InverseKinematics.RobotTool*
  commentId: Overload:RobotComponents.ABB.Kinematics.InverseKinematics.RobotTool
  isExternal: true
  href: RobotComponents.ABB.Kinematics.InverseKinematics.html#RobotComponents.ABB.Kinematics.InverseKinematics.RobotTool
  name: RobotTool
  nameWithType: InverseKinematics.RobotTool
  fullName: RobotComponents.ABB.Kinematics.InverseKinematics.RobotTool
- uid: RobotComponents.ABB.Definitions.RobotTool
  commentId: T:RobotComponents.ABB.Definitions.RobotTool
  parent: RobotComponents.ABB.Definitions
  isExternal: true
  href: RobotComponents.ABB.Definitions.RobotTool.html
  name: RobotTool
  nameWithType: RobotTool
  fullName: RobotComponents.ABB.Definitions.RobotTool
- uid: RobotComponents.ABB.Kinematics.InverseKinematics.RobotJointPositions*
  commentId: Overload:RobotComponents.ABB.Kinematics.InverseKinematics.RobotJointPositions
  isExternal: true
  href: RobotComponents.ABB.Kinematics.InverseKinematics.html#RobotComponents.ABB.Kinematics.InverseKinematics.RobotJointPositions
  name: RobotJointPositions
  nameWithType: InverseKinematics.RobotJointPositions
  fullName: RobotComponents.ABB.Kinematics.InverseKinematics.RobotJointPositions
- uid: System.Collections.Generic.List{RobotComponents.ABB.Actions.Declarations.RobotJointPosition}
  commentId: T:System.Collections.Generic.List{RobotComponents.ABB.Actions.Declarations.RobotJointPosition}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<RobotJointPosition>
  nameWithType: List<RobotJointPosition>
  fullName: System.Collections.Generic.List<RobotComponents.ABB.Actions.Declarations.RobotJointPosition>
  nameWithType.vb: List(Of RobotJointPosition)
  fullName.vb: System.Collections.Generic.List(Of RobotComponents.ABB.Actions.Declarations.RobotJointPosition)
  name.vb: List(Of RobotJointPosition)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: RobotComponents.ABB.Actions.Declarations.RobotJointPosition
    name: RobotJointPosition
    isExternal: true
    href: RobotComponents.ABB.Actions.Declarations.RobotJointPosition.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: RobotComponents.ABB.Actions.Declarations.RobotJointPosition
    name: RobotJointPosition
    isExternal: true
    href: RobotComponents.ABB.Actions.Declarations.RobotJointPosition.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: RobotComponents.ABB.Kinematics.InverseKinematics.RobotJointPosition*
  commentId: Overload:RobotComponents.ABB.Kinematics.InverseKinematics.RobotJointPosition
  isExternal: true
  href: RobotComponents.ABB.Kinematics.InverseKinematics.html#RobotComponents.ABB.Kinematics.InverseKinematics.RobotJointPosition
  name: RobotJointPosition
  nameWithType: InverseKinematics.RobotJointPosition
  fullName: RobotComponents.ABB.Kinematics.InverseKinematics.RobotJointPosition
- uid: RobotComponents.ABB.Kinematics.InverseKinematics.ExternalJointPosition*
  commentId: Overload:RobotComponents.ABB.Kinematics.InverseKinematics.ExternalJointPosition
  isExternal: true
  href: RobotComponents.ABB.Kinematics.InverseKinematics.html#RobotComponents.ABB.Kinematics.InverseKinematics.ExternalJointPosition
  name: ExternalJointPosition
  nameWithType: InverseKinematics.ExternalJointPosition
  fullName: RobotComponents.ABB.Kinematics.InverseKinematics.ExternalJointPosition
- uid: RobotComponents.ABB.Actions.Declarations.ExternalJointPosition
  commentId: T:RobotComponents.ABB.Actions.Declarations.ExternalJointPosition
  parent: RobotComponents.ABB.Actions.Declarations
  isExternal: true
  href: RobotComponents.ABB.Actions.Declarations.ExternalJointPosition.html
  name: ExternalJointPosition
  nameWithType: ExternalJointPosition
  fullName: RobotComponents.ABB.Actions.Declarations.ExternalJointPosition
- uid: RobotComponents.ABB.Kinematics.InverseKinematics.ErrorText*
  commentId: Overload:RobotComponents.ABB.Kinematics.InverseKinematics.ErrorText
  isExternal: true
  href: RobotComponents.ABB.Kinematics.InverseKinematics.html#RobotComponents.ABB.Kinematics.InverseKinematics.ErrorText
  name: ErrorText
  nameWithType: InverseKinematics.ErrorText
  fullName: RobotComponents.ABB.Kinematics.InverseKinematics.ErrorText
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<string>
  nameWithType: List<string>
  fullName: System.Collections.Generic.List<string>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: RobotComponents.ABB.Kinematics.InverseKinematics.InLimits*
  commentId: Overload:RobotComponents.ABB.Kinematics.InverseKinematics.InLimits
  isExternal: true
  href: RobotComponents.ABB.Kinematics.InverseKinematics.html#RobotComponents.ABB.Kinematics.InverseKinematics.InLimits
  name: InLimits
  nameWithType: InverseKinematics.InLimits
  fullName: RobotComponents.ABB.Kinematics.InverseKinematics.InLimits
