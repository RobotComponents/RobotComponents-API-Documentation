### YamlMime:ManagedReference
items:
- uid: RobotComponents.Utils.RobotToolCalibration
  commentId: T:RobotComponents.Utils.RobotToolCalibration
  id: RobotToolCalibration
  parent: RobotComponents.Utils
  children:
  - RobotComponents.Utils.RobotToolCalibration.#ctor
  - RobotComponents.Utils.RobotToolCalibration.#ctor(RobotComponents.Definitions.Robot,System.Collections.Generic.List{RobotComponents.Actions.RobotJointPosition})
  - RobotComponents.Utils.RobotToolCalibration.#ctor(RobotComponents.Definitions.Robot,System.Collections.Generic.List{RobotComponents.Actions.RobotJointPosition},System.Collections.Generic.List{RobotComponents.Actions.ExternalJointPosition})
  - RobotComponents.Utils.RobotToolCalibration.#ctor(RobotComponents.Utils.RobotToolCalibration)
  - RobotComponents.Utils.RobotToolCalibration.Calculate
  - RobotComponents.Utils.RobotToolCalibration.CheckJointPositionsAxisLimits
  - RobotComponents.Utils.RobotToolCalibration.Damping
  - RobotComponents.Utils.RobotToolCalibration.Delta
  - RobotComponents.Utils.RobotToolCalibration.Duplicate
  - RobotComponents.Utils.RobotToolCalibration.ErrorsX
  - RobotComponents.Utils.RobotToolCalibration.ErrorsY
  - RobotComponents.Utils.RobotToolCalibration.ErrorsZ
  - RobotComponents.Utils.RobotToolCalibration.ExternalJointPositions
  - RobotComponents.Utils.RobotToolCalibration.IsValid
  - RobotComponents.Utils.RobotToolCalibration.Iterations
  - RobotComponents.Utils.RobotToolCalibration.MaximumError
  - RobotComponents.Utils.RobotToolCalibration.Precision
  - RobotComponents.Utils.RobotToolCalibration.ReInitialize
  - RobotComponents.Utils.RobotToolCalibration.Robot
  - RobotComponents.Utils.RobotToolCalibration.RobotJointPositions
  - RobotComponents.Utils.RobotToolCalibration.TargetPoint
  - RobotComponents.Utils.RobotToolCalibration.TcpPoint
  - RobotComponents.Utils.RobotToolCalibration.X
  - RobotComponents.Utils.RobotToolCalibration.XInitial
  - RobotComponents.Utils.RobotToolCalibration.Y
  - RobotComponents.Utils.RobotToolCalibration.YInitial
  - RobotComponents.Utils.RobotToolCalibration.Z
  - RobotComponents.Utils.RobotToolCalibration.ZInitial
  langs:
  - csharp
  - vb
  name: RobotToolCalibration
  nameWithType: RobotToolCalibration
  fullName: RobotComponents.Utils.RobotToolCalibration
  type: Class
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Utils
  summary: "\nRepresents the Robot Tool Calibration class.\nThis class uses Newton&apos;s method and numerical differentiation to calculate the TCP from given Joint Positions. \nIf desired, the parameters for this optimization can be changed via the properties of this class.\n"
  syntax:
    content: public class RobotToolCalibration
    content.vb: Public Class RobotToolCalibration
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: RobotComponents.Utils.RobotToolCalibration.#ctor
  commentId: M:RobotComponents.Utils.RobotToolCalibration.#ctor
  id: '#ctor'
  parent: RobotComponents.Utils.RobotToolCalibration
  langs:
  - csharp
  - vb
  name: RobotToolCalibration()
  nameWithType: RobotToolCalibration.RobotToolCalibration()
  fullName: RobotComponents.Utils.RobotToolCalibration.RobotToolCalibration()
  type: Constructor
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Utils
  summary: "\nInitializes an empty instance of the Robot Tool Calibration class.\n"
  syntax:
    content: public RobotToolCalibration()
    content.vb: Public Sub New
  overload: RobotComponents.Utils.RobotToolCalibration.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RobotComponents.Utils.RobotToolCalibration.#ctor(RobotComponents.Definitions.Robot,System.Collections.Generic.List{RobotComponents.Actions.RobotJointPosition})
  commentId: M:RobotComponents.Utils.RobotToolCalibration.#ctor(RobotComponents.Definitions.Robot,System.Collections.Generic.List{RobotComponents.Actions.RobotJointPosition})
  id: '#ctor(RobotComponents.Definitions.Robot,System.Collections.Generic.List{RobotComponents.Actions.RobotJointPosition})'
  parent: RobotComponents.Utils.RobotToolCalibration
  langs:
  - csharp
  - vb
  name: RobotToolCalibration(Robot, List<RobotJointPosition>)
  nameWithType: RobotToolCalibration.RobotToolCalibration(Robot, List<RobotJointPosition>)
  fullName: RobotComponents.Utils.RobotToolCalibration.RobotToolCalibration(RobotComponents.Definitions.Robot, System.Collections.Generic.List<RobotComponents.Actions.RobotJointPosition>)
  type: Constructor
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Utils
  summary: "\nInitializes a new instance of the Robot Tool Calibration class from given Robot Joint Positions.\nThe External Joint Positions are set with default values (9e9).\n"
  syntax:
    content: public RobotToolCalibration(Robot robot, List<RobotJointPosition> robotJointPositions)
    parameters:
    - id: robot
      type: RobotComponents.Definitions.Robot
      description: 'The Robot the Joint Positions are given for. '
    - id: robotJointPositions
      type: System.Collections.Generic.List{RobotComponents.Actions.RobotJointPosition}
      description: 'The Robot Joint Positions as a list. '
    content.vb: Public Sub New(robot As Robot, robotJointPositions As List(Of RobotJointPosition))
  overload: RobotComponents.Utils.RobotToolCalibration.#ctor*
  nameWithType.vb: RobotToolCalibration.RobotToolCalibration(Robot, List(Of RobotJointPosition))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: RobotComponents.Utils.RobotToolCalibration.RobotToolCalibration(RobotComponents.Definitions.Robot, System.Collections.Generic.List(Of RobotComponents.Actions.RobotJointPosition))
  name.vb: RobotToolCalibration(Robot, List(Of RobotJointPosition))
- uid: RobotComponents.Utils.RobotToolCalibration.#ctor(RobotComponents.Definitions.Robot,System.Collections.Generic.List{RobotComponents.Actions.RobotJointPosition},System.Collections.Generic.List{RobotComponents.Actions.ExternalJointPosition})
  commentId: M:RobotComponents.Utils.RobotToolCalibration.#ctor(RobotComponents.Definitions.Robot,System.Collections.Generic.List{RobotComponents.Actions.RobotJointPosition},System.Collections.Generic.List{RobotComponents.Actions.ExternalJointPosition})
  id: '#ctor(RobotComponents.Definitions.Robot,System.Collections.Generic.List{RobotComponents.Actions.RobotJointPosition},System.Collections.Generic.List{RobotComponents.Actions.ExternalJointPosition})'
  parent: RobotComponents.Utils.RobotToolCalibration
  langs:
  - csharp
  - vb
  name: RobotToolCalibration(Robot, List<RobotJointPosition>, List<ExternalJointPosition>)
  nameWithType: RobotToolCalibration.RobotToolCalibration(Robot, List<RobotJointPosition>, List<ExternalJointPosition>)
  fullName: RobotComponents.Utils.RobotToolCalibration.RobotToolCalibration(RobotComponents.Definitions.Robot, System.Collections.Generic.List<RobotComponents.Actions.RobotJointPosition>, System.Collections.Generic.List<RobotComponents.Actions.ExternalJointPosition>)
  type: Constructor
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Utils
  summary: "\nInitializes a new instance of the Robot Tool Calibration class.\n"
  syntax:
    content: public RobotToolCalibration(Robot robot, List<RobotJointPosition> robotJointPositions, List<ExternalJointPosition> externalJointPositions)
    parameters:
    - id: robot
      type: RobotComponents.Definitions.Robot
      description: 'The Robot the Joint Positions are given for. '
    - id: robotJointPositions
      type: System.Collections.Generic.List{RobotComponents.Actions.RobotJointPosition}
      description: 'The Robot Joint Positions as a list. '
    - id: externalJointPositions
      type: System.Collections.Generic.List{RobotComponents.Actions.ExternalJointPosition}
      description: 'The External Joint Positions as a list. '
    content.vb: Public Sub New(robot As Robot, robotJointPositions As List(Of RobotJointPosition), externalJointPositions As List(Of ExternalJointPosition))
  overload: RobotComponents.Utils.RobotToolCalibration.#ctor*
  nameWithType.vb: RobotToolCalibration.RobotToolCalibration(Robot, List(Of RobotJointPosition), List(Of ExternalJointPosition))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: RobotComponents.Utils.RobotToolCalibration.RobotToolCalibration(RobotComponents.Definitions.Robot, System.Collections.Generic.List(Of RobotComponents.Actions.RobotJointPosition), System.Collections.Generic.List(Of RobotComponents.Actions.ExternalJointPosition))
  name.vb: RobotToolCalibration(Robot, List(Of RobotJointPosition), List(Of ExternalJointPosition))
- uid: RobotComponents.Utils.RobotToolCalibration.#ctor(RobotComponents.Utils.RobotToolCalibration)
  commentId: M:RobotComponents.Utils.RobotToolCalibration.#ctor(RobotComponents.Utils.RobotToolCalibration)
  id: '#ctor(RobotComponents.Utils.RobotToolCalibration)'
  parent: RobotComponents.Utils.RobotToolCalibration
  langs:
  - csharp
  - vb
  name: RobotToolCalibration(RobotToolCalibration)
  nameWithType: RobotToolCalibration.RobotToolCalibration(RobotToolCalibration)
  fullName: RobotComponents.Utils.RobotToolCalibration.RobotToolCalibration(RobotComponents.Utils.RobotToolCalibration)
  type: Constructor
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Utils
  summary: "\nInitializes a new instance of the Robot Tool Calibration class by duplicating an existing Robot Tool Calibration instance.\n"
  syntax:
    content: public RobotToolCalibration(RobotToolCalibration calibration)
    parameters:
    - id: calibration
      type: RobotComponents.Utils.RobotToolCalibration
      description: 'The Robot Tool Calibration instance to duplicate. '
    content.vb: Public Sub New(calibration As RobotToolCalibration)
  overload: RobotComponents.Utils.RobotToolCalibration.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RobotComponents.Utils.RobotToolCalibration.Duplicate
  commentId: M:RobotComponents.Utils.RobotToolCalibration.Duplicate
  id: Duplicate
  parent: RobotComponents.Utils.RobotToolCalibration
  langs:
  - csharp
  - vb
  name: Duplicate()
  nameWithType: RobotToolCalibration.Duplicate()
  fullName: RobotComponents.Utils.RobotToolCalibration.Duplicate()
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Utils
  summary: "\nReturns an exact duplicate of this Robot Tool Calibration instance.\n"
  syntax:
    content: public RobotToolCalibration Duplicate()
    return:
      type: RobotComponents.Utils.RobotToolCalibration
      description: 'A deep copy of the Robot Tool Calibration instance. '
    content.vb: Public Function Duplicate As RobotToolCalibration
  overload: RobotComponents.Utils.RobotToolCalibration.Duplicate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RobotComponents.Utils.RobotToolCalibration.ReInitialize
  commentId: M:RobotComponents.Utils.RobotToolCalibration.ReInitialize
  id: ReInitialize
  parent: RobotComponents.Utils.RobotToolCalibration
  langs:
  - csharp
  - vb
  name: ReInitialize()
  nameWithType: RobotToolCalibration.ReInitialize()
  fullName: RobotComponents.Utils.RobotToolCalibration.ReInitialize()
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Utils
  summary: "\nReinitializes the fields and properties to construct a valid Robot Tool Calibration instance. \n"
  syntax:
    content: public void ReInitialize()
    content.vb: Public Sub ReInitialize
  overload: RobotComponents.Utils.RobotToolCalibration.ReInitialize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RobotComponents.Utils.RobotToolCalibration.CheckJointPositionsAxisLimits
  commentId: M:RobotComponents.Utils.RobotToolCalibration.CheckJointPositionsAxisLimits
  id: CheckJointPositionsAxisLimits
  parent: RobotComponents.Utils.RobotToolCalibration
  langs:
  - csharp
  - vb
  name: CheckJointPositionsAxisLimits()
  nameWithType: RobotToolCalibration.CheckJointPositionsAxisLimits()
  fullName: RobotComponents.Utils.RobotToolCalibration.CheckJointPositionsAxisLimits()
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Utils
  summary: "\nChecks if the given Joint Positions are within the axis limits of the robot.\n"
  syntax:
    content: public List<string> CheckJointPositionsAxisLimits()
    return:
      type: System.Collections.Generic.List{System.String}
      description: 'A list with erros messages. When the list is empty, all the joint positions are within the limits. '
    content.vb: Public Function CheckJointPositionsAxisLimits As List(Of String)
  overload: RobotComponents.Utils.RobotToolCalibration.CheckJointPositionsAxisLimits*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RobotComponents.Utils.RobotToolCalibration.Calculate
  commentId: M:RobotComponents.Utils.RobotToolCalibration.Calculate
  id: Calculate
  parent: RobotComponents.Utils.RobotToolCalibration
  langs:
  - csharp
  - vb
  name: Calculate()
  nameWithType: RobotToolCalibration.Calculate()
  fullName: RobotComponents.Utils.RobotToolCalibration.Calculate()
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Utils
  summary: "\nCalculates the Tool Center Point.\n"
  syntax:
    content: public void Calculate()
    content.vb: Public Sub Calculate
  overload: RobotComponents.Utils.RobotToolCalibration.Calculate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RobotComponents.Utils.RobotToolCalibration.IsValid
  commentId: P:RobotComponents.Utils.RobotToolCalibration.IsValid
  id: IsValid
  parent: RobotComponents.Utils.RobotToolCalibration
  langs:
  - csharp
  - vb
  name: IsValid
  nameWithType: RobotToolCalibration.IsValid
  fullName: RobotComponents.Utils.RobotToolCalibration.IsValid
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Utils
  summary: "\nGets a value indicating whether or not the object is valid.\n"
  syntax:
    content: public bool IsValid { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsValid As Boolean
  overload: RobotComponents.Utils.RobotToolCalibration.IsValid*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: RobotComponents.Utils.RobotToolCalibration.Robot
  commentId: P:RobotComponents.Utils.RobotToolCalibration.Robot
  id: Robot
  parent: RobotComponents.Utils.RobotToolCalibration
  langs:
  - csharp
  - vb
  name: Robot
  nameWithType: RobotToolCalibration.Robot
  fullName: RobotComponents.Utils.RobotToolCalibration.Robot
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Utils
  summary: "\nGets or sets the Robot that is used for the tool calibration.\n"
  syntax:
    content: public Robot Robot { get; set; }
    parameters: []
    return:
      type: RobotComponents.Definitions.Robot
    content.vb: Public Property Robot As Robot
  overload: RobotComponents.Utils.RobotToolCalibration.Robot*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: RobotComponents.Utils.RobotToolCalibration.RobotJointPositions
  commentId: P:RobotComponents.Utils.RobotToolCalibration.RobotJointPositions
  id: RobotJointPositions
  parent: RobotComponents.Utils.RobotToolCalibration
  langs:
  - csharp
  - vb
  name: RobotJointPositions
  nameWithType: RobotToolCalibration.RobotJointPositions
  fullName: RobotComponents.Utils.RobotToolCalibration.RobotJointPositions
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Utils
  summary: "\nGets or sets the Robot Joint Positions to calculate the TCP from.\n"
  syntax:
    content: public List<RobotJointPosition> RobotJointPositions { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{RobotComponents.Actions.RobotJointPosition}
    content.vb: Public Property RobotJointPositions As List(Of RobotJointPosition)
  overload: RobotComponents.Utils.RobotToolCalibration.RobotJointPositions*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: RobotComponents.Utils.RobotToolCalibration.ExternalJointPositions
  commentId: P:RobotComponents.Utils.RobotToolCalibration.ExternalJointPositions
  id: ExternalJointPositions
  parent: RobotComponents.Utils.RobotToolCalibration
  langs:
  - csharp
  - vb
  name: ExternalJointPositions
  nameWithType: RobotToolCalibration.ExternalJointPositions
  fullName: RobotComponents.Utils.RobotToolCalibration.ExternalJointPositions
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Utils
  summary: "\nGets or sets the External Joint Positions to calculate the tool center point from.\n"
  syntax:
    content: public List<ExternalJointPosition> ExternalJointPositions { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{RobotComponents.Actions.ExternalJointPosition}
    content.vb: Public Property ExternalJointPositions As List(Of ExternalJointPosition)
  overload: RobotComponents.Utils.RobotToolCalibration.ExternalJointPositions*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: RobotComponents.Utils.RobotToolCalibration.XInitial
  commentId: P:RobotComponents.Utils.RobotToolCalibration.XInitial
  id: XInitial
  parent: RobotComponents.Utils.RobotToolCalibration
  langs:
  - csharp
  - vb
  name: XInitial
  nameWithType: RobotToolCalibration.XInitial
  fullName: RobotComponents.Utils.RobotToolCalibration.XInitial
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Utils
  summary: "\nGets or sets the initial x-coordinate of the tool center point to start the optimization with.\n"
  syntax:
    content: public double XInitial { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property XInitial As Double
  overload: RobotComponents.Utils.RobotToolCalibration.XInitial*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: RobotComponents.Utils.RobotToolCalibration.YInitial
  commentId: P:RobotComponents.Utils.RobotToolCalibration.YInitial
  id: YInitial
  parent: RobotComponents.Utils.RobotToolCalibration
  langs:
  - csharp
  - vb
  name: YInitial
  nameWithType: RobotToolCalibration.YInitial
  fullName: RobotComponents.Utils.RobotToolCalibration.YInitial
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Utils
  summary: "\nGets or sets the initial y-coordinate of the tool center point to start the optimization with.\n"
  syntax:
    content: public double YInitial { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property YInitial As Double
  overload: RobotComponents.Utils.RobotToolCalibration.YInitial*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: RobotComponents.Utils.RobotToolCalibration.ZInitial
  commentId: P:RobotComponents.Utils.RobotToolCalibration.ZInitial
  id: ZInitial
  parent: RobotComponents.Utils.RobotToolCalibration
  langs:
  - csharp
  - vb
  name: ZInitial
  nameWithType: RobotToolCalibration.ZInitial
  fullName: RobotComponents.Utils.RobotToolCalibration.ZInitial
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Utils
  summary: "\nGets or sets the initial z-coordinate of the tool center point to start the optimization with.\n"
  syntax:
    content: public double ZInitial { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property ZInitial As Double
  overload: RobotComponents.Utils.RobotToolCalibration.ZInitial*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: RobotComponents.Utils.RobotToolCalibration.Iterations
  commentId: P:RobotComponents.Utils.RobotToolCalibration.Iterations
  id: Iterations
  parent: RobotComponents.Utils.RobotToolCalibration
  langs:
  - csharp
  - vb
  name: Iterations
  nameWithType: RobotToolCalibration.Iterations
  fullName: RobotComponents.Utils.RobotToolCalibration.Iterations
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Utils
  summary: "\nGets or sets the maximum number of iterations of the tool calibation optimization.\n"
  syntax:
    content: public int Iterations { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Iterations As Integer
  overload: RobotComponents.Utils.RobotToolCalibration.Iterations*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: RobotComponents.Utils.RobotToolCalibration.Precision
  commentId: P:RobotComponents.Utils.RobotToolCalibration.Precision
  id: Precision
  parent: RobotComponents.Utils.RobotToolCalibration
  langs:
  - csharp
  - vb
  name: Precision
  nameWithType: RobotToolCalibration.Precision
  fullName: RobotComponents.Utils.RobotToolCalibration.Precision
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Utils
  summary: "\nGets or sets the desired precision of the tool calibraton optimization.\n"
  syntax:
    content: public double Precision { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Precision As Double
  overload: RobotComponents.Utils.RobotToolCalibration.Precision*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: RobotComponents.Utils.RobotToolCalibration.Damping
  commentId: P:RobotComponents.Utils.RobotToolCalibration.Damping
  id: Damping
  parent: RobotComponents.Utils.RobotToolCalibration
  langs:
  - csharp
  - vb
  name: Damping
  nameWithType: RobotToolCalibration.Damping
  fullName: RobotComponents.Utils.RobotToolCalibration.Damping
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Utils
  summary: "\nGets or sets the damping factor of the tool calibraton optimization.\n"
  syntax:
    content: public double Damping { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Damping As Double
  overload: RobotComponents.Utils.RobotToolCalibration.Damping*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: RobotComponents.Utils.RobotToolCalibration.Delta
  commentId: P:RobotComponents.Utils.RobotToolCalibration.Delta
  id: Delta
  parent: RobotComponents.Utils.RobotToolCalibration
  langs:
  - csharp
  - vb
  name: Delta
  nameWithType: RobotToolCalibration.Delta
  fullName: RobotComponents.Utils.RobotToolCalibration.Delta
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Utils
  summary: "\nGets or sets the delta of the tool calibraton optimization.\n"
  syntax:
    content: public double Delta { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Delta As Double
  overload: RobotComponents.Utils.RobotToolCalibration.Delta*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: RobotComponents.Utils.RobotToolCalibration.X
  commentId: P:RobotComponents.Utils.RobotToolCalibration.X
  id: X
  parent: RobotComponents.Utils.RobotToolCalibration
  langs:
  - csharp
  - vb
  name: X
  nameWithType: RobotToolCalibration.X
  fullName: RobotComponents.Utils.RobotToolCalibration.X
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Utils
  summary: "\nGets the x-coordindate of the tool center point.\n"
  syntax:
    content: public double X { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property X As Double
  overload: RobotComponents.Utils.RobotToolCalibration.X*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: RobotComponents.Utils.RobotToolCalibration.Y
  commentId: P:RobotComponents.Utils.RobotToolCalibration.Y
  id: Y
  parent: RobotComponents.Utils.RobotToolCalibration
  langs:
  - csharp
  - vb
  name: Y
  nameWithType: RobotToolCalibration.Y
  fullName: RobotComponents.Utils.RobotToolCalibration.Y
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Utils
  summary: "\nGets the y-coordindate of the tool center point.\n"
  syntax:
    content: public double Y { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Y As Double
  overload: RobotComponents.Utils.RobotToolCalibration.Y*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: RobotComponents.Utils.RobotToolCalibration.Z
  commentId: P:RobotComponents.Utils.RobotToolCalibration.Z
  id: Z
  parent: RobotComponents.Utils.RobotToolCalibration
  langs:
  - csharp
  - vb
  name: Z
  nameWithType: RobotToolCalibration.Z
  fullName: RobotComponents.Utils.RobotToolCalibration.Z
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Utils
  summary: "\nGets the z-coordindate of the tool center point.\n"
  syntax:
    content: public double Z { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Z As Double
  overload: RobotComponents.Utils.RobotToolCalibration.Z*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: RobotComponents.Utils.RobotToolCalibration.TcpPoint
  commentId: P:RobotComponents.Utils.RobotToolCalibration.TcpPoint
  id: TcpPoint
  parent: RobotComponents.Utils.RobotToolCalibration
  langs:
  - csharp
  - vb
  name: TcpPoint
  nameWithType: RobotToolCalibration.TcpPoint
  fullName: RobotComponents.Utils.RobotToolCalibration.TcpPoint
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Utils
  summary: "\nGets the tool center point.\n"
  syntax:
    content: public Point3d TcpPoint { get; }
    parameters: []
    return:
      type: Rhino.Geometry.Point3d
    content.vb: Public ReadOnly Property TcpPoint As Point3d
  overload: RobotComponents.Utils.RobotToolCalibration.TcpPoint*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: RobotComponents.Utils.RobotToolCalibration.TargetPoint
  commentId: P:RobotComponents.Utils.RobotToolCalibration.TargetPoint
  id: TargetPoint
  parent: RobotComponents.Utils.RobotToolCalibration
  langs:
  - csharp
  - vb
  name: TargetPoint
  nameWithType: RobotToolCalibration.TargetPoint
  fullName: RobotComponents.Utils.RobotToolCalibration.TargetPoint
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Utils
  summary: "\nGets the target point in world coordinate space. \nThis is the average point that is obtained from the given Robot Joint Positions and the calculated TCP.\n"
  syntax:
    content: public Point3d TargetPoint { get; }
    parameters: []
    return:
      type: Rhino.Geometry.Point3d
    content.vb: Public ReadOnly Property TargetPoint As Point3d
  overload: RobotComponents.Utils.RobotToolCalibration.TargetPoint*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: RobotComponents.Utils.RobotToolCalibration.ErrorsX
  commentId: P:RobotComponents.Utils.RobotToolCalibration.ErrorsX
  id: ErrorsX
  parent: RobotComponents.Utils.RobotToolCalibration
  langs:
  - csharp
  - vb
  name: ErrorsX
  nameWithType: RobotToolCalibration.ErrorsX
  fullName: RobotComponents.Utils.RobotToolCalibration.ErrorsX
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Utils
  summary: "\nGets the resulting errors in x-direction for each given Joint Position.\n"
  syntax:
    content: public double[] ErrorsX { get; }
    parameters: []
    return:
      type: System.Double[]
    content.vb: Public ReadOnly Property ErrorsX As Double()
  overload: RobotComponents.Utils.RobotToolCalibration.ErrorsX*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: RobotComponents.Utils.RobotToolCalibration.ErrorsY
  commentId: P:RobotComponents.Utils.RobotToolCalibration.ErrorsY
  id: ErrorsY
  parent: RobotComponents.Utils.RobotToolCalibration
  langs:
  - csharp
  - vb
  name: ErrorsY
  nameWithType: RobotToolCalibration.ErrorsY
  fullName: RobotComponents.Utils.RobotToolCalibration.ErrorsY
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Utils
  summary: "\nGets the resulting errors in y-direction for each given Joint Position.\n"
  syntax:
    content: public double[] ErrorsY { get; }
    parameters: []
    return:
      type: System.Double[]
    content.vb: Public ReadOnly Property ErrorsY As Double()
  overload: RobotComponents.Utils.RobotToolCalibration.ErrorsY*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: RobotComponents.Utils.RobotToolCalibration.ErrorsZ
  commentId: P:RobotComponents.Utils.RobotToolCalibration.ErrorsZ
  id: ErrorsZ
  parent: RobotComponents.Utils.RobotToolCalibration
  langs:
  - csharp
  - vb
  name: ErrorsZ
  nameWithType: RobotToolCalibration.ErrorsZ
  fullName: RobotComponents.Utils.RobotToolCalibration.ErrorsZ
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Utils
  summary: "\nGets the resulting errors in z-direction for each given Joint Position.\n"
  syntax:
    content: public double[] ErrorsZ { get; }
    parameters: []
    return:
      type: System.Double[]
    content.vb: Public ReadOnly Property ErrorsZ As Double()
  overload: RobotComponents.Utils.RobotToolCalibration.ErrorsZ*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: RobotComponents.Utils.RobotToolCalibration.MaximumError
  commentId: P:RobotComponents.Utils.RobotToolCalibration.MaximumError
  id: MaximumError
  parent: RobotComponents.Utils.RobotToolCalibration
  langs:
  - csharp
  - vb
  name: MaximumError
  nameWithType: RobotToolCalibration.MaximumError
  fullName: RobotComponents.Utils.RobotToolCalibration.MaximumError
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Utils
  summary: "\nGets the maximum errors in the x, y and z direction as a vector. \n"
  syntax:
    content: public Vector3d MaximumError { get; }
    parameters: []
    return:
      type: Rhino.Geometry.Vector3d
    content.vb: Public ReadOnly Property MaximumError As Vector3d
  overload: RobotComponents.Utils.RobotToolCalibration.MaximumError*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: RobotComponents.Utils
  commentId: N:RobotComponents.Utils
  isExternal: true
  name: RobotComponents.Utils
  nameWithType: RobotComponents.Utils
  fullName: RobotComponents.Utils
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: RobotComponents.Utils.RobotToolCalibration.#ctor*
  commentId: Overload:RobotComponents.Utils.RobotToolCalibration.#ctor
  isExternal: true
  name: RobotToolCalibration
  nameWithType: RobotToolCalibration.RobotToolCalibration
  fullName: RobotComponents.Utils.RobotToolCalibration.RobotToolCalibration
- uid: RobotComponents.Definitions.Robot
  commentId: T:RobotComponents.Definitions.Robot
  parent: RobotComponents.Definitions
  isExternal: true
  name: Robot
  nameWithType: Robot
  fullName: RobotComponents.Definitions.Robot
- uid: System.Collections.Generic.List{RobotComponents.Actions.RobotJointPosition}
  commentId: T:System.Collections.Generic.List{RobotComponents.Actions.RobotJointPosition}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<RobotJointPosition>
  nameWithType: List<RobotJointPosition>
  fullName: System.Collections.Generic.List<RobotComponents.Actions.RobotJointPosition>
  nameWithType.vb: List(Of RobotJointPosition)
  fullName.vb: System.Collections.Generic.List(Of RobotComponents.Actions.RobotJointPosition)
  name.vb: List(Of RobotJointPosition)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RobotComponents.Actions.RobotJointPosition
    name: RobotJointPosition
    nameWithType: RobotJointPosition
    fullName: RobotComponents.Actions.RobotJointPosition
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RobotComponents.Actions.RobotJointPosition
    name: RobotJointPosition
    nameWithType: RobotJointPosition
    fullName: RobotComponents.Actions.RobotJointPosition
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RobotComponents.Definitions
  commentId: N:RobotComponents.Definitions
  isExternal: true
  name: RobotComponents.Definitions
  nameWithType: RobotComponents.Definitions
  fullName: RobotComponents.Definitions
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.List{RobotComponents.Actions.ExternalJointPosition}
  commentId: T:System.Collections.Generic.List{RobotComponents.Actions.ExternalJointPosition}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ExternalJointPosition>
  nameWithType: List<ExternalJointPosition>
  fullName: System.Collections.Generic.List<RobotComponents.Actions.ExternalJointPosition>
  nameWithType.vb: List(Of ExternalJointPosition)
  fullName.vb: System.Collections.Generic.List(Of RobotComponents.Actions.ExternalJointPosition)
  name.vb: List(Of ExternalJointPosition)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RobotComponents.Actions.ExternalJointPosition
    name: ExternalJointPosition
    nameWithType: ExternalJointPosition
    fullName: RobotComponents.Actions.ExternalJointPosition
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RobotComponents.Actions.ExternalJointPosition
    name: ExternalJointPosition
    nameWithType: ExternalJointPosition
    fullName: RobotComponents.Actions.ExternalJointPosition
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RobotComponents.Utils.RobotToolCalibration
  commentId: T:RobotComponents.Utils.RobotToolCalibration
  parent: RobotComponents.Utils
  isExternal: true
  name: RobotToolCalibration
  nameWithType: RobotToolCalibration
  fullName: RobotComponents.Utils.RobotToolCalibration
- uid: RobotComponents.Utils.RobotToolCalibration.Duplicate*
  commentId: Overload:RobotComponents.Utils.RobotToolCalibration.Duplicate
  isExternal: true
  name: Duplicate
  nameWithType: RobotToolCalibration.Duplicate
  fullName: RobotComponents.Utils.RobotToolCalibration.Duplicate
- uid: RobotComponents.Utils.RobotToolCalibration.ReInitialize*
  commentId: Overload:RobotComponents.Utils.RobotToolCalibration.ReInitialize
  isExternal: true
  name: ReInitialize
  nameWithType: RobotToolCalibration.ReInitialize
  fullName: RobotComponents.Utils.RobotToolCalibration.ReInitialize
- uid: RobotComponents.Utils.RobotToolCalibration.CheckJointPositionsAxisLimits*
  commentId: Overload:RobotComponents.Utils.RobotToolCalibration.CheckJointPositionsAxisLimits
  isExternal: true
  name: CheckJointPositionsAxisLimits
  nameWithType: RobotToolCalibration.CheckJointPositionsAxisLimits
  fullName: RobotComponents.Utils.RobotToolCalibration.CheckJointPositionsAxisLimits
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RobotComponents.Utils.RobotToolCalibration.Calculate*
  commentId: Overload:RobotComponents.Utils.RobotToolCalibration.Calculate
  isExternal: true
  name: Calculate
  nameWithType: RobotToolCalibration.Calculate
  fullName: RobotComponents.Utils.RobotToolCalibration.Calculate
- uid: RobotComponents.Utils.RobotToolCalibration.IsValid*
  commentId: Overload:RobotComponents.Utils.RobotToolCalibration.IsValid
  isExternal: true
  name: IsValid
  nameWithType: RobotToolCalibration.IsValid
  fullName: RobotComponents.Utils.RobotToolCalibration.IsValid
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: RobotComponents.Utils.RobotToolCalibration.Robot*
  commentId: Overload:RobotComponents.Utils.RobotToolCalibration.Robot
  isExternal: true
  name: Robot
  nameWithType: RobotToolCalibration.Robot
  fullName: RobotComponents.Utils.RobotToolCalibration.Robot
- uid: RobotComponents.Utils.RobotToolCalibration.RobotJointPositions*
  commentId: Overload:RobotComponents.Utils.RobotToolCalibration.RobotJointPositions
  isExternal: true
  name: RobotJointPositions
  nameWithType: RobotToolCalibration.RobotJointPositions
  fullName: RobotComponents.Utils.RobotToolCalibration.RobotJointPositions
- uid: RobotComponents.Utils.RobotToolCalibration.ExternalJointPositions*
  commentId: Overload:RobotComponents.Utils.RobotToolCalibration.ExternalJointPositions
  isExternal: true
  name: ExternalJointPositions
  nameWithType: RobotToolCalibration.ExternalJointPositions
  fullName: RobotComponents.Utils.RobotToolCalibration.ExternalJointPositions
- uid: RobotComponents.Utils.RobotToolCalibration.XInitial*
  commentId: Overload:RobotComponents.Utils.RobotToolCalibration.XInitial
  isExternal: true
  name: XInitial
  nameWithType: RobotToolCalibration.XInitial
  fullName: RobotComponents.Utils.RobotToolCalibration.XInitial
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: RobotComponents.Utils.RobotToolCalibration.YInitial*
  commentId: Overload:RobotComponents.Utils.RobotToolCalibration.YInitial
  isExternal: true
  name: YInitial
  nameWithType: RobotToolCalibration.YInitial
  fullName: RobotComponents.Utils.RobotToolCalibration.YInitial
- uid: RobotComponents.Utils.RobotToolCalibration.ZInitial*
  commentId: Overload:RobotComponents.Utils.RobotToolCalibration.ZInitial
  isExternal: true
  name: ZInitial
  nameWithType: RobotToolCalibration.ZInitial
  fullName: RobotComponents.Utils.RobotToolCalibration.ZInitial
- uid: RobotComponents.Utils.RobotToolCalibration.Iterations*
  commentId: Overload:RobotComponents.Utils.RobotToolCalibration.Iterations
  isExternal: true
  name: Iterations
  nameWithType: RobotToolCalibration.Iterations
  fullName: RobotComponents.Utils.RobotToolCalibration.Iterations
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: RobotComponents.Utils.RobotToolCalibration.Precision*
  commentId: Overload:RobotComponents.Utils.RobotToolCalibration.Precision
  isExternal: true
  name: Precision
  nameWithType: RobotToolCalibration.Precision
  fullName: RobotComponents.Utils.RobotToolCalibration.Precision
- uid: RobotComponents.Utils.RobotToolCalibration.Damping*
  commentId: Overload:RobotComponents.Utils.RobotToolCalibration.Damping
  isExternal: true
  name: Damping
  nameWithType: RobotToolCalibration.Damping
  fullName: RobotComponents.Utils.RobotToolCalibration.Damping
- uid: RobotComponents.Utils.RobotToolCalibration.Delta*
  commentId: Overload:RobotComponents.Utils.RobotToolCalibration.Delta
  isExternal: true
  name: Delta
  nameWithType: RobotToolCalibration.Delta
  fullName: RobotComponents.Utils.RobotToolCalibration.Delta
- uid: RobotComponents.Utils.RobotToolCalibration.X*
  commentId: Overload:RobotComponents.Utils.RobotToolCalibration.X
  isExternal: true
  name: X
  nameWithType: RobotToolCalibration.X
  fullName: RobotComponents.Utils.RobotToolCalibration.X
- uid: RobotComponents.Utils.RobotToolCalibration.Y*
  commentId: Overload:RobotComponents.Utils.RobotToolCalibration.Y
  isExternal: true
  name: Y
  nameWithType: RobotToolCalibration.Y
  fullName: RobotComponents.Utils.RobotToolCalibration.Y
- uid: RobotComponents.Utils.RobotToolCalibration.Z*
  commentId: Overload:RobotComponents.Utils.RobotToolCalibration.Z
  isExternal: true
  name: Z
  nameWithType: RobotToolCalibration.Z
  fullName: RobotComponents.Utils.RobotToolCalibration.Z
- uid: RobotComponents.Utils.RobotToolCalibration.TcpPoint*
  commentId: Overload:RobotComponents.Utils.RobotToolCalibration.TcpPoint
  isExternal: true
  name: TcpPoint
  nameWithType: RobotToolCalibration.TcpPoint
  fullName: RobotComponents.Utils.RobotToolCalibration.TcpPoint
- uid: Rhino.Geometry.Point3d
  isExternal: true
  name: Point3d
  nameWithType: Point3d
  fullName: Rhino.Geometry.Point3d
- uid: RobotComponents.Utils.RobotToolCalibration.TargetPoint*
  commentId: Overload:RobotComponents.Utils.RobotToolCalibration.TargetPoint
  isExternal: true
  name: TargetPoint
  nameWithType: RobotToolCalibration.TargetPoint
  fullName: RobotComponents.Utils.RobotToolCalibration.TargetPoint
- uid: RobotComponents.Utils.RobotToolCalibration.ErrorsX*
  commentId: Overload:RobotComponents.Utils.RobotToolCalibration.ErrorsX
  isExternal: true
  name: ErrorsX
  nameWithType: RobotToolCalibration.ErrorsX
  fullName: RobotComponents.Utils.RobotToolCalibration.ErrorsX
- uid: System.Double[]
  isExternal: true
  name: Double[]
  nameWithType: Double[]
  fullName: System.Double[]
  nameWithType.vb: Double()
  fullName.vb: System.Double()
  name.vb: Double()
  spec.csharp:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: RobotComponents.Utils.RobotToolCalibration.ErrorsY*
  commentId: Overload:RobotComponents.Utils.RobotToolCalibration.ErrorsY
  isExternal: true
  name: ErrorsY
  nameWithType: RobotToolCalibration.ErrorsY
  fullName: RobotComponents.Utils.RobotToolCalibration.ErrorsY
- uid: RobotComponents.Utils.RobotToolCalibration.ErrorsZ*
  commentId: Overload:RobotComponents.Utils.RobotToolCalibration.ErrorsZ
  isExternal: true
  name: ErrorsZ
  nameWithType: RobotToolCalibration.ErrorsZ
  fullName: RobotComponents.Utils.RobotToolCalibration.ErrorsZ
- uid: RobotComponents.Utils.RobotToolCalibration.MaximumError*
  commentId: Overload:RobotComponents.Utils.RobotToolCalibration.MaximumError
  isExternal: true
  name: MaximumError
  nameWithType: RobotToolCalibration.MaximumError
  fullName: RobotComponents.Utils.RobotToolCalibration.MaximumError
- uid: Rhino.Geometry.Vector3d
  isExternal: true
  name: Vector3d
  nameWithType: Vector3d
  fullName: Rhino.Geometry.Vector3d
