### YamlMime:ManagedReference
items:
- uid: RobotComponents.Actions.RobotJointPosition
  commentId: T:RobotComponents.Actions.RobotJointPosition
  id: RobotJointPosition
  parent: RobotComponents.Actions
  children:
  - RobotComponents.Actions.RobotJointPosition.#ctor
  - RobotComponents.Actions.RobotJointPosition.#ctor(RobotComponents.Actions.RobotJointPosition)
  - RobotComponents.Actions.RobotJointPosition.#ctor(System.Collections.Generic.IList{System.Double})
  - RobotComponents.Actions.RobotJointPosition.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  - RobotComponents.Actions.RobotJointPosition.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - RobotComponents.Actions.RobotJointPosition.#ctor(System.String)
  - RobotComponents.Actions.RobotJointPosition.#ctor(System.String,System.Collections.Generic.IList{System.Double})
  - RobotComponents.Actions.RobotJointPosition.#ctor(System.String,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  - RobotComponents.Actions.RobotJointPosition.Add(RobotComponents.Actions.RobotJointPosition)
  - RobotComponents.Actions.RobotJointPosition.Add(System.Double)
  - RobotComponents.Actions.RobotJointPosition.Divide(RobotComponents.Actions.RobotJointPosition)
  - RobotComponents.Actions.RobotJointPosition.Divide(System.Double)
  - RobotComponents.Actions.RobotJointPosition.Duplicate
  - RobotComponents.Actions.RobotJointPosition.DuplicateAction
  - RobotComponents.Actions.RobotJointPosition.DuplicateDeclaration
  - RobotComponents.Actions.RobotJointPosition.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - RobotComponents.Actions.RobotJointPosition.IsFixedSize
  - RobotComponents.Actions.RobotJointPosition.IsValid
  - RobotComponents.Actions.RobotJointPosition.Item(System.Int32)
  - RobotComponents.Actions.RobotJointPosition.Length
  - RobotComponents.Actions.RobotJointPosition.Multiply(RobotComponents.Actions.RobotJointPosition)
  - RobotComponents.Actions.RobotJointPosition.Multiply(System.Double)
  - RobotComponents.Actions.RobotJointPosition.Name
  - RobotComponents.Actions.RobotJointPosition.Norm
  - RobotComponents.Actions.RobotJointPosition.NormSq
  - RobotComponents.Actions.RobotJointPosition.op_Addition(RobotComponents.Actions.RobotJointPosition,RobotComponents.Actions.RobotJointPosition)
  - RobotComponents.Actions.RobotJointPosition.op_Addition(RobotComponents.Actions.RobotJointPosition,System.Double)
  - RobotComponents.Actions.RobotJointPosition.op_Division(RobotComponents.Actions.RobotJointPosition,RobotComponents.Actions.RobotJointPosition)
  - RobotComponents.Actions.RobotJointPosition.op_Division(RobotComponents.Actions.RobotJointPosition,System.Double)
  - RobotComponents.Actions.RobotJointPosition.op_Multiply(RobotComponents.Actions.RobotJointPosition,RobotComponents.Actions.RobotJointPosition)
  - RobotComponents.Actions.RobotJointPosition.op_Multiply(RobotComponents.Actions.RobotJointPosition,System.Double)
  - RobotComponents.Actions.RobotJointPosition.op_Subtraction(RobotComponents.Actions.RobotJointPosition,RobotComponents.Actions.RobotJointPosition)
  - RobotComponents.Actions.RobotJointPosition.op_Subtraction(RobotComponents.Actions.RobotJointPosition,System.Double)
  - RobotComponents.Actions.RobotJointPosition.ReferenceType
  - RobotComponents.Actions.RobotJointPosition.Reset
  - RobotComponents.Actions.RobotJointPosition.Substract(RobotComponents.Actions.RobotJointPosition)
  - RobotComponents.Actions.RobotJointPosition.Substract(System.Double)
  - RobotComponents.Actions.RobotJointPosition.Sum
  - RobotComponents.Actions.RobotJointPosition.ToArray
  - RobotComponents.Actions.RobotJointPosition.ToList
  - RobotComponents.Actions.RobotJointPosition.ToRAPID
  - RobotComponents.Actions.RobotJointPosition.ToRAPIDDeclaration(RobotComponents.Actions.RAPIDGenerator)
  - RobotComponents.Actions.RobotJointPosition.ToRAPIDDeclaration(RobotComponents.Definitions.Robot)
  - RobotComponents.Actions.RobotJointPosition.ToRAPIDInstruction(RobotComponents.Actions.RAPIDGenerator)
  - RobotComponents.Actions.RobotJointPosition.ToRAPIDInstruction(RobotComponents.Definitions.Robot)
  - RobotComponents.Actions.RobotJointPosition.ToString
  langs:
  - csharp
  - vb
  name: RobotJointPosition
  nameWithType: RobotJointPosition
  fullName: RobotComponents.Actions.RobotJointPosition
  type: Class
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Actions
  summary: "\nRepresents the Robot Joint Position declaration.\nThis action is used to define the robot axis positions in degrees.\n"
  syntax:
    content: 'public class RobotJointPosition : Action, IDeclaration, IJointPosition, ISerializable'
    content.vb: >-
      Public Class RobotJointPosition
          Inherits Action
          Implements IDeclaration, IJointPosition, ISerializable
  inheritance:
  - System.Object
  - RobotComponents.Actions.Action
  implements:
  - RobotComponents.Actions.IDeclaration
  - RobotComponents.Actions.IJointPosition
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: RobotComponents.Actions.RobotJointPosition.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:RobotComponents.Actions.RobotJointPosition.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: RobotComponents.Actions.RobotJointPosition
  langs:
  - csharp
  - vb
  name: RobotJointPosition(SerializationInfo, StreamingContext)
  nameWithType: RobotJointPosition.RobotJointPosition(SerializationInfo, StreamingContext)
  fullName: RobotComponents.Actions.RobotJointPosition.RobotJointPosition(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  type: Constructor
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Actions
  summary: "\nProtected constructor needed for deserialization of the object.  \n"
  syntax:
    content: protected RobotJointPosition(SerializationInfo info, StreamingContext context)
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: 'The SerializationInfo to extract the data from. '
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: 'The context of this deserialization. '
    content.vb: Protected Sub New(info As SerializationInfo, context As StreamingContext)
  overload: RobotComponents.Actions.RobotJointPosition.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: RobotComponents.Actions.RobotJointPosition.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:RobotComponents.Actions.RobotJointPosition.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: RobotComponents.Actions.RobotJointPosition
  langs:
  - csharp
  - vb
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: RobotJointPosition.GetObjectData(SerializationInfo, StreamingContext)
  fullName: RobotComponents.Actions.RobotJointPosition.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Actions
  summary: "\nPopulates a SerializationInfo with the data needed to serialize the object.\n"
  syntax:
    content: public void GetObjectData(SerializationInfo info, StreamingContext context)
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: 'The SerializationInfo to populate with data. '
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: 'The destination for this serialization. '
    content.vb: Public Sub GetObjectData(info As SerializationInfo, context As StreamingContext)
  overload: RobotComponents.Actions.RobotJointPosition.GetObjectData*
  implements:
  - System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RobotComponents.Actions.RobotJointPosition.#ctor
  commentId: M:RobotComponents.Actions.RobotJointPosition.#ctor
  id: '#ctor'
  parent: RobotComponents.Actions.RobotJointPosition
  langs:
  - csharp
  - vb
  name: RobotJointPosition()
  nameWithType: RobotJointPosition.RobotJointPosition()
  fullName: RobotComponents.Actions.RobotJointPosition.RobotJointPosition()
  type: Constructor
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Actions
  summary: "\nInitializes a new instance of the Robot Joint Position class with an empty name an all axis values set to zero. \n"
  syntax:
    content: public RobotJointPosition()
    content.vb: Public Sub New
  overload: RobotComponents.Actions.RobotJointPosition.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RobotComponents.Actions.RobotJointPosition.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  commentId: M:RobotComponents.Actions.RobotJointPosition.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  id: '#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)'
  parent: RobotComponents.Actions.RobotJointPosition
  langs:
  - csharp
  - vb
  name: RobotJointPosition(Double, Double, Double, Double, Double, Double)
  nameWithType: RobotJointPosition.RobotJointPosition(Double, Double, Double, Double, Double, Double)
  fullName: RobotComponents.Actions.RobotJointPosition.RobotJointPosition(System.Double, System.Double, System.Double, System.Double, System.Double, System.Double)
  type: Constructor
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Actions
  summary: "\nInitializes a new instance of the Robot Joint Position class with an empty name.\n"
  syntax:
    content: public RobotJointPosition(double rax_1, double rax_2 = 0, double rax_3 = 0, double rax_4 = 0, double rax_5 = 0, double rax_6 = 0)
    parameters:
    - id: rax_1
      type: System.Double
      description: 'The position of robot axis 1 in degrees from the calibration position. '
    - id: rax_2
      type: System.Double
      description: The position of robot axis 2 in degrees from the calibration position.
    - id: rax_3
      type: System.Double
      description: The position of robot axis 3 in degrees from the calibration position.
    - id: rax_4
      type: System.Double
      description: The position of robot axis 4 in degrees from the calibration position.
    - id: rax_5
      type: System.Double
      description: The position of robot axis 5 in degrees from the calibration position.
    - id: rax_6
      type: System.Double
      description: The position of robot axis 6 in degrees from the calibration position.
    content.vb: Public Sub New(rax_1 As Double, rax_2 As Double = 0, rax_3 As Double = 0, rax_4 As Double = 0, rax_5 As Double = 0, rax_6 As Double = 0)
  overload: RobotComponents.Actions.RobotJointPosition.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RobotComponents.Actions.RobotJointPosition.#ctor(System.Collections.Generic.IList{System.Double})
  commentId: M:RobotComponents.Actions.RobotJointPosition.#ctor(System.Collections.Generic.IList{System.Double})
  id: '#ctor(System.Collections.Generic.IList{System.Double})'
  parent: RobotComponents.Actions.RobotJointPosition
  langs:
  - csharp
  - vb
  name: RobotJointPosition(IList<Double>)
  nameWithType: RobotJointPosition.RobotJointPosition(IList<Double>)
  fullName: RobotComponents.Actions.RobotJointPosition.RobotJointPosition(System.Collections.Generic.IList<System.Double>)
  type: Constructor
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Actions
  summary: "\nInitializes a new instance of the Robot Joint Position class with an empty name from a collection with values \n"
  syntax:
    content: public RobotJointPosition(IList<double> internalAxisValues)
    parameters:
    - id: internalAxisValues
      type: System.Collections.Generic.IList{System.Double}
      description: The user defined internal axis values as a collection.
    content.vb: Public Sub New(internalAxisValues As IList(Of Double))
  overload: RobotComponents.Actions.RobotJointPosition.#ctor*
  nameWithType.vb: RobotJointPosition.RobotJointPosition(IList(Of Double))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: RobotComponents.Actions.RobotJointPosition.RobotJointPosition(System.Collections.Generic.IList(Of System.Double))
  name.vb: RobotJointPosition(IList(Of Double))
- uid: RobotComponents.Actions.RobotJointPosition.#ctor(System.String)
  commentId: M:RobotComponents.Actions.RobotJointPosition.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: RobotComponents.Actions.RobotJointPosition
  langs:
  - csharp
  - vb
  name: RobotJointPosition(String)
  nameWithType: RobotJointPosition.RobotJointPosition(String)
  fullName: RobotComponents.Actions.RobotJointPosition.RobotJointPosition(System.String)
  type: Constructor
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Actions
  summary: "\nInitializes a new instance of the Robot Joint Position class with all axis values set to zero.\n"
  syntax:
    content: public RobotJointPosition(string name)
    parameters:
    - id: name
      type: System.String
      description: 'The robot joint position name, must be unique. '
    content.vb: Public Sub New(name As String)
  overload: RobotComponents.Actions.RobotJointPosition.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RobotComponents.Actions.RobotJointPosition.#ctor(System.String,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  commentId: M:RobotComponents.Actions.RobotJointPosition.#ctor(System.String,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  id: '#ctor(System.String,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)'
  parent: RobotComponents.Actions.RobotJointPosition
  langs:
  - csharp
  - vb
  name: RobotJointPosition(String, Double, Double, Double, Double, Double, Double)
  nameWithType: RobotJointPosition.RobotJointPosition(String, Double, Double, Double, Double, Double, Double)
  fullName: RobotComponents.Actions.RobotJointPosition.RobotJointPosition(System.String, System.Double, System.Double, System.Double, System.Double, System.Double, System.Double)
  type: Constructor
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Actions
  summary: "\nInitializes a new instance of the Robot Joint Position class.\n"
  syntax:
    content: public RobotJointPosition(string name, double rax_1, double rax_2 = 0, double rax_3 = 0, double rax_4 = 0, double rax_5 = 0, double rax_6 = 0)
    parameters:
    - id: name
      type: System.String
      description: 'The robot joint position name, must be unique. '
    - id: rax_1
      type: System.Double
      description: 'The position of robot axis 1 in degrees from the calibration position. '
    - id: rax_2
      type: System.Double
      description: The position of robot axis 2 in degrees from the calibration position.
    - id: rax_3
      type: System.Double
      description: The position of robot axis 3 in degrees from the calibration position.
    - id: rax_4
      type: System.Double
      description: The position of robot axis 4 in degrees from the calibration position.
    - id: rax_5
      type: System.Double
      description: The position of robot axis 5 in degrees from the calibration position.
    - id: rax_6
      type: System.Double
      description: The position of robot axis 6 in degrees from the calibration position.
    content.vb: Public Sub New(name As String, rax_1 As Double, rax_2 As Double = 0, rax_3 As Double = 0, rax_4 As Double = 0, rax_5 As Double = 0, rax_6 As Double = 0)
  overload: RobotComponents.Actions.RobotJointPosition.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RobotComponents.Actions.RobotJointPosition.#ctor(System.String,System.Collections.Generic.IList{System.Double})
  commentId: M:RobotComponents.Actions.RobotJointPosition.#ctor(System.String,System.Collections.Generic.IList{System.Double})
  id: '#ctor(System.String,System.Collections.Generic.IList{System.Double})'
  parent: RobotComponents.Actions.RobotJointPosition
  langs:
  - csharp
  - vb
  name: RobotJointPosition(String, IList<Double>)
  nameWithType: RobotJointPosition.RobotJointPosition(String, IList<Double>)
  fullName: RobotComponents.Actions.RobotJointPosition.RobotJointPosition(System.String, System.Collections.Generic.IList<System.Double>)
  type: Constructor
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Actions
  summary: "\nInitializes a new instance of the Robot Joint Position class from a collection with values.\n"
  syntax:
    content: public RobotJointPosition(string name, IList<double> internalAxisValues)
    parameters:
    - id: name
      type: System.String
      description: 'The robot joint position name, must be unique. '
    - id: internalAxisValues
      type: System.Collections.Generic.IList{System.Double}
      description: The user defined internal axis values as a colection.
    content.vb: Public Sub New(name As String, internalAxisValues As IList(Of Double))
  overload: RobotComponents.Actions.RobotJointPosition.#ctor*
  nameWithType.vb: RobotJointPosition.RobotJointPosition(String, IList(Of Double))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: RobotComponents.Actions.RobotJointPosition.RobotJointPosition(System.String, System.Collections.Generic.IList(Of System.Double))
  name.vb: RobotJointPosition(String, IList(Of Double))
- uid: RobotComponents.Actions.RobotJointPosition.#ctor(RobotComponents.Actions.RobotJointPosition)
  commentId: M:RobotComponents.Actions.RobotJointPosition.#ctor(RobotComponents.Actions.RobotJointPosition)
  id: '#ctor(RobotComponents.Actions.RobotJointPosition)'
  parent: RobotComponents.Actions.RobotJointPosition
  langs:
  - csharp
  - vb
  name: RobotJointPosition(RobotJointPosition)
  nameWithType: RobotJointPosition.RobotJointPosition(RobotJointPosition)
  fullName: RobotComponents.Actions.RobotJointPosition.RobotJointPosition(RobotComponents.Actions.RobotJointPosition)
  type: Constructor
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Actions
  summary: "\nInitializes a new instance of the Robot Joint Position class by duplicating an existing Robot Joint Position instance. \n"
  syntax:
    content: public RobotJointPosition(RobotJointPosition robotJointPosition)
    parameters:
    - id: robotJointPosition
      type: RobotComponents.Actions.RobotJointPosition
      description: 'The Robot Joint Position instance to duplicate. '
    content.vb: Public Sub New(robotJointPosition As RobotJointPosition)
  overload: RobotComponents.Actions.RobotJointPosition.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RobotComponents.Actions.RobotJointPosition.Duplicate
  commentId: M:RobotComponents.Actions.RobotJointPosition.Duplicate
  id: Duplicate
  parent: RobotComponents.Actions.RobotJointPosition
  langs:
  - csharp
  - vb
  name: Duplicate()
  nameWithType: RobotJointPosition.Duplicate()
  fullName: RobotComponents.Actions.RobotJointPosition.Duplicate()
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Actions
  summary: "\nReturns an exact duplicate of this Robot Joint Position instance.\n"
  syntax:
    content: public RobotJointPosition Duplicate()
    return:
      type: RobotComponents.Actions.RobotJointPosition
      description: 'A deep copy of the Robot Joint Position instance. '
    content.vb: Public Function Duplicate As RobotJointPosition
  overload: RobotComponents.Actions.RobotJointPosition.Duplicate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RobotComponents.Actions.RobotJointPosition.DuplicateAction
  commentId: M:RobotComponents.Actions.RobotJointPosition.DuplicateAction
  id: DuplicateAction
  parent: RobotComponents.Actions.RobotJointPosition
  langs:
  - csharp
  - vb
  name: DuplicateAction()
  nameWithType: RobotJointPosition.DuplicateAction()
  fullName: RobotComponents.Actions.RobotJointPosition.DuplicateAction()
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Actions
  summary: "\nReturns an exact duplicate of this Robot Joint Position instance as an Action. \n"
  syntax:
    content: public override Action DuplicateAction()
    return:
      type: RobotComponents.Actions.Action
      description: 'A deep copy of the Robot Joint Position instance as an Action. '
    content.vb: Public Overrides Function DuplicateAction As Action
  overridden: RobotComponents.Actions.Action.DuplicateAction
  overload: RobotComponents.Actions.RobotJointPosition.DuplicateAction*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: RobotComponents.Actions.RobotJointPosition.DuplicateDeclaration
  commentId: M:RobotComponents.Actions.RobotJointPosition.DuplicateDeclaration
  id: DuplicateDeclaration
  parent: RobotComponents.Actions.RobotJointPosition
  langs:
  - csharp
  - vb
  name: DuplicateDeclaration()
  nameWithType: RobotJointPosition.DuplicateDeclaration()
  fullName: RobotComponents.Actions.RobotJointPosition.DuplicateDeclaration()
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Actions
  summary: "\nReturns an exact duplicate of this Robot Joint Position instance as an IDeclaration.\n"
  syntax:
    content: public IDeclaration DuplicateDeclaration()
    return:
      type: RobotComponents.Actions.IDeclaration
      description: 'A deep copy of the Robot Joint Position instance as an IDeclaration. '
    content.vb: Public Function DuplicateDeclaration As IDeclaration
  overload: RobotComponents.Actions.RobotJointPosition.DuplicateDeclaration*
  implements:
  - RobotComponents.Actions.IDeclaration.DuplicateDeclaration
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RobotComponents.Actions.RobotJointPosition.ToString
  commentId: M:RobotComponents.Actions.RobotJointPosition.ToString
  id: ToString
  parent: RobotComponents.Actions.RobotJointPosition
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: RobotJointPosition.ToString()
  fullName: RobotComponents.Actions.RobotJointPosition.ToString()
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Actions
  summary: "\nReturns a string that represents the current object.\n"
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: 'A string that represents the current object. '
    content.vb: Public Overrides Function ToString As String
  overridden: RobotComponents.Actions.Action.ToString
  overload: RobotComponents.Actions.RobotJointPosition.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: RobotComponents.Actions.RobotJointPosition.ToArray
  commentId: M:RobotComponents.Actions.RobotJointPosition.ToArray
  id: ToArray
  parent: RobotComponents.Actions.RobotJointPosition
  langs:
  - csharp
  - vb
  name: ToArray()
  nameWithType: RobotJointPosition.ToArray()
  fullName: RobotComponents.Actions.RobotJointPosition.ToArray()
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Actions
  summary: "\nReturns the Robot Joint Position as an array with axis values.\n"
  syntax:
    content: public double[] ToArray()
    return:
      type: System.Double[]
      description: 'The array containing the axis values of the robot joint position. '
    content.vb: Public Function ToArray As Double()
  overload: RobotComponents.Actions.RobotJointPosition.ToArray*
  implements:
  - RobotComponents.Actions.IJointPosition.ToArray
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RobotComponents.Actions.RobotJointPosition.ToList
  commentId: M:RobotComponents.Actions.RobotJointPosition.ToList
  id: ToList
  parent: RobotComponents.Actions.RobotJointPosition
  langs:
  - csharp
  - vb
  name: ToList()
  nameWithType: RobotJointPosition.ToList()
  fullName: RobotComponents.Actions.RobotJointPosition.ToList()
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Actions
  summary: "\nReturns the Robot Joint Position as an array with axis values.\n"
  syntax:
    content: public List<double> ToList()
    return:
      type: System.Collections.Generic.List{System.Double}
      description: 'The list containing the axis values of the robot joint position. '
    content.vb: Public Function ToList As List(Of Double)
  overload: RobotComponents.Actions.RobotJointPosition.ToList*
  implements:
  - RobotComponents.Actions.IJointPosition.ToList
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RobotComponents.Actions.RobotJointPosition.Sum
  commentId: M:RobotComponents.Actions.RobotJointPosition.Sum
  id: Sum
  parent: RobotComponents.Actions.RobotJointPosition
  langs:
  - csharp
  - vb
  name: Sum()
  nameWithType: RobotJointPosition.Sum()
  fullName: RobotComponents.Actions.RobotJointPosition.Sum()
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Actions
  summary: "\nComputes the sum of the values in this joint position.\n"
  syntax:
    content: public double Sum()
    return:
      type: System.Double
      description: 'The sum of the values in the joint position. '
    content.vb: Public Function Sum As Double
  overload: RobotComponents.Actions.RobotJointPosition.Sum*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RobotComponents.Actions.RobotJointPosition.Norm
  commentId: M:RobotComponents.Actions.RobotJointPosition.Norm
  id: Norm
  parent: RobotComponents.Actions.RobotJointPosition
  langs:
  - csharp
  - vb
  name: Norm()
  nameWithType: RobotJointPosition.Norm()
  fullName: RobotComponents.Actions.RobotJointPosition.Norm()
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Actions
  summary: "\nComputes the norm of this joint position.\n"
  syntax:
    content: public double Norm()
    return:
      type: System.Double
      description: 'The norm of the joint position. '
    content.vb: Public Function Norm As Double
  overload: RobotComponents.Actions.RobotJointPosition.Norm*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RobotComponents.Actions.RobotJointPosition.NormSq
  commentId: M:RobotComponents.Actions.RobotJointPosition.NormSq
  id: NormSq
  parent: RobotComponents.Actions.RobotJointPosition
  langs:
  - csharp
  - vb
  name: NormSq()
  nameWithType: RobotJointPosition.NormSq()
  fullName: RobotComponents.Actions.RobotJointPosition.NormSq()
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Actions
  summary: "\nComputes the square norm of this joint position.\n"
  syntax:
    content: public double NormSq()
    return:
      type: System.Double
      description: 'he square norm of this joint position. '
    content.vb: Public Function NormSq As Double
  overload: RobotComponents.Actions.RobotJointPosition.NormSq*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RobotComponents.Actions.RobotJointPosition.Reset
  commentId: M:RobotComponents.Actions.RobotJointPosition.Reset
  id: Reset
  parent: RobotComponents.Actions.RobotJointPosition
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: RobotJointPosition.Reset()
  fullName: RobotComponents.Actions.RobotJointPosition.Reset()
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Actions
  summary: "\nSets all the elements in the joint position back to its default value (0.0).\n"
  syntax:
    content: public void Reset()
    content.vb: Public Sub Reset
  overload: RobotComponents.Actions.RobotJointPosition.Reset*
  implements:
  - RobotComponents.Actions.IJointPosition.Reset
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RobotComponents.Actions.RobotJointPosition.Add(System.Double)
  commentId: M:RobotComponents.Actions.RobotJointPosition.Add(System.Double)
  id: Add(System.Double)
  parent: RobotComponents.Actions.RobotJointPosition
  langs:
  - csharp
  - vb
  name: Add(Double)
  nameWithType: RobotJointPosition.Add(Double)
  fullName: RobotComponents.Actions.RobotJointPosition.Add(System.Double)
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Actions
  summary: "\nAdds a constant number to all the values inside this Joint Position.\n"
  syntax:
    content: public void Add(double value)
    parameters:
    - id: value
      type: System.Double
      description: 'The number to be added. '
    content.vb: Public Sub Add(value As Double)
  overload: RobotComponents.Actions.RobotJointPosition.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RobotComponents.Actions.RobotJointPosition.Add(RobotComponents.Actions.RobotJointPosition)
  commentId: M:RobotComponents.Actions.RobotJointPosition.Add(RobotComponents.Actions.RobotJointPosition)
  id: Add(RobotComponents.Actions.RobotJointPosition)
  parent: RobotComponents.Actions.RobotJointPosition
  langs:
  - csharp
  - vb
  name: Add(RobotJointPosition)
  nameWithType: RobotJointPosition.Add(RobotJointPosition)
  fullName: RobotComponents.Actions.RobotJointPosition.Add(RobotComponents.Actions.RobotJointPosition)
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Actions
  summary: "\nAdds the values of an Robot Joint Position to the values inside this Joint Position. \nValue 1 + value 1, value 2 + value 2, value 3 + value 3 etc.\n"
  syntax:
    content: public void Add(RobotJointPosition jointPosition)
    parameters:
    - id: jointPosition
      type: RobotComponents.Actions.RobotJointPosition
      description: 'The Robot Joint Position to be added. '
    content.vb: Public Sub Add(jointPosition As RobotJointPosition)
  overload: RobotComponents.Actions.RobotJointPosition.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RobotComponents.Actions.RobotJointPosition.Substract(System.Double)
  commentId: M:RobotComponents.Actions.RobotJointPosition.Substract(System.Double)
  id: Substract(System.Double)
  parent: RobotComponents.Actions.RobotJointPosition
  langs:
  - csharp
  - vb
  name: Substract(Double)
  nameWithType: RobotJointPosition.Substract(Double)
  fullName: RobotComponents.Actions.RobotJointPosition.Substract(System.Double)
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Actions
  summary: "\nSubstracts a constant number from the values inside this Joint Position.\n"
  syntax:
    content: public void Substract(double value)
    parameters:
    - id: value
      type: System.Double
      description: 'The number to be substracted. '
    content.vb: Public Sub Substract(value As Double)
  overload: RobotComponents.Actions.RobotJointPosition.Substract*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RobotComponents.Actions.RobotJointPosition.Substract(RobotComponents.Actions.RobotJointPosition)
  commentId: M:RobotComponents.Actions.RobotJointPosition.Substract(RobotComponents.Actions.RobotJointPosition)
  id: Substract(RobotComponents.Actions.RobotJointPosition)
  parent: RobotComponents.Actions.RobotJointPosition
  langs:
  - csharp
  - vb
  name: Substract(RobotJointPosition)
  nameWithType: RobotJointPosition.Substract(RobotJointPosition)
  fullName: RobotComponents.Actions.RobotJointPosition.Substract(RobotComponents.Actions.RobotJointPosition)
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Actions
  summary: "\nSubstracts the values of an Robot Joint Position from the values inside this Joint Position. \nValue 1 - value 1, value 2 - value 2, value 3 - value 3 etc.\n"
  syntax:
    content: public void Substract(RobotJointPosition jointPosition)
    parameters:
    - id: jointPosition
      type: RobotComponents.Actions.RobotJointPosition
      description: 'The Robot Joint Position to be substracted. '
    content.vb: Public Sub Substract(jointPosition As RobotJointPosition)
  overload: RobotComponents.Actions.RobotJointPosition.Substract*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RobotComponents.Actions.RobotJointPosition.Multiply(System.Double)
  commentId: M:RobotComponents.Actions.RobotJointPosition.Multiply(System.Double)
  id: Multiply(System.Double)
  parent: RobotComponents.Actions.RobotJointPosition
  langs:
  - csharp
  - vb
  name: Multiply(Double)
  nameWithType: RobotJointPosition.Multiply(Double)
  fullName: RobotComponents.Actions.RobotJointPosition.Multiply(System.Double)
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Actions
  summary: "\nMultiplies the values inside this Joint Position with a constant number.\n"
  syntax:
    content: public void Multiply(double value)
    parameters:
    - id: value
      type: System.Double
      description: 'The multiplier as a double. '
    content.vb: Public Sub Multiply(value As Double)
  overload: RobotComponents.Actions.RobotJointPosition.Multiply*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RobotComponents.Actions.RobotJointPosition.Multiply(RobotComponents.Actions.RobotJointPosition)
  commentId: M:RobotComponents.Actions.RobotJointPosition.Multiply(RobotComponents.Actions.RobotJointPosition)
  id: Multiply(RobotComponents.Actions.RobotJointPosition)
  parent: RobotComponents.Actions.RobotJointPosition
  langs:
  - csharp
  - vb
  name: Multiply(RobotJointPosition)
  nameWithType: RobotJointPosition.Multiply(RobotJointPosition)
  fullName: RobotComponents.Actions.RobotJointPosition.Multiply(RobotComponents.Actions.RobotJointPosition)
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Actions
  summary: "\nMultiplies the values inside this Joint Position with the values from another Robot Joint Position.\nValue 1 * value 1, value 2 * value 2, value 3 * value 3 etc.\n"
  syntax:
    content: public void Multiply(RobotJointPosition jointPosition)
    parameters:
    - id: jointPosition
      type: RobotComponents.Actions.RobotJointPosition
      description: 'The multiplier as a Robot Joint Position. '
    content.vb: Public Sub Multiply(jointPosition As RobotJointPosition)
  overload: RobotComponents.Actions.RobotJointPosition.Multiply*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RobotComponents.Actions.RobotJointPosition.Divide(System.Double)
  commentId: M:RobotComponents.Actions.RobotJointPosition.Divide(System.Double)
  id: Divide(System.Double)
  parent: RobotComponents.Actions.RobotJointPosition
  langs:
  - csharp
  - vb
  name: Divide(Double)
  nameWithType: RobotJointPosition.Divide(Double)
  fullName: RobotComponents.Actions.RobotJointPosition.Divide(System.Double)
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Actions
  summary: "\nDivides the values inside this Joint Position with a constant number.\n"
  syntax:
    content: public void Divide(double value)
    parameters:
    - id: value
      type: System.Double
      description: 'The divider as a double. '
    content.vb: Public Sub Divide(value As Double)
  overload: RobotComponents.Actions.RobotJointPosition.Divide*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RobotComponents.Actions.RobotJointPosition.Divide(RobotComponents.Actions.RobotJointPosition)
  commentId: M:RobotComponents.Actions.RobotJointPosition.Divide(RobotComponents.Actions.RobotJointPosition)
  id: Divide(RobotComponents.Actions.RobotJointPosition)
  parent: RobotComponents.Actions.RobotJointPosition
  langs:
  - csharp
  - vb
  name: Divide(RobotJointPosition)
  nameWithType: RobotJointPosition.Divide(RobotJointPosition)
  fullName: RobotComponents.Actions.RobotJointPosition.Divide(RobotComponents.Actions.RobotJointPosition)
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Actions
  summary: "\nDivides the values inside this Joint Position with the values from another Robot Joint Position.\nValue 1 / value 1, value 2 / value 2, value 3 / value 3 etc.\n"
  syntax:
    content: public void Divide(RobotJointPosition jointPosition)
    parameters:
    - id: jointPosition
      type: RobotComponents.Actions.RobotJointPosition
      description: 'The divider as an Robot Joint Position. '
    content.vb: Public Sub Divide(jointPosition As RobotJointPosition)
  overload: RobotComponents.Actions.RobotJointPosition.Divide*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RobotComponents.Actions.RobotJointPosition.ToRAPID
  commentId: M:RobotComponents.Actions.RobotJointPosition.ToRAPID
  id: ToRAPID
  parent: RobotComponents.Actions.RobotJointPosition
  langs:
  - csharp
  - vb
  name: ToRAPID()
  nameWithType: RobotJointPosition.ToRAPID()
  fullName: RobotComponents.Actions.RobotJointPosition.ToRAPID()
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Actions
  summary: "\nReturns the Joint Position in RAPID code format, e.g. &quot;[0, 0, 0, 0, 45, 0]&quot;.\n"
  syntax:
    content: public string ToRAPID()
    return:
      type: System.String
      description: 'The string with axis values. '
    content.vb: Public Function ToRAPID As String
  overload: RobotComponents.Actions.RobotJointPosition.ToRAPID*
  implements:
  - RobotComponents.Actions.IJointPosition.ToRAPID
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RobotComponents.Actions.RobotJointPosition.ToRAPIDDeclaration(RobotComponents.Definitions.Robot)
  commentId: M:RobotComponents.Actions.RobotJointPosition.ToRAPIDDeclaration(RobotComponents.Definitions.Robot)
  id: ToRAPIDDeclaration(RobotComponents.Definitions.Robot)
  parent: RobotComponents.Actions.RobotJointPosition
  langs:
  - csharp
  - vb
  name: ToRAPIDDeclaration(Robot)
  nameWithType: RobotJointPosition.ToRAPIDDeclaration(Robot)
  fullName: RobotComponents.Actions.RobotJointPosition.ToRAPIDDeclaration(RobotComponents.Definitions.Robot)
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Actions
  summary: "\nReturns the RAPID declaration code line of the this action.\n"
  syntax:
    content: public override string ToRAPIDDeclaration(Robot robot)
    parameters:
    - id: robot
      type: RobotComponents.Definitions.Robot
      description: 'The Robot were the code is generated for. '
    return:
      type: System.String
      description: 'An empty string. '
    content.vb: Public Overrides Function ToRAPIDDeclaration(robot As Robot) As String
  overridden: RobotComponents.Actions.Action.ToRAPIDDeclaration(RobotComponents.Definitions.Robot)
  overload: RobotComponents.Actions.RobotJointPosition.ToRAPIDDeclaration*
  implements:
  - RobotComponents.Actions.IDeclaration.ToRAPIDDeclaration(RobotComponents.Definitions.Robot)
  - RobotComponents.Actions.IJointPosition.ToRAPIDDeclaration(RobotComponents.Definitions.Robot)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: RobotComponents.Actions.RobotJointPosition.ToRAPIDInstruction(RobotComponents.Definitions.Robot)
  commentId: M:RobotComponents.Actions.RobotJointPosition.ToRAPIDInstruction(RobotComponents.Definitions.Robot)
  id: ToRAPIDInstruction(RobotComponents.Definitions.Robot)
  parent: RobotComponents.Actions.RobotJointPosition
  langs:
  - csharp
  - vb
  name: ToRAPIDInstruction(Robot)
  nameWithType: RobotJointPosition.ToRAPIDInstruction(Robot)
  fullName: RobotComponents.Actions.RobotJointPosition.ToRAPIDInstruction(RobotComponents.Definitions.Robot)
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Actions
  summary: "\nReturns the RAPID instruction code line of the this action. \n"
  syntax:
    content: public override string ToRAPIDInstruction(Robot robot)
    parameters:
    - id: robot
      type: RobotComponents.Definitions.Robot
      description: 'The Robot were the code is generated for. '
    return:
      type: System.String
      description: 'An empty string. '
    content.vb: Public Overrides Function ToRAPIDInstruction(robot As Robot) As String
  overridden: RobotComponents.Actions.Action.ToRAPIDInstruction(RobotComponents.Definitions.Robot)
  overload: RobotComponents.Actions.RobotJointPosition.ToRAPIDInstruction*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: RobotComponents.Actions.RobotJointPosition.ToRAPIDDeclaration(RobotComponents.Actions.RAPIDGenerator)
  commentId: M:RobotComponents.Actions.RobotJointPosition.ToRAPIDDeclaration(RobotComponents.Actions.RAPIDGenerator)
  id: ToRAPIDDeclaration(RobotComponents.Actions.RAPIDGenerator)
  parent: RobotComponents.Actions.RobotJointPosition
  langs:
  - csharp
  - vb
  name: ToRAPIDDeclaration(RAPIDGenerator)
  nameWithType: RobotJointPosition.ToRAPIDDeclaration(RAPIDGenerator)
  fullName: RobotComponents.Actions.RobotJointPosition.ToRAPIDDeclaration(RobotComponents.Actions.RAPIDGenerator)
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Actions
  summary: "\nCreates declarations in the RAPID program module inside the RAPID Generator. \nThis method is called inside the RAPID generator.\n"
  syntax:
    content: public override void ToRAPIDDeclaration(RAPIDGenerator RAPIDGenerator)
    parameters:
    - id: RAPIDGenerator
      type: RobotComponents.Actions.RAPIDGenerator
      description: 'The RAPID Generator. '
    content.vb: Public Overrides Sub ToRAPIDDeclaration(RAPIDGenerator As RAPIDGenerator)
  overridden: RobotComponents.Actions.Action.ToRAPIDDeclaration(RobotComponents.Actions.RAPIDGenerator)
  overload: RobotComponents.Actions.RobotJointPosition.ToRAPIDDeclaration*
  implements:
  - RobotComponents.Actions.IDeclaration.ToRAPIDDeclaration(RobotComponents.Actions.RAPIDGenerator)
  - RobotComponents.Actions.IJointPosition.ToRAPIDDeclaration(RobotComponents.Actions.RAPIDGenerator)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: RobotComponents.Actions.RobotJointPosition.ToRAPIDInstruction(RobotComponents.Actions.RAPIDGenerator)
  commentId: M:RobotComponents.Actions.RobotJointPosition.ToRAPIDInstruction(RobotComponents.Actions.RAPIDGenerator)
  id: ToRAPIDInstruction(RobotComponents.Actions.RAPIDGenerator)
  parent: RobotComponents.Actions.RobotJointPosition
  langs:
  - csharp
  - vb
  name: ToRAPIDInstruction(RAPIDGenerator)
  nameWithType: RobotJointPosition.ToRAPIDInstruction(RAPIDGenerator)
  fullName: RobotComponents.Actions.RobotJointPosition.ToRAPIDInstruction(RobotComponents.Actions.RAPIDGenerator)
  type: Method
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Actions
  summary: "\nCreates instructions in the RAPID program module inside the RAPID Generator.\nThis method is called inside the RAPID generator.\n"
  syntax:
    content: public override void ToRAPIDInstruction(RAPIDGenerator RAPIDGenerator)
    parameters:
    - id: RAPIDGenerator
      type: RobotComponents.Actions.RAPIDGenerator
      description: 'The RAPID Generator. '
    content.vb: Public Overrides Sub ToRAPIDInstruction(RAPIDGenerator As RAPIDGenerator)
  overridden: RobotComponents.Actions.Action.ToRAPIDInstruction(RobotComponents.Actions.RAPIDGenerator)
  overload: RobotComponents.Actions.RobotJointPosition.ToRAPIDInstruction*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: RobotComponents.Actions.RobotJointPosition.op_Addition(RobotComponents.Actions.RobotJointPosition,System.Double)
  commentId: M:RobotComponents.Actions.RobotJointPosition.op_Addition(RobotComponents.Actions.RobotJointPosition,System.Double)
  id: op_Addition(RobotComponents.Actions.RobotJointPosition,System.Double)
  parent: RobotComponents.Actions.RobotJointPosition
  langs:
  - csharp
  - vb
  name: Addition(RobotJointPosition, Double)
  nameWithType: RobotJointPosition.Addition(RobotJointPosition, Double)
  fullName: RobotComponents.Actions.RobotJointPosition.Addition(RobotComponents.Actions.RobotJointPosition, System.Double)
  type: Operator
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Actions
  summary: "\nAdds a number to all the values inside the Robot Joint Position.\n"
  syntax:
    content: public static RobotJointPosition operator +(RobotJointPosition p, double num)
    parameters:
    - id: p
      type: RobotComponents.Actions.RobotJointPosition
      description: 'The Robot Joint Position. '
    - id: num
      type: System.Double
      description: 'The value to add. '
    return:
      type: RobotComponents.Actions.RobotJointPosition
      description: 'The Robot Joint Position with added values. '
    content.vb: Public Shared Operator +(p As RobotJointPosition, num As Double) As RobotJointPosition
  overload: RobotComponents.Actions.RobotJointPosition.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: RobotComponents.Actions.RobotJointPosition.op_Subtraction(RobotComponents.Actions.RobotJointPosition,System.Double)
  commentId: M:RobotComponents.Actions.RobotJointPosition.op_Subtraction(RobotComponents.Actions.RobotJointPosition,System.Double)
  id: op_Subtraction(RobotComponents.Actions.RobotJointPosition,System.Double)
  parent: RobotComponents.Actions.RobotJointPosition
  langs:
  - csharp
  - vb
  name: Subtraction(RobotJointPosition, Double)
  nameWithType: RobotJointPosition.Subtraction(RobotJointPosition, Double)
  fullName: RobotComponents.Actions.RobotJointPosition.Subtraction(RobotComponents.Actions.RobotJointPosition, System.Double)
  type: Operator
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Actions
  summary: "\nSubstracts a number from all the values inside the Robot Joint Position.\n"
  syntax:
    content: public static RobotJointPosition operator -(RobotJointPosition p, double num)
    parameters:
    - id: p
      type: RobotComponents.Actions.RobotJointPosition
      description: 'The Robot Joint Position. '
    - id: num
      type: System.Double
      description: 'The number to substract. '
    return:
      type: RobotComponents.Actions.RobotJointPosition
      description: 'The Robot Joint Position with divide values. '
    content.vb: Public Shared Operator -(p As RobotJointPosition, num As Double) As RobotJointPosition
  overload: RobotComponents.Actions.RobotJointPosition.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: RobotComponents.Actions.RobotJointPosition.op_Multiply(RobotComponents.Actions.RobotJointPosition,System.Double)
  commentId: M:RobotComponents.Actions.RobotJointPosition.op_Multiply(RobotComponents.Actions.RobotJointPosition,System.Double)
  id: op_Multiply(RobotComponents.Actions.RobotJointPosition,System.Double)
  parent: RobotComponents.Actions.RobotJointPosition
  langs:
  - csharp
  - vb
  name: Multiply(RobotJointPosition, Double)
  nameWithType: RobotJointPosition.Multiply(RobotJointPosition, Double)
  fullName: RobotComponents.Actions.RobotJointPosition.Multiply(RobotComponents.Actions.RobotJointPosition, System.Double)
  type: Operator
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Actions
  summary: "\nMutliplies all the values inside the Robot Joint Position by a number.\n"
  syntax:
    content: public static RobotJointPosition operator *(RobotJointPosition p, double num)
    parameters:
    - id: p
      type: RobotComponents.Actions.RobotJointPosition
      description: 'The Robot Joint Position. '
    - id: num
      type: System.Double
      description: 'The value to multiply by. '
    return:
      type: RobotComponents.Actions.RobotJointPosition
      description: 'The Robot Joint Position with multiplied values. '
    content.vb: Public Shared Operator *(p As RobotJointPosition, num As Double) As RobotJointPosition
  overload: RobotComponents.Actions.RobotJointPosition.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: RobotComponents.Actions.RobotJointPosition.op_Division(RobotComponents.Actions.RobotJointPosition,System.Double)
  commentId: M:RobotComponents.Actions.RobotJointPosition.op_Division(RobotComponents.Actions.RobotJointPosition,System.Double)
  id: op_Division(RobotComponents.Actions.RobotJointPosition,System.Double)
  parent: RobotComponents.Actions.RobotJointPosition
  langs:
  - csharp
  - vb
  name: Division(RobotJointPosition, Double)
  nameWithType: RobotJointPosition.Division(RobotJointPosition, Double)
  fullName: RobotComponents.Actions.RobotJointPosition.Division(RobotComponents.Actions.RobotJointPosition, System.Double)
  type: Operator
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Actions
  summary: "\nDivides all the values inside the Robot Joint Position by a number. \n"
  syntax:
    content: public static RobotJointPosition operator /(RobotJointPosition p, double num)
    parameters:
    - id: p
      type: RobotComponents.Actions.RobotJointPosition
      description: 'The Robot Joint Position. '
    - id: num
      type: System.Double
      description: 'The number to divide by. '
    return:
      type: RobotComponents.Actions.RobotJointPosition
      description: 'The Robot Joint Position with divide values. '
    content.vb: Public Shared Operator /(p As RobotJointPosition, num As Double) As RobotJointPosition
  overload: RobotComponents.Actions.RobotJointPosition.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: RobotComponents.Actions.RobotJointPosition.op_Addition(RobotComponents.Actions.RobotJointPosition,RobotComponents.Actions.RobotJointPosition)
  commentId: M:RobotComponents.Actions.RobotJointPosition.op_Addition(RobotComponents.Actions.RobotJointPosition,RobotComponents.Actions.RobotJointPosition)
  id: op_Addition(RobotComponents.Actions.RobotJointPosition,RobotComponents.Actions.RobotJointPosition)
  parent: RobotComponents.Actions.RobotJointPosition
  langs:
  - csharp
  - vb
  name: Addition(RobotJointPosition, RobotJointPosition)
  nameWithType: RobotJointPosition.Addition(RobotJointPosition, RobotJointPosition)
  fullName: RobotComponents.Actions.RobotJointPosition.Addition(RobotComponents.Actions.RobotJointPosition, RobotComponents.Actions.RobotJointPosition)
  type: Operator
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Actions
  summary: "\nAdds a Robot Joint Position to an other Robot Joint Position.\n"
  syntax:
    content: public static RobotJointPosition operator +(RobotJointPosition p1, RobotJointPosition p2)
    parameters:
    - id: p1
      type: RobotComponents.Actions.RobotJointPosition
      description: 'The first Robot Joint Position. '
    - id: p2
      type: RobotComponents.Actions.RobotJointPosition
      description: 'The second Robot Joint Position. '
    return:
      type: RobotComponents.Actions.RobotJointPosition
      description: The addition of the two Robot Joint Poistion
    content.vb: Public Shared Operator +(p1 As RobotJointPosition, p2 As RobotJointPosition) As RobotJointPosition
  overload: RobotComponents.Actions.RobotJointPosition.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: RobotComponents.Actions.RobotJointPosition.op_Subtraction(RobotComponents.Actions.RobotJointPosition,RobotComponents.Actions.RobotJointPosition)
  commentId: M:RobotComponents.Actions.RobotJointPosition.op_Subtraction(RobotComponents.Actions.RobotJointPosition,RobotComponents.Actions.RobotJointPosition)
  id: op_Subtraction(RobotComponents.Actions.RobotJointPosition,RobotComponents.Actions.RobotJointPosition)
  parent: RobotComponents.Actions.RobotJointPosition
  langs:
  - csharp
  - vb
  name: Subtraction(RobotJointPosition, RobotJointPosition)
  nameWithType: RobotJointPosition.Subtraction(RobotJointPosition, RobotJointPosition)
  fullName: RobotComponents.Actions.RobotJointPosition.Subtraction(RobotComponents.Actions.RobotJointPosition, RobotComponents.Actions.RobotJointPosition)
  type: Operator
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Actions
  summary: "\nSubstracts a Robot Joint Position from an other Robot Joint Position.\n"
  syntax:
    content: public static RobotJointPosition operator -(RobotJointPosition p1, RobotJointPosition p2)
    parameters:
    - id: p1
      type: RobotComponents.Actions.RobotJointPosition
      description: 'The first Robot Joint Position. '
    - id: p2
      type: RobotComponents.Actions.RobotJointPosition
      description: 'The second Robot Joint Position. '
    return:
      type: RobotComponents.Actions.RobotJointPosition
      description: 'The first robot Joint Position minus the second Robot Joint Position. '
    content.vb: Public Shared Operator -(p1 As RobotJointPosition, p2 As RobotJointPosition) As RobotJointPosition
  overload: RobotComponents.Actions.RobotJointPosition.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: RobotComponents.Actions.RobotJointPosition.op_Multiply(RobotComponents.Actions.RobotJointPosition,RobotComponents.Actions.RobotJointPosition)
  commentId: M:RobotComponents.Actions.RobotJointPosition.op_Multiply(RobotComponents.Actions.RobotJointPosition,RobotComponents.Actions.RobotJointPosition)
  id: op_Multiply(RobotComponents.Actions.RobotJointPosition,RobotComponents.Actions.RobotJointPosition)
  parent: RobotComponents.Actions.RobotJointPosition
  langs:
  - csharp
  - vb
  name: Multiply(RobotJointPosition, RobotJointPosition)
  nameWithType: RobotJointPosition.Multiply(RobotJointPosition, RobotJointPosition)
  fullName: RobotComponents.Actions.RobotJointPosition.Multiply(RobotComponents.Actions.RobotJointPosition, RobotComponents.Actions.RobotJointPosition)
  type: Operator
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Actions
  summary: "\nMultiplies a Robot Joint Position woth an other Robot Joint Position.\n"
  syntax:
    content: public static RobotJointPosition operator *(RobotJointPosition p1, RobotJointPosition p2)
    parameters:
    - id: p1
      type: RobotComponents.Actions.RobotJointPosition
      description: 'The first Robot Joint Position. '
    - id: p2
      type: RobotComponents.Actions.RobotJointPosition
      description: 'The second Robot Joint Position. '
    return:
      type: RobotComponents.Actions.RobotJointPosition
      description: 'The multiplicaton of the two Robot Joint Positions. '
    content.vb: Public Shared Operator *(p1 As RobotJointPosition, p2 As RobotJointPosition) As RobotJointPosition
  overload: RobotComponents.Actions.RobotJointPosition.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: RobotComponents.Actions.RobotJointPosition.op_Division(RobotComponents.Actions.RobotJointPosition,RobotComponents.Actions.RobotJointPosition)
  commentId: M:RobotComponents.Actions.RobotJointPosition.op_Division(RobotComponents.Actions.RobotJointPosition,RobotComponents.Actions.RobotJointPosition)
  id: op_Division(RobotComponents.Actions.RobotJointPosition,RobotComponents.Actions.RobotJointPosition)
  parent: RobotComponents.Actions.RobotJointPosition
  langs:
  - csharp
  - vb
  name: Division(RobotJointPosition, RobotJointPosition)
  nameWithType: RobotJointPosition.Division(RobotJointPosition, RobotJointPosition)
  fullName: RobotComponents.Actions.RobotJointPosition.Division(RobotComponents.Actions.RobotJointPosition, RobotComponents.Actions.RobotJointPosition)
  type: Operator
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Actions
  summary: "\nDivides a Robot Joint Position with an other Robot Joint Position.\n"
  syntax:
    content: public static RobotJointPosition operator /(RobotJointPosition p1, RobotJointPosition p2)
    parameters:
    - id: p1
      type: RobotComponents.Actions.RobotJointPosition
      description: 'The first Robot Joint Position. '
    - id: p2
      type: RobotComponents.Actions.RobotJointPosition
      description: 'The second Robot Joint Position. '
    return:
      type: RobotComponents.Actions.RobotJointPosition
      description: 'The first Robot Joint Position divided by the second Robot Joint Position. '
    content.vb: Public Shared Operator /(p1 As RobotJointPosition, p2 As RobotJointPosition) As RobotJointPosition
  overload: RobotComponents.Actions.RobotJointPosition.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: RobotComponents.Actions.RobotJointPosition.IsValid
  commentId: P:RobotComponents.Actions.RobotJointPosition.IsValid
  id: IsValid
  parent: RobotComponents.Actions.RobotJointPosition
  langs:
  - csharp
  - vb
  name: IsValid
  nameWithType: RobotJointPosition.IsValid
  fullName: RobotComponents.Actions.RobotJointPosition.IsValid
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Actions
  summary: "\nGets a value indicating whether or not the object is valid.\n"
  syntax:
    content: public override bool IsValid { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property IsValid As Boolean
  overridden: RobotComponents.Actions.Action.IsValid
  overload: RobotComponents.Actions.RobotJointPosition.IsValid*
  implements:
  - RobotComponents.Actions.IDeclaration.IsValid
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: RobotComponents.Actions.RobotJointPosition.Name
  commentId: P:RobotComponents.Actions.RobotJointPosition.Name
  id: Name
  parent: RobotComponents.Actions.RobotJointPosition
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: RobotJointPosition.Name
  fullName: RobotComponents.Actions.RobotJointPosition.Name
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Actions
  summary: "\nGets or sets the Robot Joint Position variable name.\nEach Robot Joint Position variable name has to be unique.\n"
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: RobotComponents.Actions.RobotJointPosition.Name*
  implements:
  - RobotComponents.Actions.IDeclaration.Name
  - RobotComponents.Actions.IJointPosition.Name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: RobotComponents.Actions.RobotJointPosition.ReferenceType
  commentId: P:RobotComponents.Actions.RobotJointPosition.ReferenceType
  id: ReferenceType
  parent: RobotComponents.Actions.RobotJointPosition
  langs:
  - csharp
  - vb
  name: ReferenceType
  nameWithType: RobotJointPosition.ReferenceType
  fullName: RobotComponents.Actions.RobotJointPosition.ReferenceType
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Actions
  summary: "\nGets or sets the Reference Type. \n"
  syntax:
    content: public ReferenceType ReferenceType { get; set; }
    parameters: []
    return:
      type: RobotComponents.Enumerations.ReferenceType
    content.vb: Public Property ReferenceType As ReferenceType
  overload: RobotComponents.Actions.RobotJointPosition.ReferenceType*
  implements:
  - RobotComponents.Actions.IDeclaration.ReferenceType
  - RobotComponents.Actions.IJointPosition.ReferenceType
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: RobotComponents.Actions.RobotJointPosition.Length
  commentId: P:RobotComponents.Actions.RobotJointPosition.Length
  id: Length
  parent: RobotComponents.Actions.RobotJointPosition
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: RobotJointPosition.Length
  fullName: RobotComponents.Actions.RobotJointPosition.Length
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Actions
  summary: "\nGets the number of elements in the Robot Joint Position.\n"
  syntax:
    content: public int Length { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Length As Integer
  overload: RobotComponents.Actions.RobotJointPosition.Length*
  implements:
  - RobotComponents.Actions.IJointPosition.Length
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: RobotComponents.Actions.RobotJointPosition.Item(System.Int32)
  commentId: P:RobotComponents.Actions.RobotJointPosition.Item(System.Int32)
  id: Item(System.Int32)
  parent: RobotComponents.Actions.RobotJointPosition
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: RobotJointPosition.Item[Int32]
  fullName: RobotComponents.Actions.RobotJointPosition.Item[System.Int32]
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Actions
  summary: "\nGets or sets the axis values through the indexer. \n"
  syntax:
    content: public double this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: 'The index number. '
    return:
      type: System.Double
      description: 'The axis value located at the given index. '
    content.vb: Public Property Item(index As Integer) As Double
  overload: RobotComponents.Actions.RobotJointPosition.Item*
  implements:
  - RobotComponents.Actions.IJointPosition.Item(System.Int32)
  nameWithType.vb: RobotJointPosition.Item(Int32)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: RobotComponents.Actions.RobotJointPosition.Item(System.Int32)
  name.vb: Item(Int32)
- uid: RobotComponents.Actions.RobotJointPosition.IsFixedSize
  commentId: P:RobotComponents.Actions.RobotJointPosition.IsFixedSize
  id: IsFixedSize
  parent: RobotComponents.Actions.RobotJointPosition
  langs:
  - csharp
  - vb
  name: IsFixedSize
  nameWithType: RobotJointPosition.IsFixedSize
  fullName: RobotComponents.Actions.RobotJointPosition.IsFixedSize
  type: Property
  source:
    path: RobotComponents
    isExternal: true
  assemblies:
  - RobotComponents
  namespace: RobotComponents.Actions
  summary: "\nGets a value indicating whether or not the joint position array has a fixed size.\n"
  syntax:
    content: public bool IsFixedSize { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsFixedSize As Boolean
  overload: RobotComponents.Actions.RobotJointPosition.IsFixedSize*
  implements:
  - RobotComponents.Actions.IJointPosition.IsFixedSize
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: RobotComponents.Actions
  commentId: N:RobotComponents.Actions
  isExternal: true
  name: RobotComponents.Actions
  nameWithType: RobotComponents.Actions
  fullName: RobotComponents.Actions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: RobotComponents.Actions.Action
  commentId: T:RobotComponents.Actions.Action
  parent: RobotComponents.Actions
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: RobotComponents.Actions.Action
- uid: RobotComponents.Actions.IDeclaration
  commentId: T:RobotComponents.Actions.IDeclaration
  parent: RobotComponents.Actions
  isExternal: true
  name: IDeclaration
  nameWithType: IDeclaration
  fullName: RobotComponents.Actions.IDeclaration
- uid: RobotComponents.Actions.IJointPosition
  commentId: T:RobotComponents.Actions.IJointPosition
  parent: RobotComponents.Actions
  isExternal: true
  name: IJointPosition
  nameWithType: IJointPosition
  fullName: RobotComponents.Actions.IJointPosition
- uid: System.Runtime.Serialization.ISerializable
  commentId: T:System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: true
  name: ISerializable
  nameWithType: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: true
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: RobotComponents.Actions.RobotJointPosition.#ctor*
  commentId: Overload:RobotComponents.Actions.RobotJointPosition.#ctor
  isExternal: true
  name: RobotJointPosition
  nameWithType: RobotJointPosition.RobotJointPosition
  fullName: RobotComponents.Actions.RobotJointPosition.RobotJointPosition
- uid: System.Runtime.Serialization.SerializationInfo
  commentId: T:System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: true
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  commentId: T:System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: RobotComponents.Actions.RobotJointPosition.GetObjectData*
  commentId: Overload:RobotComponents.Actions.RobotJointPosition.GetObjectData
  isExternal: true
  name: GetObjectData
  nameWithType: RobotJointPosition.GetObjectData
  fullName: RobotComponents.Actions.RobotJointPosition.GetObjectData
- uid: System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.Serialization.ISerializable
  isExternal: true
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: ISerializable.GetObjectData(SerializationInfo, StreamingContext)
  fullName: System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: ISerializable.GetObjectData
    fullName: System.Runtime.Serialization.ISerializable.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: ISerializable.GetObjectData
    fullName: System.Runtime.Serialization.ISerializable.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Collections.Generic.IList{System.Double}
  commentId: T:System.Collections.Generic.IList{System.Double}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Double>
  nameWithType: IList<Double>
  fullName: System.Collections.Generic.IList<System.Double>
  nameWithType.vb: IList(Of Double)
  fullName.vb: System.Collections.Generic.IList(Of System.Double)
  name.vb: IList(Of Double)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: RobotComponents.Actions.RobotJointPosition
  commentId: T:RobotComponents.Actions.RobotJointPosition
  parent: RobotComponents.Actions
  isExternal: true
  name: RobotJointPosition
  nameWithType: RobotJointPosition
  fullName: RobotComponents.Actions.RobotJointPosition
- uid: RobotComponents.Actions.RobotJointPosition.Duplicate*
  commentId: Overload:RobotComponents.Actions.RobotJointPosition.Duplicate
  isExternal: true
  name: Duplicate
  nameWithType: RobotJointPosition.Duplicate
  fullName: RobotComponents.Actions.RobotJointPosition.Duplicate
- uid: RobotComponents.Actions.Action.DuplicateAction
  commentId: M:RobotComponents.Actions.Action.DuplicateAction
  parent: RobotComponents.Actions.Action
  isExternal: true
  name: DuplicateAction()
  nameWithType: Action.DuplicateAction()
  fullName: RobotComponents.Actions.Action.DuplicateAction()
  spec.csharp:
  - uid: RobotComponents.Actions.Action.DuplicateAction
    name: DuplicateAction
    nameWithType: Action.DuplicateAction
    fullName: RobotComponents.Actions.Action.DuplicateAction
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RobotComponents.Actions.Action.DuplicateAction
    name: DuplicateAction
    nameWithType: Action.DuplicateAction
    fullName: RobotComponents.Actions.Action.DuplicateAction
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: RobotComponents.Actions.RobotJointPosition.DuplicateAction*
  commentId: Overload:RobotComponents.Actions.RobotJointPosition.DuplicateAction
  isExternal: true
  name: DuplicateAction
  nameWithType: RobotJointPosition.DuplicateAction
  fullName: RobotComponents.Actions.RobotJointPosition.DuplicateAction
- uid: RobotComponents.Actions.RobotJointPosition.DuplicateDeclaration*
  commentId: Overload:RobotComponents.Actions.RobotJointPosition.DuplicateDeclaration
  isExternal: true
  name: DuplicateDeclaration
  nameWithType: RobotJointPosition.DuplicateDeclaration
  fullName: RobotComponents.Actions.RobotJointPosition.DuplicateDeclaration
- uid: RobotComponents.Actions.IDeclaration.DuplicateDeclaration
  commentId: M:RobotComponents.Actions.IDeclaration.DuplicateDeclaration
  parent: RobotComponents.Actions.IDeclaration
  isExternal: true
  name: DuplicateDeclaration()
  nameWithType: IDeclaration.DuplicateDeclaration()
  fullName: RobotComponents.Actions.IDeclaration.DuplicateDeclaration()
  spec.csharp:
  - uid: RobotComponents.Actions.IDeclaration.DuplicateDeclaration
    name: DuplicateDeclaration
    nameWithType: IDeclaration.DuplicateDeclaration
    fullName: RobotComponents.Actions.IDeclaration.DuplicateDeclaration
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RobotComponents.Actions.IDeclaration.DuplicateDeclaration
    name: DuplicateDeclaration
    nameWithType: IDeclaration.DuplicateDeclaration
    fullName: RobotComponents.Actions.IDeclaration.DuplicateDeclaration
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: RobotComponents.Actions.Action.ToString
  commentId: M:RobotComponents.Actions.Action.ToString
  parent: RobotComponents.Actions.Action
  isExternal: true
  name: ToString()
  nameWithType: Action.ToString()
  fullName: RobotComponents.Actions.Action.ToString()
  spec.csharp:
  - uid: RobotComponents.Actions.Action.ToString
    name: ToString
    nameWithType: Action.ToString
    fullName: RobotComponents.Actions.Action.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RobotComponents.Actions.Action.ToString
    name: ToString
    nameWithType: Action.ToString
    fullName: RobotComponents.Actions.Action.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: RobotComponents.Actions.RobotJointPosition.ToString*
  commentId: Overload:RobotComponents.Actions.RobotJointPosition.ToString
  isExternal: true
  name: ToString
  nameWithType: RobotJointPosition.ToString
  fullName: RobotComponents.Actions.RobotJointPosition.ToString
- uid: RobotComponents.Actions.RobotJointPosition.ToArray*
  commentId: Overload:RobotComponents.Actions.RobotJointPosition.ToArray
  isExternal: true
  name: ToArray
  nameWithType: RobotJointPosition.ToArray
  fullName: RobotComponents.Actions.RobotJointPosition.ToArray
- uid: RobotComponents.Actions.IJointPosition.ToArray
  commentId: M:RobotComponents.Actions.IJointPosition.ToArray
  parent: RobotComponents.Actions.IJointPosition
  isExternal: true
  name: ToArray()
  nameWithType: IJointPosition.ToArray()
  fullName: RobotComponents.Actions.IJointPosition.ToArray()
  spec.csharp:
  - uid: RobotComponents.Actions.IJointPosition.ToArray
    name: ToArray
    nameWithType: IJointPosition.ToArray
    fullName: RobotComponents.Actions.IJointPosition.ToArray
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RobotComponents.Actions.IJointPosition.ToArray
    name: ToArray
    nameWithType: IJointPosition.ToArray
    fullName: RobotComponents.Actions.IJointPosition.ToArray
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Double[]
  isExternal: true
  name: Double[]
  nameWithType: Double[]
  fullName: System.Double[]
  nameWithType.vb: Double()
  fullName.vb: System.Double()
  name.vb: Double()
  spec.csharp:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: RobotComponents.Actions.RobotJointPosition.ToList*
  commentId: Overload:RobotComponents.Actions.RobotJointPosition.ToList
  isExternal: true
  name: ToList
  nameWithType: RobotJointPosition.ToList
  fullName: RobotComponents.Actions.RobotJointPosition.ToList
- uid: RobotComponents.Actions.IJointPosition.ToList
  commentId: M:RobotComponents.Actions.IJointPosition.ToList
  parent: RobotComponents.Actions.IJointPosition
  isExternal: true
  name: ToList()
  nameWithType: IJointPosition.ToList()
  fullName: RobotComponents.Actions.IJointPosition.ToList()
  spec.csharp:
  - uid: RobotComponents.Actions.IJointPosition.ToList
    name: ToList
    nameWithType: IJointPosition.ToList
    fullName: RobotComponents.Actions.IJointPosition.ToList
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RobotComponents.Actions.IJointPosition.ToList
    name: ToList
    nameWithType: IJointPosition.ToList
    fullName: RobotComponents.Actions.IJointPosition.ToList
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{System.Double}
  commentId: T:System.Collections.Generic.List{System.Double}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Double>
  nameWithType: List<Double>
  fullName: System.Collections.Generic.List<System.Double>
  nameWithType.vb: List(Of Double)
  fullName.vb: System.Collections.Generic.List(Of System.Double)
  name.vb: List(Of Double)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: RobotComponents.Actions.RobotJointPosition.Sum*
  commentId: Overload:RobotComponents.Actions.RobotJointPosition.Sum
  isExternal: true
  name: Sum
  nameWithType: RobotJointPosition.Sum
  fullName: RobotComponents.Actions.RobotJointPosition.Sum
- uid: RobotComponents.Actions.RobotJointPosition.Norm*
  commentId: Overload:RobotComponents.Actions.RobotJointPosition.Norm
  isExternal: true
  name: Norm
  nameWithType: RobotJointPosition.Norm
  fullName: RobotComponents.Actions.RobotJointPosition.Norm
- uid: RobotComponents.Actions.RobotJointPosition.NormSq*
  commentId: Overload:RobotComponents.Actions.RobotJointPosition.NormSq
  isExternal: true
  name: NormSq
  nameWithType: RobotJointPosition.NormSq
  fullName: RobotComponents.Actions.RobotJointPosition.NormSq
- uid: RobotComponents.Actions.RobotJointPosition.Reset*
  commentId: Overload:RobotComponents.Actions.RobotJointPosition.Reset
  isExternal: true
  name: Reset
  nameWithType: RobotJointPosition.Reset
  fullName: RobotComponents.Actions.RobotJointPosition.Reset
- uid: RobotComponents.Actions.IJointPosition.Reset
  commentId: M:RobotComponents.Actions.IJointPosition.Reset
  parent: RobotComponents.Actions.IJointPosition
  isExternal: true
  name: Reset()
  nameWithType: IJointPosition.Reset()
  fullName: RobotComponents.Actions.IJointPosition.Reset()
  spec.csharp:
  - uid: RobotComponents.Actions.IJointPosition.Reset
    name: Reset
    nameWithType: IJointPosition.Reset
    fullName: RobotComponents.Actions.IJointPosition.Reset
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RobotComponents.Actions.IJointPosition.Reset
    name: Reset
    nameWithType: IJointPosition.Reset
    fullName: RobotComponents.Actions.IJointPosition.Reset
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: RobotComponents.Actions.RobotJointPosition.Add*
  commentId: Overload:RobotComponents.Actions.RobotJointPosition.Add
  isExternal: true
  name: Add
  nameWithType: RobotJointPosition.Add
  fullName: RobotComponents.Actions.RobotJointPosition.Add
- uid: RobotComponents.Actions.RobotJointPosition.Substract*
  commentId: Overload:RobotComponents.Actions.RobotJointPosition.Substract
  isExternal: true
  name: Substract
  nameWithType: RobotJointPosition.Substract
  fullName: RobotComponents.Actions.RobotJointPosition.Substract
- uid: RobotComponents.Actions.RobotJointPosition.Multiply*
  commentId: Overload:RobotComponents.Actions.RobotJointPosition.Multiply
  isExternal: true
  name: Multiply
  nameWithType: RobotJointPosition.Multiply
  fullName: RobotComponents.Actions.RobotJointPosition.Multiply
- uid: RobotComponents.Actions.RobotJointPosition.Divide*
  commentId: Overload:RobotComponents.Actions.RobotJointPosition.Divide
  isExternal: true
  name: Divide
  nameWithType: RobotJointPosition.Divide
  fullName: RobotComponents.Actions.RobotJointPosition.Divide
- uid: RobotComponents.Actions.RobotJointPosition.ToRAPID*
  commentId: Overload:RobotComponents.Actions.RobotJointPosition.ToRAPID
  isExternal: true
  name: ToRAPID
  nameWithType: RobotJointPosition.ToRAPID
  fullName: RobotComponents.Actions.RobotJointPosition.ToRAPID
- uid: RobotComponents.Actions.IJointPosition.ToRAPID
  commentId: M:RobotComponents.Actions.IJointPosition.ToRAPID
  parent: RobotComponents.Actions.IJointPosition
  isExternal: true
  name: ToRAPID()
  nameWithType: IJointPosition.ToRAPID()
  fullName: RobotComponents.Actions.IJointPosition.ToRAPID()
  spec.csharp:
  - uid: RobotComponents.Actions.IJointPosition.ToRAPID
    name: ToRAPID
    nameWithType: IJointPosition.ToRAPID
    fullName: RobotComponents.Actions.IJointPosition.ToRAPID
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RobotComponents.Actions.IJointPosition.ToRAPID
    name: ToRAPID
    nameWithType: IJointPosition.ToRAPID
    fullName: RobotComponents.Actions.IJointPosition.ToRAPID
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: RobotComponents.Actions.Action.ToRAPIDDeclaration(RobotComponents.Definitions.Robot)
  commentId: M:RobotComponents.Actions.Action.ToRAPIDDeclaration(RobotComponents.Definitions.Robot)
  parent: RobotComponents.Actions.Action
  isExternal: true
  name: ToRAPIDDeclaration(Robot)
  nameWithType: Action.ToRAPIDDeclaration(Robot)
  fullName: RobotComponents.Actions.Action.ToRAPIDDeclaration(RobotComponents.Definitions.Robot)
  spec.csharp:
  - uid: RobotComponents.Actions.Action.ToRAPIDDeclaration(RobotComponents.Definitions.Robot)
    name: ToRAPIDDeclaration
    nameWithType: Action.ToRAPIDDeclaration
    fullName: RobotComponents.Actions.Action.ToRAPIDDeclaration
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: RobotComponents.Definitions.Robot
    name: Robot
    nameWithType: Robot
    fullName: RobotComponents.Definitions.Robot
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RobotComponents.Actions.Action.ToRAPIDDeclaration(RobotComponents.Definitions.Robot)
    name: ToRAPIDDeclaration
    nameWithType: Action.ToRAPIDDeclaration
    fullName: RobotComponents.Actions.Action.ToRAPIDDeclaration
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: RobotComponents.Definitions.Robot
    name: Robot
    nameWithType: Robot
    fullName: RobotComponents.Definitions.Robot
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RobotComponents.Actions.RobotJointPosition.ToRAPIDDeclaration*
  commentId: Overload:RobotComponents.Actions.RobotJointPosition.ToRAPIDDeclaration
  isExternal: true
  name: ToRAPIDDeclaration
  nameWithType: RobotJointPosition.ToRAPIDDeclaration
  fullName: RobotComponents.Actions.RobotJointPosition.ToRAPIDDeclaration
- uid: RobotComponents.Actions.IDeclaration.ToRAPIDDeclaration(RobotComponents.Definitions.Robot)
  commentId: M:RobotComponents.Actions.IDeclaration.ToRAPIDDeclaration(RobotComponents.Definitions.Robot)
  parent: RobotComponents.Actions.IDeclaration
  isExternal: true
  name: ToRAPIDDeclaration(Robot)
  nameWithType: IDeclaration.ToRAPIDDeclaration(Robot)
  fullName: RobotComponents.Actions.IDeclaration.ToRAPIDDeclaration(RobotComponents.Definitions.Robot)
  spec.csharp:
  - uid: RobotComponents.Actions.IDeclaration.ToRAPIDDeclaration(RobotComponents.Definitions.Robot)
    name: ToRAPIDDeclaration
    nameWithType: IDeclaration.ToRAPIDDeclaration
    fullName: RobotComponents.Actions.IDeclaration.ToRAPIDDeclaration
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: RobotComponents.Definitions.Robot
    name: Robot
    nameWithType: Robot
    fullName: RobotComponents.Definitions.Robot
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RobotComponents.Actions.IDeclaration.ToRAPIDDeclaration(RobotComponents.Definitions.Robot)
    name: ToRAPIDDeclaration
    nameWithType: IDeclaration.ToRAPIDDeclaration
    fullName: RobotComponents.Actions.IDeclaration.ToRAPIDDeclaration
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: RobotComponents.Definitions.Robot
    name: Robot
    nameWithType: Robot
    fullName: RobotComponents.Definitions.Robot
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RobotComponents.Actions.IJointPosition.ToRAPIDDeclaration(RobotComponents.Definitions.Robot)
  commentId: M:RobotComponents.Actions.IJointPosition.ToRAPIDDeclaration(RobotComponents.Definitions.Robot)
  parent: RobotComponents.Actions.IJointPosition
  isExternal: true
  name: ToRAPIDDeclaration(Robot)
  nameWithType: IJointPosition.ToRAPIDDeclaration(Robot)
  fullName: RobotComponents.Actions.IJointPosition.ToRAPIDDeclaration(RobotComponents.Definitions.Robot)
  spec.csharp:
  - uid: RobotComponents.Actions.IJointPosition.ToRAPIDDeclaration(RobotComponents.Definitions.Robot)
    name: ToRAPIDDeclaration
    nameWithType: IJointPosition.ToRAPIDDeclaration
    fullName: RobotComponents.Actions.IJointPosition.ToRAPIDDeclaration
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: RobotComponents.Definitions.Robot
    name: Robot
    nameWithType: Robot
    fullName: RobotComponents.Definitions.Robot
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RobotComponents.Actions.IJointPosition.ToRAPIDDeclaration(RobotComponents.Definitions.Robot)
    name: ToRAPIDDeclaration
    nameWithType: IJointPosition.ToRAPIDDeclaration
    fullName: RobotComponents.Actions.IJointPosition.ToRAPIDDeclaration
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: RobotComponents.Definitions.Robot
    name: Robot
    nameWithType: Robot
    fullName: RobotComponents.Definitions.Robot
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RobotComponents.Definitions.Robot
  commentId: T:RobotComponents.Definitions.Robot
  parent: RobotComponents.Definitions
  isExternal: true
  name: Robot
  nameWithType: Robot
  fullName: RobotComponents.Definitions.Robot
- uid: RobotComponents.Definitions
  commentId: N:RobotComponents.Definitions
  isExternal: true
  name: RobotComponents.Definitions
  nameWithType: RobotComponents.Definitions
  fullName: RobotComponents.Definitions
- uid: RobotComponents.Actions.Action.ToRAPIDInstruction(RobotComponents.Definitions.Robot)
  commentId: M:RobotComponents.Actions.Action.ToRAPIDInstruction(RobotComponents.Definitions.Robot)
  parent: RobotComponents.Actions.Action
  isExternal: true
  name: ToRAPIDInstruction(Robot)
  nameWithType: Action.ToRAPIDInstruction(Robot)
  fullName: RobotComponents.Actions.Action.ToRAPIDInstruction(RobotComponents.Definitions.Robot)
  spec.csharp:
  - uid: RobotComponents.Actions.Action.ToRAPIDInstruction(RobotComponents.Definitions.Robot)
    name: ToRAPIDInstruction
    nameWithType: Action.ToRAPIDInstruction
    fullName: RobotComponents.Actions.Action.ToRAPIDInstruction
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: RobotComponents.Definitions.Robot
    name: Robot
    nameWithType: Robot
    fullName: RobotComponents.Definitions.Robot
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RobotComponents.Actions.Action.ToRAPIDInstruction(RobotComponents.Definitions.Robot)
    name: ToRAPIDInstruction
    nameWithType: Action.ToRAPIDInstruction
    fullName: RobotComponents.Actions.Action.ToRAPIDInstruction
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: RobotComponents.Definitions.Robot
    name: Robot
    nameWithType: Robot
    fullName: RobotComponents.Definitions.Robot
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RobotComponents.Actions.RobotJointPosition.ToRAPIDInstruction*
  commentId: Overload:RobotComponents.Actions.RobotJointPosition.ToRAPIDInstruction
  isExternal: true
  name: ToRAPIDInstruction
  nameWithType: RobotJointPosition.ToRAPIDInstruction
  fullName: RobotComponents.Actions.RobotJointPosition.ToRAPIDInstruction
- uid: RobotComponents.Actions.Action.ToRAPIDDeclaration(RobotComponents.Actions.RAPIDGenerator)
  commentId: M:RobotComponents.Actions.Action.ToRAPIDDeclaration(RobotComponents.Actions.RAPIDGenerator)
  parent: RobotComponents.Actions.Action
  isExternal: true
  name: ToRAPIDDeclaration(RAPIDGenerator)
  nameWithType: Action.ToRAPIDDeclaration(RAPIDGenerator)
  fullName: RobotComponents.Actions.Action.ToRAPIDDeclaration(RobotComponents.Actions.RAPIDGenerator)
  spec.csharp:
  - uid: RobotComponents.Actions.Action.ToRAPIDDeclaration(RobotComponents.Actions.RAPIDGenerator)
    name: ToRAPIDDeclaration
    nameWithType: Action.ToRAPIDDeclaration
    fullName: RobotComponents.Actions.Action.ToRAPIDDeclaration
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: RobotComponents.Actions.RAPIDGenerator
    name: RAPIDGenerator
    nameWithType: RAPIDGenerator
    fullName: RobotComponents.Actions.RAPIDGenerator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RobotComponents.Actions.Action.ToRAPIDDeclaration(RobotComponents.Actions.RAPIDGenerator)
    name: ToRAPIDDeclaration
    nameWithType: Action.ToRAPIDDeclaration
    fullName: RobotComponents.Actions.Action.ToRAPIDDeclaration
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: RobotComponents.Actions.RAPIDGenerator
    name: RAPIDGenerator
    nameWithType: RAPIDGenerator
    fullName: RobotComponents.Actions.RAPIDGenerator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RobotComponents.Actions.IDeclaration.ToRAPIDDeclaration(RobotComponents.Actions.RAPIDGenerator)
  commentId: M:RobotComponents.Actions.IDeclaration.ToRAPIDDeclaration(RobotComponents.Actions.RAPIDGenerator)
  parent: RobotComponents.Actions.IDeclaration
  isExternal: true
  name: ToRAPIDDeclaration(RAPIDGenerator)
  nameWithType: IDeclaration.ToRAPIDDeclaration(RAPIDGenerator)
  fullName: RobotComponents.Actions.IDeclaration.ToRAPIDDeclaration(RobotComponents.Actions.RAPIDGenerator)
  spec.csharp:
  - uid: RobotComponents.Actions.IDeclaration.ToRAPIDDeclaration(RobotComponents.Actions.RAPIDGenerator)
    name: ToRAPIDDeclaration
    nameWithType: IDeclaration.ToRAPIDDeclaration
    fullName: RobotComponents.Actions.IDeclaration.ToRAPIDDeclaration
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: RobotComponents.Actions.RAPIDGenerator
    name: RAPIDGenerator
    nameWithType: RAPIDGenerator
    fullName: RobotComponents.Actions.RAPIDGenerator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RobotComponents.Actions.IDeclaration.ToRAPIDDeclaration(RobotComponents.Actions.RAPIDGenerator)
    name: ToRAPIDDeclaration
    nameWithType: IDeclaration.ToRAPIDDeclaration
    fullName: RobotComponents.Actions.IDeclaration.ToRAPIDDeclaration
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: RobotComponents.Actions.RAPIDGenerator
    name: RAPIDGenerator
    nameWithType: RAPIDGenerator
    fullName: RobotComponents.Actions.RAPIDGenerator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RobotComponents.Actions.IJointPosition.ToRAPIDDeclaration(RobotComponents.Actions.RAPIDGenerator)
  commentId: M:RobotComponents.Actions.IJointPosition.ToRAPIDDeclaration(RobotComponents.Actions.RAPIDGenerator)
  parent: RobotComponents.Actions.IJointPosition
  isExternal: true
  name: ToRAPIDDeclaration(RAPIDGenerator)
  nameWithType: IJointPosition.ToRAPIDDeclaration(RAPIDGenerator)
  fullName: RobotComponents.Actions.IJointPosition.ToRAPIDDeclaration(RobotComponents.Actions.RAPIDGenerator)
  spec.csharp:
  - uid: RobotComponents.Actions.IJointPosition.ToRAPIDDeclaration(RobotComponents.Actions.RAPIDGenerator)
    name: ToRAPIDDeclaration
    nameWithType: IJointPosition.ToRAPIDDeclaration
    fullName: RobotComponents.Actions.IJointPosition.ToRAPIDDeclaration
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: RobotComponents.Actions.RAPIDGenerator
    name: RAPIDGenerator
    nameWithType: RAPIDGenerator
    fullName: RobotComponents.Actions.RAPIDGenerator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RobotComponents.Actions.IJointPosition.ToRAPIDDeclaration(RobotComponents.Actions.RAPIDGenerator)
    name: ToRAPIDDeclaration
    nameWithType: IJointPosition.ToRAPIDDeclaration
    fullName: RobotComponents.Actions.IJointPosition.ToRAPIDDeclaration
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: RobotComponents.Actions.RAPIDGenerator
    name: RAPIDGenerator
    nameWithType: RAPIDGenerator
    fullName: RobotComponents.Actions.RAPIDGenerator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RobotComponents.Actions.RAPIDGenerator
  commentId: T:RobotComponents.Actions.RAPIDGenerator
  parent: RobotComponents.Actions
  isExternal: true
  name: RAPIDGenerator
  nameWithType: RAPIDGenerator
  fullName: RobotComponents.Actions.RAPIDGenerator
- uid: RobotComponents.Actions.Action.ToRAPIDInstruction(RobotComponents.Actions.RAPIDGenerator)
  commentId: M:RobotComponents.Actions.Action.ToRAPIDInstruction(RobotComponents.Actions.RAPIDGenerator)
  parent: RobotComponents.Actions.Action
  isExternal: true
  name: ToRAPIDInstruction(RAPIDGenerator)
  nameWithType: Action.ToRAPIDInstruction(RAPIDGenerator)
  fullName: RobotComponents.Actions.Action.ToRAPIDInstruction(RobotComponents.Actions.RAPIDGenerator)
  spec.csharp:
  - uid: RobotComponents.Actions.Action.ToRAPIDInstruction(RobotComponents.Actions.RAPIDGenerator)
    name: ToRAPIDInstruction
    nameWithType: Action.ToRAPIDInstruction
    fullName: RobotComponents.Actions.Action.ToRAPIDInstruction
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: RobotComponents.Actions.RAPIDGenerator
    name: RAPIDGenerator
    nameWithType: RAPIDGenerator
    fullName: RobotComponents.Actions.RAPIDGenerator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RobotComponents.Actions.Action.ToRAPIDInstruction(RobotComponents.Actions.RAPIDGenerator)
    name: ToRAPIDInstruction
    nameWithType: Action.ToRAPIDInstruction
    fullName: RobotComponents.Actions.Action.ToRAPIDInstruction
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: RobotComponents.Actions.RAPIDGenerator
    name: RAPIDGenerator
    nameWithType: RAPIDGenerator
    fullName: RobotComponents.Actions.RAPIDGenerator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RobotComponents.Actions.RobotJointPosition.op_Addition*
  commentId: Overload:RobotComponents.Actions.RobotJointPosition.op_Addition
  isExternal: true
  name: Addition
  nameWithType: RobotJointPosition.Addition
  fullName: RobotComponents.Actions.RobotJointPosition.Addition
- uid: RobotComponents.Actions.RobotJointPosition.op_Subtraction*
  commentId: Overload:RobotComponents.Actions.RobotJointPosition.op_Subtraction
  isExternal: true
  name: Subtraction
  nameWithType: RobotJointPosition.Subtraction
  fullName: RobotComponents.Actions.RobotJointPosition.Subtraction
- uid: RobotComponents.Actions.RobotJointPosition.op_Multiply*
  commentId: Overload:RobotComponents.Actions.RobotJointPosition.op_Multiply
  isExternal: true
  name: Multiply
  nameWithType: RobotJointPosition.Multiply
  fullName: RobotComponents.Actions.RobotJointPosition.Multiply
- uid: RobotComponents.Actions.RobotJointPosition.op_Division*
  commentId: Overload:RobotComponents.Actions.RobotJointPosition.op_Division
  isExternal: true
  name: Division
  nameWithType: RobotJointPosition.Division
  fullName: RobotComponents.Actions.RobotJointPosition.Division
- uid: RobotComponents.Actions.Action.IsValid
  commentId: P:RobotComponents.Actions.Action.IsValid
  parent: RobotComponents.Actions.Action
  isExternal: true
  name: IsValid
  nameWithType: Action.IsValid
  fullName: RobotComponents.Actions.Action.IsValid
- uid: RobotComponents.Actions.RobotJointPosition.IsValid*
  commentId: Overload:RobotComponents.Actions.RobotJointPosition.IsValid
  isExternal: true
  name: IsValid
  nameWithType: RobotJointPosition.IsValid
  fullName: RobotComponents.Actions.RobotJointPosition.IsValid
- uid: RobotComponents.Actions.IDeclaration.IsValid
  commentId: P:RobotComponents.Actions.IDeclaration.IsValid
  parent: RobotComponents.Actions.IDeclaration
  isExternal: true
  name: IsValid
  nameWithType: IDeclaration.IsValid
  fullName: RobotComponents.Actions.IDeclaration.IsValid
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: RobotComponents.Actions.RobotJointPosition.Name*
  commentId: Overload:RobotComponents.Actions.RobotJointPosition.Name
  isExternal: true
  name: Name
  nameWithType: RobotJointPosition.Name
  fullName: RobotComponents.Actions.RobotJointPosition.Name
- uid: RobotComponents.Actions.IDeclaration.Name
  commentId: P:RobotComponents.Actions.IDeclaration.Name
  parent: RobotComponents.Actions.IDeclaration
  isExternal: true
  name: Name
  nameWithType: IDeclaration.Name
  fullName: RobotComponents.Actions.IDeclaration.Name
- uid: RobotComponents.Actions.IJointPosition.Name
  commentId: P:RobotComponents.Actions.IJointPosition.Name
  parent: RobotComponents.Actions.IJointPosition
  isExternal: true
  name: Name
  nameWithType: IJointPosition.Name
  fullName: RobotComponents.Actions.IJointPosition.Name
- uid: RobotComponents.Actions.RobotJointPosition.ReferenceType*
  commentId: Overload:RobotComponents.Actions.RobotJointPosition.ReferenceType
  isExternal: true
  name: ReferenceType
  nameWithType: RobotJointPosition.ReferenceType
  fullName: RobotComponents.Actions.RobotJointPosition.ReferenceType
- uid: RobotComponents.Actions.IDeclaration.ReferenceType
  commentId: P:RobotComponents.Actions.IDeclaration.ReferenceType
  parent: RobotComponents.Actions.IDeclaration
  isExternal: true
  name: ReferenceType
  nameWithType: IDeclaration.ReferenceType
  fullName: RobotComponents.Actions.IDeclaration.ReferenceType
- uid: RobotComponents.Actions.IJointPosition.ReferenceType
  commentId: P:RobotComponents.Actions.IJointPosition.ReferenceType
  parent: RobotComponents.Actions.IJointPosition
  isExternal: true
  name: ReferenceType
  nameWithType: IJointPosition.ReferenceType
  fullName: RobotComponents.Actions.IJointPosition.ReferenceType
- uid: RobotComponents.Enumerations.ReferenceType
  commentId: T:RobotComponents.Enumerations.ReferenceType
  parent: RobotComponents.Enumerations
  isExternal: true
  name: ReferenceType
  nameWithType: ReferenceType
  fullName: RobotComponents.Enumerations.ReferenceType
- uid: RobotComponents.Enumerations
  commentId: N:RobotComponents.Enumerations
  isExternal: true
  name: RobotComponents.Enumerations
  nameWithType: RobotComponents.Enumerations
  fullName: RobotComponents.Enumerations
- uid: RobotComponents.Actions.RobotJointPosition.Length*
  commentId: Overload:RobotComponents.Actions.RobotJointPosition.Length
  isExternal: true
  name: Length
  nameWithType: RobotJointPosition.Length
  fullName: RobotComponents.Actions.RobotJointPosition.Length
- uid: RobotComponents.Actions.IJointPosition.Length
  commentId: P:RobotComponents.Actions.IJointPosition.Length
  parent: RobotComponents.Actions.IJointPosition
  isExternal: true
  name: Length
  nameWithType: IJointPosition.Length
  fullName: RobotComponents.Actions.IJointPosition.Length
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: RobotComponents.Actions.RobotJointPosition.Item*
  commentId: Overload:RobotComponents.Actions.RobotJointPosition.Item
  isExternal: true
  name: Item
  nameWithType: RobotJointPosition.Item
  fullName: RobotComponents.Actions.RobotJointPosition.Item
- uid: RobotComponents.Actions.IJointPosition.Item(System.Int32)
  commentId: P:RobotComponents.Actions.IJointPosition.Item(System.Int32)
  parent: RobotComponents.Actions.IJointPosition
  isExternal: true
  name: Item[Int32]
  nameWithType: IJointPosition.Item[Int32]
  fullName: RobotComponents.Actions.IJointPosition.Item[System.Int32]
  nameWithType.vb: IJointPosition.Item(Int32)
  fullName.vb: RobotComponents.Actions.IJointPosition.Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: RobotComponents.Actions.IJointPosition.Item(System.Int32)
    name: Item
    nameWithType: IJointPosition.Item
    fullName: RobotComponents.Actions.IJointPosition.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: RobotComponents.Actions.IJointPosition.Item(System.Int32)
    name: Item
    nameWithType: IJointPosition.Item
    fullName: RobotComponents.Actions.IJointPosition.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RobotComponents.Actions.RobotJointPosition.IsFixedSize*
  commentId: Overload:RobotComponents.Actions.RobotJointPosition.IsFixedSize
  isExternal: true
  name: IsFixedSize
  nameWithType: RobotJointPosition.IsFixedSize
  fullName: RobotComponents.Actions.RobotJointPosition.IsFixedSize
- uid: RobotComponents.Actions.IJointPosition.IsFixedSize
  commentId: P:RobotComponents.Actions.IJointPosition.IsFixedSize
  parent: RobotComponents.Actions.IJointPosition
  isExternal: true
  name: IsFixedSize
  nameWithType: IJointPosition.IsFixedSize
  fullName: RobotComponents.Actions.IJointPosition.IsFixedSize
